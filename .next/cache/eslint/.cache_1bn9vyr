[{"/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useDevice.ts":"1","/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useGuest.ts":"2","/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useProfile.tsx":"3","/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useRoute.ts":"4","/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useUser.ts":"5","/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useUserAgent.ts":"6","/home/web/servers/frontend/Deepturn/app/src/core/authentication/types/AuthenticationError.ts":"7","/home/web/servers/frontend/Deepturn/app/src/core/component.ts":"8","/home/web/servers/frontend/Deepturn/app/src/core/environment.ts":"9","/home/web/servers/frontend/Deepturn/app/src/core/environments/environment.dev.ts":"10","/home/web/servers/frontend/Deepturn/app/src/core/environments/environment.interface.ts":"11","/home/web/servers/frontend/Deepturn/app/src/core/environments/environment.production.ts":"12","/home/web/servers/frontend/Deepturn/app/src/core/errors/ConfigurationError.ts":"13","/home/web/servers/frontend/Deepturn/app/src/core/errors/errorResponse.ts":"14","/home/web/servers/frontend/Deepturn/app/src/core/services/AdminService/AdminService.ts":"15","/home/web/servers/frontend/Deepturn/app/src/core/services/AdminService/IAdminService.ts":"16","/home/web/servers/frontend/Deepturn/app/src/core/services/AdminService/adminModels/iAdminAccounts.ts":"17","/home/web/servers/frontend/Deepturn/app/src/core/services/ApiService.ts":"18","/home/web/servers/frontend/Deepturn/app/src/core/services/DocumentService/DocumentService.ts":"19","/home/web/servers/frontend/Deepturn/app/src/core/services/DocumentService/IDocumentService.ts":"20","/home/web/servers/frontend/Deepturn/app/src/core/services/GuestService/GuestService.ts":"21","/home/web/servers/frontend/Deepturn/app/src/core/services/GuestService/IGuestService.ts":"22","/home/web/servers/frontend/Deepturn/app/src/core/services/HomeService/HomeService.ts":"23","/home/web/servers/frontend/Deepturn/app/src/core/services/HomeService/IHomeService.ts":"24","/home/web/servers/frontend/Deepturn/app/src/core/services/MemberService/IMemberService.ts":"25","/home/web/servers/frontend/Deepturn/app/src/core/services/MemberService/MemberService.ts":"26","/home/web/servers/frontend/Deepturn/app/src/core/services/MemberService/hooks/useSetupIntentSecret.ts":"27","/home/web/servers/frontend/Deepturn/app/src/core/services/ProductService/IProductService.ts":"28","/home/web/servers/frontend/Deepturn/app/src/core/services/ProductService/ProductService.ts":"29","/home/web/servers/frontend/Deepturn/app/src/core/services/SocialService/ISocialService.ts":"30","/home/web/servers/frontend/Deepturn/app/src/core/services/SocialService/SocialService.ts":"31","/home/web/servers/frontend/Deepturn/app/src/layouts/default/DefaultLayout.tsx":"32","/home/web/servers/frontend/Deepturn/app/src/models/CustomToken.ts":"33","/home/web/servers/frontend/Deepturn/app/src/models/CustomerContext.ts":"34","/home/web/servers/frontend/Deepturn/app/src/models/ICustomer.ts":"35","/home/web/servers/frontend/Deepturn/app/src/models/MemberToken.ts":"36","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/IPrice.ts":"37","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/IProduct.ts":"38","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/CartConfigResponse.ts":"39","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/MemberOrderHistory.ts":"40","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/MemberProductLimitResource.ts":"41","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/ProductLimitResource.ts":"42","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/ProductResource.ts":"43","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/Revenue.ts":"44","/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/ShoppingResource.ts":"45","/home/web/servers/frontend/Deepturn/app/src/models/SponsorContext.ts":"46","/home/web/servers/frontend/Deepturn/app/src/models/distributor/NewInfluencers.ts":"47","/home/web/servers/frontend/Deepturn/app/src/models/reports/PartnerDefinition.ts":"48","/home/web/servers/frontend/Deepturn/app/src/models/resources/CourseResource.ts":"49","/home/web/servers/frontend/Deepturn/app/src/models/resources/LessonResource.ts":"50","/home/web/servers/frontend/Deepturn/app/src/models/resources/MemberProgressResource.ts":"51","/home/web/servers/frontend/Deepturn/app/src/models/resources/Resource.ts":"52","/home/web/servers/frontend/Deepturn/app/src/models/resources/ResourceCollection.ts":"53","/home/web/servers/frontend/Deepturn/app/src/models/resources/SeriesResource.ts":"54","/home/web/servers/frontend/Deepturn/app/src/modules/404/Custom404.tsx":"55","/home/web/servers/frontend/Deepturn/app/src/modules/about/controller/About.tsx":"56","/home/web/servers/frontend/Deepturn/app/src/modules/about/merchantViews/AireHotelAbout/AireHotelAbout.tsx":"57","/home/web/servers/frontend/Deepturn/app/src/modules/admin/controller/Admin.tsx":"58","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminAccounts/controller/AdminAccounts.tsx":"59","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminAccounts/data/mockAccountsResponse.ts":"60","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminAccounts/views/AdminAccount/AdminAccount.tsx":"61","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminBilling/controller/AdminBilling.tsx":"62","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/controller/AdminCustomers.tsx":"63","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/functions/canViewCustomer.ts":"64","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerAdd/AdminCustomerAdd.tsx":"65","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerDetail/controller/AdminCustomerDetail.tsx":"66","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerDetail/hooks/useAdminCustomer.tsx":"67","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerDetail/hooks/useAdminCustomerDelete.tsx":"68","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerList/AdminCustomerList.tsx":"69","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminDashboard/controller/AdminDashboard.tsx":"70","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminDocuments/controller/AdminListDocuments.tsx":"71","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminInvoices/controller/AdminInvoices.tsx":"72","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminMarketing/AdminMarketing.tsx":"73","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminMesenger/AdminMesenger.tsx":"74","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminMgmt/controller/AdminMgmt.tsx":"75","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminProducts/controller/AdminProducts.tsx":"76","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminProducts/views/AdminAddProduct/AdminAddProduct.tsx":"77","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminSales/controller/AdminSales.tsx":"78","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminSystem/AdminSystem.tsx":"79","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/controller/Authentication.tsx":"80","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/controller/Login.tsx":"81","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/views/LoginView/LoginView.tsx":"82","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/views/ResetPassword/ResetPassword.tsx":"83","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/views/TwoFactorAuth/TwoFactorAuth.tsx":"84","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/SignUp/SignUp.tsx":"85","/home/web/servers/frontend/Deepturn/app/src/modules/dashboard/pages/DashboardPage/DashboardPage.tsx":"86","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/controller/Checkout.tsx":"87","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/CheckoutButton/CheckoutButton.tsx":"88","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/Collect/controller/Collect.tsx":"89","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/Collect/views/Payment.tsx":"90","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/FUTURECollect/controller/Collect.tsx":"91","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/FUTURECollect/views/Payment.tsx":"92","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/controller/Products.tsx":"93","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/ProductQuote/controller/ProductQuote.tsx":"94","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/ProductQuote/views/ProductFeatureOther/SurveyChoiceOther.tsx":"95","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/ProductQuote/views/SurveyForm/SurveyForm.tsx":"96","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/controller/ProductDescription.tsx":"97","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/views/BannerProduct/BannerProduct.tsx":"98","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/views/ProductBuyNow/ProductBuyNow.tsx":"99","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/views/ProductImage/ProductImage.tsx":"100","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/controller/ProductsListing.tsx":"101","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/views/ProductChapters/ProductChapters.tsx":"102","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/views/ProductList/ProductList.tsx":"103","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/views/ProductSlider/ProductSlider.tsx":"104","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/controller/Cart.tsx":"105","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/helpers.ts":"106","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/hooks/useCart.ts":"107","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/model/ICartItem.ts":"108","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/CartList/CartList.tsx":"109","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/CartListItem/CartListItem.tsx":"110","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/CartListItemMini/CartListItemMini.tsx":"111","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/EmptyCart/EmptyCart.tsx":"112","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/transaction/controller/Transaction.tsx":"113","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/transaction/views/TransactionItem/TransactionItem.tsx":"114","/home/web/servers/frontend/Deepturn/app/src/modules/home/controller/Home.tsx":"115","/home/web/servers/frontend/Deepturn/app/src/modules/home/views/hue/controller/Lights.tsx":"116","/home/web/servers/frontend/Deepturn/app/src/modules/home/views/hue/functions/LightHelpers.ts":"117","/home/web/servers/frontend/Deepturn/app/src/modules/home/views/surveillance/controller/Surveillance.tsx":"118","/home/web/servers/frontend/Deepturn/app/src/modules/index/controller/Index.tsx":"119","/home/web/servers/frontend/Deepturn/app/src/modules/index/views/HomeGridItem/HomeGridItem.tsx":"120","/home/web/servers/frontend/Deepturn/app/src/modules/index/views/Merchants/AireHotel/AireHotel.tsx":"121","/home/web/servers/frontend/Deepturn/app/src/modules/index/views/Merchants/Deepturn/controller/Deepturn.tsx":"122","/home/web/servers/frontend/Deepturn/app/src/modules/index/views/Merchants/NirvanaEnergy/NirvanaEnergy.tsx":"123","/home/web/servers/frontend/Deepturn/app/src/modules/profile/controller/User.tsx":"124","/home/web/servers/frontend/Deepturn/app/src/modules/profile/helpers/methodReduce.ts":"125","/home/web/servers/frontend/Deepturn/app/src/modules/profile/model/IMethod.ts":"126","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserDocs/controller/UserDocs.tsx":"127","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserDocs/views/DocumentsNone.tsx":"128","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/controller/UserMethods.tsx":"129","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/models/IPaymentMethod.ts":"130","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCreateMethod/controller/UserCreateMethod.tsx":"131","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCreateMethod/views/CreateMethodStripeForm/CreateMethodStripeForm.tsx":"132","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCurrentMethod/UserCurrentMethod.tsx":"133","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCurrentMethods/UserCurrentMethods.tsx":"134","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserSelectMethod/UserSelectMethod.tsx":"135","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserModify/UserModify.tsx":"136","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserProfile/UserProfile.tsx":"137","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserSubscriptions/controller/UserSubscriptions.tsx":"138","/home/web/servers/frontend/Deepturn/app/src/modules/services/controller/Services.tsx":"139","/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/ContactForm/ContactForm.tsx":"140","/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/controller/Navbar.tsx":"141","/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/data/routes.ts":"142","/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/hooks/useNavBreak.ts":"143","/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/views/MobileNav/MobileNav.tsx":"144","/home/web/servers/frontend/Deepturn/app/src/modules/social/controller/Social.tsx":"145","/home/web/servers/frontend/Deepturn/app/src/modules/social/views/instagram/controller/Instagram.tsx":"146","/home/web/servers/frontend/Deepturn/app/src/modules/social/views/instagram/views/InstagramAuthenticate/InstagramAuthenticate.tsx":"147","/home/web/servers/frontend/Deepturn/app/src/modules/verify/controller/Verify.tsx":"148","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyAccount/VerifyAccount.tsx":"149","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyEmail/VerifyEmail.tsx":"150","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyPassword/VerifyPassword.tsx":"151","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyPayment/VerifyPayment.tsx":"152","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyShare/VerifyShare.tsx":"153","/home/web/servers/frontend/Deepturn/app/src/pages/404/[loc].tsx":"154","/home/web/servers/frontend/Deepturn/app/src/pages/404/index.tsx":"155","/home/web/servers/frontend/Deepturn/app/src/pages/_app.tsx":"156","/home/web/servers/frontend/Deepturn/app/src/pages/_document.tsx":"157","/home/web/servers/frontend/Deepturn/app/src/pages/about/index.tsx":"158","/home/web/servers/frontend/Deepturn/app/src/pages/admin/[slug].tsx":"159","/home/web/servers/frontend/Deepturn/app/src/pages/admin/index.tsx":"160","/home/web/servers/frontend/Deepturn/app/src/pages/api/local-ip.js":"161","/home/web/servers/frontend/Deepturn/app/src/pages/authentication/[function].tsx":"162","/home/web/servers/frontend/Deepturn/app/src/pages/authentication/index.tsx":"163","/home/web/servers/frontend/Deepturn/app/src/pages/cart/[ref].tsx":"164","/home/web/servers/frontend/Deepturn/app/src/pages/cart/index.tsx":"165","/home/web/servers/frontend/Deepturn/app/src/pages/checkout/index.tsx":"166","/home/web/servers/frontend/Deepturn/app/src/pages/configure/index.tsx":"167","/home/web/servers/frontend/Deepturn/app/src/pages/dashboard/index.tsx":"168","/home/web/servers/frontend/Deepturn/app/src/pages/home/[vid].tsx":"169","/home/web/servers/frontend/Deepturn/app/src/pages/home/index.tsx":"170","/home/web/servers/frontend/Deepturn/app/src/pages/index/Index.tsx":"171","/home/web/servers/frontend/Deepturn/app/src/pages/index/[cid].tsx":"172","/home/web/servers/frontend/Deepturn/app/src/pages/index.tsx":"173","/home/web/servers/frontend/Deepturn/app/src/pages/location/[slug].tsx":"174","/home/web/servers/frontend/Deepturn/app/src/pages/location/index.tsx":"175","/home/web/servers/frontend/Deepturn/app/src/pages/product/[id].tsx":"176","/home/web/servers/frontend/Deepturn/app/src/pages/product/index.tsx":"177","/home/web/servers/frontend/Deepturn/app/src/pages/profile/index.tsx":"178","/home/web/servers/frontend/Deepturn/app/src/pages/services/Index.tsx":"179","/home/web/servers/frontend/Deepturn/app/src/pages/services/[cid].tsx":"180","/home/web/servers/frontend/Deepturn/app/src/pages/social/[platform].tsx":"181","/home/web/servers/frontend/Deepturn/app/src/pages/social/index.tsx":"182","/home/web/servers/frontend/Deepturn/app/src/pages/transaction/[slug].tsx":"183","/home/web/servers/frontend/Deepturn/app/src/pages/transaction/index.tsx":"184","/home/web/servers/frontend/Deepturn/app/src/pages/verify/[slug].tsx":"185","/home/web/servers/frontend/Deepturn/app/src/pages/verify/index.tsx":"186","/home/web/servers/frontend/Deepturn/app/src/plugins/sass-plugin.ts":"187","/home/web/servers/frontend/Deepturn/app/src/webstack/common.ts":"188","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdapTableFooter/AdapTableFooter.tsx":"189","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdapTableHeader/AdapTableHeader.tsx":"190","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdapTableAlternateView/AdapTableAlternateView.tsx":"191","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableCell/AdaptTableCell.tsx":"192","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableCellHover/AdaptTableCellHover.tsx":"193","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableLoader/AdaptTableLoader.tsx":"194","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/hooks/useTable.ts":"195","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/views/AdapTableContent.tsx":"196","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/hooks/useScrollTo.ts":"197","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/hooks/useSearch.ts":"198","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/models/IVariant.ts":"199","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/views/AdapTable.tsx":"200","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptContainer/AdaptContainer.tsx":"201","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptGrid/AdaptGrid.tsx":"202","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptToWindow/controller/AdaptToWindow.tsx":"203","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptToWindow/models/IAdaptToWindow.ts":"204","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptToWindow/views/AdaptWindowBackground/AdaptWindowBackground.tsx":"205","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/controller/Calendar.tsx":"206","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/models/ICalendar.ts":"207","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/models/IDate.ts":"208","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/models/IEvent.ts":"209","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/views/CalendarDate/CalendarDate.tsx":"210","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ColorPicker/ColorPicker.tsx":"211","/home/web/servers/frontend/Deepturn/app/src/webstack/components/CreatePDF/controller/CreatePDF.tsx":"212","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Graphs/UiBar/UiBar.tsx":"213","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Graphs/UiBarGraph/UiBarGraph.tsx":"214","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Header/components/BreadCrumbs/BreadCrumbs.tsx":"215","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Header/controller/Header.tsx":"216","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Header/views/UiHeader/UiHeader.tsx":"217","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ImageControl/ImageControl.tsx":"218","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Loader/Loader.tsx":"219","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Notification/Notification.tsx":"220","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Overlay/Overlay.tsx":"221","/home/web/servers/frontend/Deepturn/app/src/webstack/components/PlaceGrid/PlaceGrid.tsx":"222","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ServiceContainer/ServiceContainer.tsx":"223","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSClouds/controller/TJSClouds.tsx":"224","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSClouds/models/ICube.ts":"225","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSClouds/useDrag.ts":"226","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/controller/TJSCube.tsx":"227","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/controller/test.tsx":"228","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/models/ICube.ts":"229","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/useDrag.ts":"230","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/controller/UiMap.tsx":"231","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/data/mapVessels.ts":"232","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/data/token.ts":"233","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/handleResize.ts":"234","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/initializeMap.ts":"235","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/mapControls.ts":"236","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/mapRotate.ts":"237","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/mapVessels.ts":"238","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/hooks/useMapSearch.ts":"239","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/models/IMapVessel.ts":"240","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/models/IUiMap.ts":"241","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/views/MapSearch/MapSearch.tsx":"242","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/views/MapVessel/views/MapVesselDetails/MapVesselDetails.tsx":"243","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/views/MapVessel/views/MapVesselMarker/MapVesselMarker.tsx":"244","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiTerrain/controller/UiTerrain.tsx":"245","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiTerrain/models/IuITerrain.ts":"246","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Title/Title.tsx":"247","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiButton/UiButton.tsx":"248","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiCheckbox/UiCheckBox.tsx":"249","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiCollapse/UiCollapse.tsx":"250","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiDev/UiDev.tsx":"251","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiDiv/UiDiv.tsx":"252","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/FormControl/FormControl.tsx":"253","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/UiInput.tsx":"254","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/helpers/maskInput.ts":"255","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/helpers/useFocus.ts":"256","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/helpers/validateInput.ts":"257","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/views/AddressInput.tsx":"258","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiJoyStick/UiJoyStick.tsx":"259","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiKnob/UiKnob.tsx":"260","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiPill/UiPill.tsx":"261","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiSelect/UiSelect.tsx":"262","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiToggle/UiToggle.tsx":"263","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/controller/UiForm.tsx":"264","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/defaults/useCustomerAddForm.ts":"265","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/functions/FormConstraints.ts":"266","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/functions/formFieldFunctions.ts":"267","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/functions/useFormState.ts":"268","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/models/IFormModel.ts":"269","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/views/AddFieldForm/AddFieldForm.tsx":"270","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiIcon/UiIcon.tsx":"271","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiLoader/view/UiLoader.tsx":"272","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMarkDown/UiMarkDown.tsx":"273","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMedia/controller/UiMedia.tsx":"274","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMedia/views/UiMediaSlider/UiMediaSlider.tsx":"275","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMenu/UiMenu.tsx":"276","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMenuFan/UiMenuFan.tsx":"277","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiRightClick/UiRightClick.tsx":"278","/home/web/servers/frontend/Deepturn/app/src/webstack/components/modal/contexts/modalContext.tsx":"279","/home/web/servers/frontend/Deepturn/app/src/webstack/components/modal/views/modalOverlay.tsx":"280","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Capitalize.ts":"281","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/CookieHelper.ts":"282","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Dictionary.ts":"283","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Encryption.ts":"284","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/EventEmitter.ts":"285","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/IconHelper.ts":"286","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/InlineBuilders.ts":"287","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/MockData.ts":"288","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/ServiceProvider.ts":"289","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Strings/reverseString.ts":"290","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/checkString.ts":"291","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/createBuildDate.ts":"292","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/createTestId.ts":"293","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/isTextOverflowing.ts":"294","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/keyStringConverter.ts":"295","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/stringNumber.ts":"296","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/timeStamp.ts":"297","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/underScoreLess.ts":"298","/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/userExperienceFormats.ts":"299","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/interfaces/useContextMenu.tsx":"300","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/interfaces/useKeyBoard/useKeyBoard.ts":"301","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/interfaces/useMouse/useMouse.ts":"302","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useCampaign.ts":"303","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useClass.ts":"304","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useDarkMode.ts":"305","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useDocument.ts":"306","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useElement.ts":"307","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useReferrer.ts":"308","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useScroll.ts":"309","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useUserAgent.ts":"310","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useWindow.ts":"311","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/user/useLocation.ts":"312","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/brand_icons.ts":"313","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/custom_icons.ts":"314","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/fontAwesome/FontAwesome.ts":"315","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/fontAwesome/FontAwesomeLight.ts":"316","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/fontAwesome/FontAwesomeSolid.ts":"317","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/method_icons.ts":"318","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/social_icons.ts":"319","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/html/ecommerce/empty-cart.ts":"320","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/html/ecommerce/products/box.ts":"321","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/html/theme.ts":"322","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/icons.ts":"323","/home/web/servers/frontend/Deepturn/app/src/webstack/index.ts":"324","/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiOverLayoutr/controller/UiOverLayout.tsx":"325","/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiSettingsLayout/controller/UiSettingsLayout.tsx":"326","/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiTabsLayout/UiTabsLayout.tsx":"327","/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiViewLayout/controller/UiViewLayout.tsx":"328","/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiViewLayout/hooks/useViewState.ts":"329","/home/web/servers/frontend/Deepturn/app/src/webstack/models/input.ts":"330","/home/web/servers/frontend/Deepturn/app/src/webstack/models/location.ts":"331","/home/web/servers/frontend/Deepturn/app/src/webstack/types/icons.ts":"332","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerList/hooks/useAdminCustomers.tsx":"333"},{"size":6098,"mtime":1720499849379,"results":"334","hashOfConfig":"335"},{"size":902,"mtime":1720570813377,"results":"336","hashOfConfig":"335"},{"size":5810,"mtime":1720499849379,"results":"337","hashOfConfig":"335"},{"size":3019,"mtime":1720499849379,"results":"338","hashOfConfig":"335"},{"size":2266,"mtime":1720499849379,"results":"339","hashOfConfig":"335"},{"size":1018,"mtime":1720499849379,"results":"340","hashOfConfig":"335"},{"size":390,"mtime":1720499849379,"results":"341","hashOfConfig":"335"},{"size":2128,"mtime":1720499849379,"results":"342","hashOfConfig":"335"},{"size":415,"mtime":1720499849379,"results":"343","hashOfConfig":"335"},{"size":911,"mtime":1720499849379,"results":"344","hashOfConfig":"335"},{"size":1647,"mtime":1720499849379,"results":"345","hashOfConfig":"335"},{"size":933,"mtime":1720499849379,"results":"346","hashOfConfig":"335"},{"size":171,"mtime":1720499849379,"results":"347","hashOfConfig":"335"},{"size":495,"mtime":1720499849379,"results":"348","hashOfConfig":"335"},{"size":2970,"mtime":1720499849379,"results":"349","hashOfConfig":"335"},{"size":563,"mtime":1720499849379,"results":"350","hashOfConfig":"335"},{"size":1921,"mtime":1720499849379,"results":"351","hashOfConfig":"335"},{"size":5322,"mtime":1720569517917,"results":"352","hashOfConfig":"335"},{"size":2415,"mtime":1720499849379,"results":"353","hashOfConfig":"335"},{"size":531,"mtime":1720499849379,"results":"354","hashOfConfig":"335"},{"size":1027,"mtime":1720499849379,"results":"355","hashOfConfig":"335"},{"size":211,"mtime":1720499849379,"results":"356","hashOfConfig":"335"},{"size":3518,"mtime":1720499849379,"results":"357","hashOfConfig":"335"},{"size":1696,"mtime":1720499849379,"results":"358","hashOfConfig":"335"},{"size":2801,"mtime":1720499849379,"results":"359","hashOfConfig":"335"},{"size":24826,"mtime":1720570411920,"results":"360","hashOfConfig":"335"},{"size":1034,"mtime":1720499849379,"results":"361","hashOfConfig":"335"},{"size":310,"mtime":1720499849379,"results":"362","hashOfConfig":"335"},{"size":1221,"mtime":1720499849379,"results":"363","hashOfConfig":"335"},{"size":304,"mtime":1720499849379,"results":"364","hashOfConfig":"335"},{"size":1099,"mtime":1720499849379,"results":"365","hashOfConfig":"335"},{"size":1455,"mtime":1720499849379,"results":"366","hashOfConfig":"335"},{"size":580,"mtime":1720499849379,"results":"367","hashOfConfig":"335"},{"size":1953,"mtime":1720499849379,"results":"368","hashOfConfig":"335"},{"size":3920,"mtime":1720565196736,"results":"369","hashOfConfig":"335"},{"size":994,"mtime":1720499849379,"results":"370","hashOfConfig":"335"},{"size":1776,"mtime":1720499849379,"results":"371","hashOfConfig":"335"},{"size":715,"mtime":1720499849379,"results":"372","hashOfConfig":"335"},{"size":264,"mtime":1720499849379,"results":"373","hashOfConfig":"335"},{"size":735,"mtime":1720499849379,"results":"374","hashOfConfig":"335"},{"size":225,"mtime":1720499849379,"results":"375","hashOfConfig":"335"},{"size":173,"mtime":1720499849379,"results":"376","hashOfConfig":"335"},{"size":384,"mtime":1720499849379,"results":"377","hashOfConfig":"335"},{"size":962,"mtime":1720499849379,"results":"378","hashOfConfig":"335"},{"size":197,"mtime":1720499849379,"results":"379","hashOfConfig":"335"},{"size":68,"mtime":1720499849379,"results":"380","hashOfConfig":"335"},{"size":204,"mtime":1720499849379,"results":"381","hashOfConfig":"335"},{"size":236,"mtime":1720499849379,"results":"382","hashOfConfig":"335"},{"size":395,"mtime":1720499849379,"results":"383","hashOfConfig":"335"},{"size":157,"mtime":1720499849379,"results":"384","hashOfConfig":"335"},{"size":125,"mtime":1720499849379,"results":"385","hashOfConfig":"335"},{"size":65,"mtime":1720499849379,"results":"386","hashOfConfig":"335"},{"size":198,"mtime":1720499849379,"results":"387","hashOfConfig":"335"},{"size":279,"mtime":1720499849379,"results":"388","hashOfConfig":"335"},{"size":1562,"mtime":1720499849379,"results":"389","hashOfConfig":"335"},{"size":922,"mtime":1720499849379,"results":"390","hashOfConfig":"335"},{"size":5841,"mtime":1720499849379,"results":"391","hashOfConfig":"335"},{"size":2413,"mtime":1720499849379,"results":"392","hashOfConfig":"335"},{"size":3851,"mtime":1720499849379,"results":"393","hashOfConfig":"335"},{"size":16987,"mtime":1720499849379,"results":"394","hashOfConfig":"335"},{"size":2683,"mtime":1720499849379,"results":"395","hashOfConfig":"335"},{"size":352,"mtime":1720499849379,"results":"396","hashOfConfig":"335"},{"size":2535,"mtime":1720567396693,"results":"397","hashOfConfig":"335"},{"size":658,"mtime":1720564011513,"results":"398","hashOfConfig":"335"},{"size":5058,"mtime":1720568494975,"results":"399","hashOfConfig":"335"},{"size":4513,"mtime":1720564602866,"results":"400","hashOfConfig":"335"},{"size":11463,"mtime":1720564101476,"results":"401","hashOfConfig":"335"},{"size":2325,"mtime":1720499849379,"results":"402","hashOfConfig":"335"},{"size":3401,"mtime":1720563952723,"results":"403","hashOfConfig":"335"},{"size":1971,"mtime":1720499849379,"results":"404","hashOfConfig":"335"},{"size":5209,"mtime":1720499849379,"results":"405","hashOfConfig":"335"},{"size":1251,"mtime":1720499849379,"results":"406","hashOfConfig":"335"},{"size":960,"mtime":1720499849379,"results":"407","hashOfConfig":"335"},{"size":803,"mtime":1720499849379,"results":"408","hashOfConfig":"335"},{"size":1971,"mtime":1720499849379,"results":"409","hashOfConfig":"335"},{"size":2739,"mtime":1720499849379,"results":"410","hashOfConfig":"335"},{"size":2741,"mtime":1720499849379,"results":"411","hashOfConfig":"335"},{"size":2175,"mtime":1720499849379,"results":"412","hashOfConfig":"335"},{"size":6598,"mtime":1720499849379,"results":"413","hashOfConfig":"335"},{"size":4964,"mtime":1720499849379,"results":"414","hashOfConfig":"335"},{"size":1647,"mtime":1720499849379,"results":"415","hashOfConfig":"335"},{"size":2005,"mtime":1720569019672,"results":"416","hashOfConfig":"335"},{"size":1541,"mtime":1720499849379,"results":"417","hashOfConfig":"335"},{"size":2616,"mtime":1720499849379,"results":"418","hashOfConfig":"335"},{"size":6254,"mtime":1720499849379,"results":"419","hashOfConfig":"335"},{"size":1629,"mtime":1720499849379,"results":"420","hashOfConfig":"335"},{"size":4248,"mtime":1720499849383,"results":"421","hashOfConfig":"335"},{"size":3268,"mtime":1720499849383,"results":"422","hashOfConfig":"335"},{"size":1494,"mtime":1720499849383,"results":"423","hashOfConfig":"335"},{"size":2103,"mtime":1720499849383,"results":"424","hashOfConfig":"335"},{"size":1398,"mtime":1720499849383,"results":"425","hashOfConfig":"335"},{"size":2103,"mtime":1720499849383,"results":"426","hashOfConfig":"335"},{"size":586,"mtime":1720499849383,"results":"427","hashOfConfig":"335"},{"size":7959,"mtime":1720499849383,"results":"428","hashOfConfig":"335"},{"size":2167,"mtime":1720499849383,"results":"429","hashOfConfig":"335"},{"size":4221,"mtime":1720499849383,"results":"430","hashOfConfig":"335"},{"size":6017,"mtime":1720499849383,"results":"431","hashOfConfig":"335"},{"size":1270,"mtime":1720499849383,"results":"432","hashOfConfig":"335"},{"size":2563,"mtime":1720499849383,"results":"433","hashOfConfig":"335"},{"size":1159,"mtime":1720499849383,"results":"434","hashOfConfig":"335"},{"size":4005,"mtime":1720499849383,"results":"435","hashOfConfig":"335"},{"size":1762,"mtime":1720499849383,"results":"436","hashOfConfig":"335"},{"size":4360,"mtime":1720499849383,"results":"437","hashOfConfig":"335"},{"size":4027,"mtime":1720499849383,"results":"438","hashOfConfig":"335"},{"size":1377,"mtime":1720499849383,"results":"439","hashOfConfig":"335"},{"size":387,"mtime":1720499849383,"results":"440","hashOfConfig":"335"},{"size":2641,"mtime":1720499849383,"results":"441","hashOfConfig":"335"},{"size":760,"mtime":1720499849383,"results":"442","hashOfConfig":"335"},{"size":1858,"mtime":1720499849383,"results":"443","hashOfConfig":"335"},{"size":3097,"mtime":1720499849383,"results":"444","hashOfConfig":"335"},{"size":2524,"mtime":1720499849383,"results":"445","hashOfConfig":"335"},{"size":713,"mtime":1720499849383,"results":"446","hashOfConfig":"335"},{"size":4634,"mtime":1720499849383,"results":"447","hashOfConfig":"335"},{"size":335,"mtime":1720499849383,"results":"448","hashOfConfig":"335"},{"size":1323,"mtime":1720499849383,"results":"449","hashOfConfig":"335"},{"size":9301,"mtime":1720499849383,"results":"450","hashOfConfig":"335"},{"size":1198,"mtime":1720499849383,"results":"451","hashOfConfig":"335"},{"size":1087,"mtime":1720499849383,"results":"452","hashOfConfig":"335"},{"size":904,"mtime":1720499849383,"results":"453","hashOfConfig":"335"},{"size":1070,"mtime":1720499849383,"results":"454","hashOfConfig":"335"},{"size":2382,"mtime":1720499849383,"results":"455","hashOfConfig":"335"},{"size":7611,"mtime":1720499849383,"results":"456","hashOfConfig":"335"},{"size":6406,"mtime":1720499849383,"results":"457","hashOfConfig":"335"},{"size":1691,"mtime":1720499849383,"results":"458","hashOfConfig":"335"},{"size":1485,"mtime":1720499849383,"results":"459","hashOfConfig":"335"},{"size":808,"mtime":1720499849383,"results":"460","hashOfConfig":"335"},{"size":9799,"mtime":1720499849383,"results":"461","hashOfConfig":"335"},{"size":468,"mtime":1720499849383,"results":"462","hashOfConfig":"335"},{"size":4431,"mtime":1720499849383,"results":"463","hashOfConfig":"335"},{"size":120,"mtime":1720499849383,"results":"464","hashOfConfig":"335"},{"size":1877,"mtime":1720499849383,"results":"465","hashOfConfig":"335"},{"size":10810,"mtime":1720499849383,"results":"466","hashOfConfig":"335"},{"size":4574,"mtime":1720499849383,"results":"467","hashOfConfig":"335"},{"size":3629,"mtime":1720499849383,"results":"468","hashOfConfig":"335"},{"size":1410,"mtime":1720499849383,"results":"469","hashOfConfig":"335"},{"size":4032,"mtime":1720499849383,"results":"470","hashOfConfig":"335"},{"size":2140,"mtime":1720499849383,"results":"471","hashOfConfig":"335"},{"size":1013,"mtime":1720499849383,"results":"472","hashOfConfig":"335"},{"size":1098,"mtime":1720499849383,"results":"473","hashOfConfig":"335"},{"size":5440,"mtime":1720554350922,"results":"474","hashOfConfig":"335"},{"size":7075,"mtime":1720499849383,"results":"475","hashOfConfig":"335"},{"size":5003,"mtime":1720499849383,"results":"476","hashOfConfig":"335"},{"size":979,"mtime":1720499849383,"results":"477","hashOfConfig":"335"},{"size":1645,"mtime":1720499849383,"results":"478","hashOfConfig":"335"},{"size":1427,"mtime":1720499849383,"results":"479","hashOfConfig":"335"},{"size":2106,"mtime":1720499849383,"results":"480","hashOfConfig":"335"},{"size":2196,"mtime":1720499849383,"results":"481","hashOfConfig":"335"},{"size":4331,"mtime":1720499849383,"results":"482","hashOfConfig":"335"},{"size":506,"mtime":1720499849383,"results":"483","hashOfConfig":"335"},{"size":5849,"mtime":1720570740034,"results":"484","hashOfConfig":"335"},{"size":5371,"mtime":1720499849383,"results":"485","hashOfConfig":"335"},{"size":5321,"mtime":1720499849383,"results":"486","hashOfConfig":"335"},{"size":9351,"mtime":1720499849383,"results":"487","hashOfConfig":"335"},{"size":79,"mtime":1720499849383,"results":"488","hashOfConfig":"335"},{"size":79,"mtime":1720499849383,"results":"489","hashOfConfig":"335"},{"size":1597,"mtime":1720499849383,"results":"490","hashOfConfig":"335"},{"size":1022,"mtime":1720499849383,"results":"491","hashOfConfig":"335"},{"size":87,"mtime":1720499849383,"results":"492","hashOfConfig":"335"},{"size":80,"mtime":1720499849383,"results":"493","hashOfConfig":"335"},{"size":80,"mtime":1720499849383,"results":"494","hashOfConfig":"335"},{"size":930,"mtime":1720499849383,"results":"495","hashOfConfig":"335"},{"size":969,"mtime":1720499849383,"results":"496","hashOfConfig":"335"},{"size":116,"mtime":1720499849383,"results":"497","hashOfConfig":"335"},{"size":85,"mtime":1720499849383,"results":"498","hashOfConfig":"335"},{"size":85,"mtime":1720499849383,"results":"499","hashOfConfig":"335"},{"size":102,"mtime":1720499849383,"results":"500","hashOfConfig":"335"},{"size":151,"mtime":1720499849383,"results":"501","hashOfConfig":"335"},{"size":119,"mtime":1720499849383,"results":"502","hashOfConfig":"335"},{"size":131,"mtime":1720499849383,"results":"503","hashOfConfig":"335"},{"size":75,"mtime":1720499849383,"results":"504","hashOfConfig":"335"},{"size":685,"mtime":1720499849383,"results":"505","hashOfConfig":"335"},{"size":77,"mtime":1720499849383,"results":"506","hashOfConfig":"335"},{"size":184,"mtime":1720499849383,"results":"507","hashOfConfig":"335"},{"size":83,"mtime":1720499849383,"results":"508","hashOfConfig":"335"},{"size":1086,"mtime":1720499849383,"results":"509","hashOfConfig":"335"},{"size":103,"mtime":1720499849383,"results":"510","hashOfConfig":"335"},{"size":105,"mtime":1720499849383,"results":"511","hashOfConfig":"335"},{"size":79,"mtime":1720499849383,"results":"512","hashOfConfig":"335"},{"size":685,"mtime":1720499849383,"results":"513","hashOfConfig":"335"},{"size":77,"mtime":1720499849383,"results":"514","hashOfConfig":"335"},{"size":83,"mtime":1720499849383,"results":"515","hashOfConfig":"335"},{"size":83,"mtime":1720499849383,"results":"516","hashOfConfig":"335"},{"size":113,"mtime":1720499849383,"results":"517","hashOfConfig":"335"},{"size":113,"mtime":1720499849383,"results":"518","hashOfConfig":"335"},{"size":83,"mtime":1720499849383,"results":"519","hashOfConfig":"335"},{"size":83,"mtime":1720499849383,"results":"520","hashOfConfig":"335"},{"size":108,"mtime":1720499849383,"results":"521","hashOfConfig":"335"},{"size":196,"mtime":1720499849383,"results":"522","hashOfConfig":"335"},{"size":4546,"mtime":1720499849383,"results":"523","hashOfConfig":"335"},{"size":2251,"mtime":1720499849383,"results":"524","hashOfConfig":"335"},{"size":1841,"mtime":1720499849383,"results":"525","hashOfConfig":"335"},{"size":4357,"mtime":1720499849383,"results":"526","hashOfConfig":"335"},{"size":1671,"mtime":1720499849383,"results":"527","hashOfConfig":"335"},{"size":297,"mtime":1720499849383,"results":"528","hashOfConfig":"335"},{"size":3794,"mtime":1720499849383,"results":"529","hashOfConfig":"335"},{"size":8594,"mtime":1720499849383,"results":"530","hashOfConfig":"335"},{"size":1218,"mtime":1720499849387,"results":"531","hashOfConfig":"335"},{"size":1127,"mtime":1720499849387,"results":"532","hashOfConfig":"335"},{"size":733,"mtime":1720499849387,"results":"533","hashOfConfig":"335"},{"size":5395,"mtime":1720499849387,"results":"534","hashOfConfig":"335"},{"size":2322,"mtime":1720499849387,"results":"535","hashOfConfig":"335"},{"size":3466,"mtime":1720499849387,"results":"536","hashOfConfig":"335"},{"size":3294,"mtime":1720499849387,"results":"537","hashOfConfig":"335"},{"size":1196,"mtime":1720499849387,"results":"538","hashOfConfig":"335"},{"size":2135,"mtime":1720499849387,"results":"539","hashOfConfig":"335"},{"size":5146,"mtime":1720499849387,"results":"540","hashOfConfig":"335"},{"size":149,"mtime":1720499849387,"results":"541","hashOfConfig":"335"},{"size":152,"mtime":1720499849387,"results":"542","hashOfConfig":"335"},{"size":123,"mtime":1720499849387,"results":"543","hashOfConfig":"335"},{"size":3512,"mtime":1720499849387,"results":"544","hashOfConfig":"335"},{"size":3291,"mtime":1720499849387,"results":"545","hashOfConfig":"335"},{"size":6756,"mtime":1720499849387,"results":"546","hashOfConfig":"335"},{"size":4163,"mtime":1720499849387,"results":"547","hashOfConfig":"335"},{"size":1996,"mtime":1720499849387,"results":"548","hashOfConfig":"335"},{"size":1804,"mtime":1720499849387,"results":"549","hashOfConfig":"335"},{"size":4653,"mtime":1720499849387,"results":"550","hashOfConfig":"335"},{"size":2310,"mtime":1720499849387,"results":"551","hashOfConfig":"335"},{"size":3230,"mtime":1720499849387,"results":"552","hashOfConfig":"335"},{"size":4366,"mtime":1720499849387,"results":"553","hashOfConfig":"335"},{"size":5627,"mtime":1720499849387,"results":"554","hashOfConfig":"335"},{"size":1963,"mtime":1720499849387,"results":"555","hashOfConfig":"335"},{"size":3055,"mtime":1720499849387,"results":"556","hashOfConfig":"335"},{"size":1390,"mtime":1720499849387,"results":"557","hashOfConfig":"335"},{"size":2818,"mtime":1720499849387,"results":"558","hashOfConfig":"335"},{"size":786,"mtime":1720499849387,"results":"559","hashOfConfig":"335"},{"size":1246,"mtime":1720499849387,"results":"560","hashOfConfig":"335"},{"size":5333,"mtime":1720499849387,"results":"561","hashOfConfig":"335"},{"size":4239,"mtime":1720499849387,"results":"562","hashOfConfig":"335"},{"size":786,"mtime":1720499849387,"results":"563","hashOfConfig":"335"},{"size":1246,"mtime":1720499849387,"results":"564","hashOfConfig":"335"},{"size":7970,"mtime":1720499849387,"results":"565","hashOfConfig":"335"},{"size":3589,"mtime":1720499849387,"results":"566","hashOfConfig":"335"},{"size":133,"mtime":1720499849387,"results":"567","hashOfConfig":"335"},{"size":1216,"mtime":1720499849387,"results":"568","hashOfConfig":"335"},{"size":1926,"mtime":1720499849387,"results":"569","hashOfConfig":"335"},{"size":1137,"mtime":1720499849387,"results":"570","hashOfConfig":"335"},{"size":2683,"mtime":1720565214084,"results":"571","hashOfConfig":"335"},{"size":793,"mtime":1720499849387,"results":"572","hashOfConfig":"335"},{"size":658,"mtime":1720499849387,"results":"573","hashOfConfig":"335"},{"size":377,"mtime":1720499849387,"results":"574","hashOfConfig":"335"},{"size":784,"mtime":1720499849387,"results":"575","hashOfConfig":"335"},{"size":1379,"mtime":1720499849387,"results":"576","hashOfConfig":"335"},{"size":6223,"mtime":1720499849387,"results":"577","hashOfConfig":"335"},{"size":2194,"mtime":1720499849387,"results":"578","hashOfConfig":"335"},{"size":7083,"mtime":1720499849387,"results":"579","hashOfConfig":"335"},{"size":71,"mtime":1720499849387,"results":"580","hashOfConfig":"335"},{"size":1090,"mtime":1720499849387,"results":"581","hashOfConfig":"335"},{"size":3479,"mtime":1720499849387,"results":"582","hashOfConfig":"335"},{"size":828,"mtime":1720499849387,"results":"583","hashOfConfig":"335"},{"size":2471,"mtime":1720499849387,"results":"584","hashOfConfig":"335"},{"size":1491,"mtime":1720499849387,"results":"585","hashOfConfig":"335"},{"size":2067,"mtime":1720499849387,"results":"586","hashOfConfig":"335"},{"size":6485,"mtime":1720499849387,"results":"587","hashOfConfig":"335"},{"size":4364,"mtime":1720499849387,"results":"588","hashOfConfig":"335"},{"size":3822,"mtime":1720499849387,"results":"589","hashOfConfig":"335"},{"size":1079,"mtime":1720499849387,"results":"590","hashOfConfig":"335"},{"size":394,"mtime":1720499849387,"results":"591","hashOfConfig":"335"},{"size":5009,"mtime":1720499849387,"results":"592","hashOfConfig":"335"},{"size":4774,"mtime":1720499849387,"results":"593","hashOfConfig":"335"},{"size":986,"mtime":1720499849387,"results":"594","hashOfConfig":"335"},{"size":2002,"mtime":1720499849387,"results":"595","hashOfConfig":"335"},{"size":4408,"mtime":1720499849387,"results":"596","hashOfConfig":"335"},{"size":1462,"mtime":1720499849387,"results":"597","hashOfConfig":"335"},{"size":10456,"mtime":1720554368958,"results":"598","hashOfConfig":"335"},{"size":1414,"mtime":1720499849387,"results":"599","hashOfConfig":"335"},{"size":1376,"mtime":1720499849387,"results":"600","hashOfConfig":"335"},{"size":1022,"mtime":1720499849387,"results":"601","hashOfConfig":"335"},{"size":1295,"mtime":1720499849387,"results":"602","hashOfConfig":"335"},{"size":1506,"mtime":1720499849387,"results":"603","hashOfConfig":"335"},{"size":1921,"mtime":1720499849387,"results":"604","hashOfConfig":"335"},{"size":4247,"mtime":1720499849387,"results":"605","hashOfConfig":"335"},{"size":1565,"mtime":1720499849387,"results":"606","hashOfConfig":"335"},{"size":1438,"mtime":1720499849387,"results":"607","hashOfConfig":"335"},{"size":2246,"mtime":1720499849387,"results":"608","hashOfConfig":"335"},{"size":4414,"mtime":1720499849387,"results":"609","hashOfConfig":"335"},{"size":3421,"mtime":1720499849387,"results":"610","hashOfConfig":"335"},{"size":3065,"mtime":1720499849387,"results":"611","hashOfConfig":"335"},{"size":1461,"mtime":1720499849387,"results":"612","hashOfConfig":"335"},{"size":2046,"mtime":1720499849387,"results":"613","hashOfConfig":"335"},{"size":2579,"mtime":1720499849387,"results":"614","hashOfConfig":"335"},{"size":394,"mtime":1720499849387,"results":"615","hashOfConfig":"335"},{"size":1803,"mtime":1720499849387,"results":"616","hashOfConfig":"335"},{"size":1835,"mtime":1720499849387,"results":"617","hashOfConfig":"335"},{"size":1484,"mtime":1720499849387,"results":"618","hashOfConfig":"335"},{"size":333,"mtime":1720499849387,"results":"619","hashOfConfig":"335"},{"size":1846,"mtime":1720499849387,"results":"620","hashOfConfig":"335"},{"size":700,"mtime":1720499849387,"results":"621","hashOfConfig":"335"},{"size":654,"mtime":1720499849387,"results":"622","hashOfConfig":"335"},{"size":928,"mtime":1720499849387,"results":"623","hashOfConfig":"335"},{"size":161,"mtime":1720499849387,"results":"624","hashOfConfig":"335"},{"size":367,"mtime":1720499849387,"results":"625","hashOfConfig":"335"},{"size":87,"mtime":1720499849387,"results":"626","hashOfConfig":"335"},{"size":1214,"mtime":1720499849387,"results":"627","hashOfConfig":"335"},{"size":358,"mtime":1720499849387,"results":"628","hashOfConfig":"335"},{"size":994,"mtime":1720499849387,"results":"629","hashOfConfig":"335"},{"size":660,"mtime":1720499849387,"results":"630","hashOfConfig":"335"},{"size":87,"mtime":1720499849387,"results":"631","hashOfConfig":"335"},{"size":470,"mtime":1720499849387,"results":"632","hashOfConfig":"335"},{"size":8018,"mtime":1720499849387,"results":"633","hashOfConfig":"335"},{"size":1503,"mtime":1720499849387,"results":"634","hashOfConfig":"335"},{"size":1660,"mtime":1720499849387,"results":"635","hashOfConfig":"335"},{"size":1468,"mtime":1720499849387,"results":"636","hashOfConfig":"335"},{"size":628,"mtime":1720499849387,"results":"637","hashOfConfig":"335"},{"size":2593,"mtime":1720499849387,"results":"638","hashOfConfig":"335"},{"size":315,"mtime":1720499849387,"results":"639","hashOfConfig":"335"},{"size":1738,"mtime":1720499849387,"results":"640","hashOfConfig":"335"},{"size":1609,"mtime":1720499849387,"results":"641","hashOfConfig":"335"},{"size":334,"mtime":1720499849387,"results":"642","hashOfConfig":"335"},{"size":2009,"mtime":1720499849387,"results":"643","hashOfConfig":"335"},{"size":1765,"mtime":1720499849387,"results":"644","hashOfConfig":"335"},{"size":627,"mtime":1720554296604,"results":"645","hashOfConfig":"335"},{"size":3347,"mtime":1720499849387,"results":"646","hashOfConfig":"335"},{"size":13991,"mtime":1720499849387,"results":"647","hashOfConfig":"335"},{"size":782,"mtime":1720499849387,"results":"648","hashOfConfig":"335"},{"size":64420,"mtime":1720557672871,"results":"649","hashOfConfig":"335"},{"size":3779,"mtime":1720499849387,"results":"650","hashOfConfig":"335"},{"size":6274,"mtime":1720499849387,"results":"651","hashOfConfig":"335"},{"size":7393,"mtime":1720499849387,"results":"652","hashOfConfig":"335"},{"size":1039,"mtime":1720499849387,"results":"653","hashOfConfig":"335"},{"size":46377,"mtime":1720499849387,"results":"654","hashOfConfig":"335"},{"size":3076,"mtime":1720499849387,"results":"655","hashOfConfig":"335"},{"size":130908,"mtime":1720499849391,"results":"656","hashOfConfig":"335"},{"size":3620,"mtime":1720499849391,"results":"657","hashOfConfig":"335"},{"size":95,"mtime":1720499849391,"results":"658","hashOfConfig":"335"},{"size":1655,"mtime":1720499849391,"results":"659","hashOfConfig":"335"},{"size":3974,"mtime":1720499849391,"results":"660","hashOfConfig":"335"},{"size":2154,"mtime":1720499849391,"results":"661","hashOfConfig":"335"},{"size":2199,"mtime":1720499849391,"results":"662","hashOfConfig":"335"},{"size":1180,"mtime":1720499849391,"results":"663","hashOfConfig":"335"},{"size":1010,"mtime":1720499849391,"results":"664","hashOfConfig":"335"},{"size":5912,"mtime":1720499849391,"results":"665","hashOfConfig":"335"},{"size":1152,"mtime":1720499849391,"results":"666","hashOfConfig":"335"},{"size":3443,"mtime":1720564074891,"results":"667","hashOfConfig":"335"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m0901y",{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808"},{"filePath":"809","messages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853"},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856"},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859"},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862"},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867"},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888"},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898"},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909"},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918"},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"921","messages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925"},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932"},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"944","messages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"950"},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"953","messages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"955"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962"},{"filePath":"963","messages":"964","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"965","messages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"967"},{"filePath":"968","messages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"970"},{"filePath":"971","messages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"973"},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"978","messages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982"},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"985"},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994"},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"997"},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1005","messages":"1006","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009"},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012"},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1028","messages":"1029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1034","messages":"1035","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1036","messages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1038","messages":"1039","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1046","messages":"1047","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1048","messages":"1049","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1050","messages":"1051","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1052","messages":"1053","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1054","messages":"1055","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1070","messages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1076","messages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1082","messages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1084","messages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1086","messages":"1087","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1098","messages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1100"},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1103"},{"filePath":"1104","messages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1106"},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113"},{"filePath":"1114","messages":"1115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1116","messages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118"},{"filePath":"1119","messages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1121"},{"filePath":"1122","messages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1126"},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129"},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1132","messages":"1133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1134","messages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1138","messages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1143"},{"filePath":"1144","messages":"1145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1149","messages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1151","messages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153"},{"filePath":"1154","messages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1156"},{"filePath":"1157","messages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1159"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1162","messages":"1163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1164"},{"filePath":"1165","messages":"1166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1167","messages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1169","messages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1171","messages":"1172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173"},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1180"},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1190"},{"filePath":"1191","messages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1197","messages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1199","messages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1201","messages":"1202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1207"},{"filePath":"1208","messages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214"},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1217"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222"},{"filePath":"1223","messages":"1224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1225","messages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227"},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1234","messages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241"},{"filePath":"1242","messages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1249"},{"filePath":"1250","messages":"1251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1252","messages":"1253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257"},{"filePath":"1258","messages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1260","messages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1262","messages":"1263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1264"},{"filePath":"1265","messages":"1266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1267"},{"filePath":"1268","messages":"1269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270"},{"filePath":"1271","messages":"1272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1279"},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1282","messages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1284"},{"filePath":"1285","messages":"1286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1287","messages":"1288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293"},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1296","messages":"1297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1298","messages":"1299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1300","messages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1302","messages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1321","messages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1327","messages":"1328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1329","messages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1331","messages":"1332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1335","messages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1339","messages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1341","messages":"1342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1345","messages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347"},{"filePath":"1348","messages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1350","messages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1352","messages":"1353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1354"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1357"},{"filePath":"1358","messages":"1359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1360","messages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1362","messages":"1363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1364","messages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1366","messages":"1367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1368","messages":"1369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1372","messages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1374"},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1377","messages":"1378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1379","messages":"1380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1381","messages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1385","messages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1387","messages":"1388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1389","messages":"1390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1391","messages":"1392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1393","messages":"1394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1397","messages":"1398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1399","messages":"1400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1401","messages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1403","messages":"1404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1405"},{"filePath":"1406","messages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1408","messages":"1409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410"},{"filePath":"1411","messages":"1412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1415","messages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1417","messages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419"},"/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useDevice.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useGuest.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useProfile.tsx",["1420"],"import { useState, useEffect } from \"react\";\nimport { getService } from \"@webstack/common\";\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport IMemberService from \"../../services/MemberService/IMemberService\";\nimport useLocation from \"@webstack/hooks/user/useLocation\";\nimport { useRouter } from \"next/router\";\nimport { useModal } from \"@webstack/components/modal/contexts/modalContext\";\nimport Authentication from \"~/src/pages/authentication\";\n\n// UserAgent context\nexport interface UserAgentContext {\n  user_agent?: string;\n  user_agent_data: {\n    brands?: Array<{\n      brand: string;\n      version: string;\n    }>;\n    mobile: boolean;\n    platform: string;\n  } | null;\n  wan?: string;\n}\n\n// Profile context\nexport interface ProfileUserContext extends IAuthenticatedUser {\n  userAgent: UserAgentContext;\n  lngLat?: [number, number];\n}\n\nexport interface ProfileContext extends IAuthenticatedUser {\n  userAgent: UserAgentContext;\n  lngLat?: [number, number];\n}\n\ninterface UseProfileOptions {\n  require?: 'user' | 'location' | 'both';\n}\n\nexport const useProfile = ({ require }: UseProfileOptions = {}): ProfileContext | undefined => {\n  const MemberService = getService<IMemberService>('IMemberService');\n  const { isModalOpen, openModal, closeModal } = useModal();\n  const [view, setView] = useState<string>(\"sign-in\");\n  const [newCustomerEmail, setNewCustomerEmail] = useState<string | undefined>();\n  const router = useRouter();\n  const query = router.query;\n  const { lngLat, requestLocation, permissionDenied } = useLocation();\n  const [requirement, setRequirement] = useState<string | undefined>();\n  const [profile, setProfile] = useState<ProfileContext | undefined>(() => {\n    const initialUser = MemberService.getCurrentUser();\n    const userAgent = {\n      user_agent: '',\n      user_agent_data: null,\n      wan: '',\n    };\n    return initialUser ? { ...initialUser, userAgent, lngLat } : undefined;\n  });\n\n  // UseEffect for user agent detection\n  useEffect(() => {\n    const handleLoad = async () => {\n      const user_agent = window.navigator.userAgent;\n      const nav: any = navigator;\n      const user_agent_data = 'userAgentData' in nav ? nav.userAgentData : null;\n\n      setProfile(prevProfile => ({\n        ...prevProfile!,\n        userAgent: { user_agent, user_agent_data }\n      }));\n\n      try {\n        const response = await fetch('https://ipapi.co/json/');\n        if (response.ok) {\n          const data = await response.json();\n          const wan = data.ip;\n          setProfile(prevProfile => ({\n            ...prevProfile!,\n            userAgent: { ...prevProfile!.userAgent, wan }\n          }));\n        } else {\n          console.error('Failed to fetch IP address information.');\n        }\n      } catch (error) {\n        console.error('Error fetching IP address information:', error);\n      }\n    };\n\n    handleLoad();\n    window.addEventListener('load', handleLoad);\n\n    return () => {\n      window.removeEventListener('load', handleLoad);\n    };\n  }, []);\n\n  // Authentication functions\n  const openAuthenticationModal = (initialView: string) => {\n    if (isModalOpen) return;\n    setView(initialView);\n    openModal({\n      title:\"sign in \",\n      children: (\n        <Authentication \n          view={initialView} \n          onClose={closeModal} \n          onViewChange={setView} \n          onSignup={handleSignup} \n        />\n      ),\n    });\n  };\n\n  const handleSignup = (response: any) => {\n    const status = response?.status;\n    if (!status) {\n      alert(\"dev, handle this! 212\");\n      return;\n    }\n\n    let label = \"404, an error occurred signing up.\";\n    switch (status) {\n      case 'created':\n        label = `email: ${response?.email}, successfully created.`;\n        break;\n      case 'existing':\n        label = `email: ${response?.email}, exists.`;\n        break;\n      default: break;\n    }\n    setView('sign-in');\n    setNewCustomerEmail(response.email);\n  };\n\n  useEffect(() => {\n    if (query && query.verify && view !== 'verify') {\n      setView('verify');\n    }\n    if (newCustomerEmail !== undefined && !isModalOpen && view !== 'sign-in') setView(\"sign-in\");\n  }, [query, isModalOpen, newCustomerEmail, view]);\n\n  // Effects for handling user and location requirements\n  useEffect(() => {\n    if (lngLat) {\n      setProfile(prevProfile => ({\n        ...prevProfile!,\n        lngLat\n      }));\n    }\n  }, [lngLat]);\n\n  useEffect(() => {\n    if (profile && !profile.userAgent.user_agent) {\n      setProfile(prevProfile => ({\n        ...prevProfile!,\n        userAgent: {\n          user_agent: window.navigator.userAgent,\n          user_agent_data: (navigator as any).userAgentData || null\n        }\n      }));\n    }\n  }, [profile]);\n\n  const addUser = () => {\n    if (!require || (require === 'location' && profile?.id && requirement === 'user') && isModalOpen) return;\n    else if (!requirement || Boolean(require !== 'location' || requirement !== 'done')) setRequirement('user');\n    openAuthenticationModal(\"sign-in\");\n  };\n\n  const addLocation = () => {\n    if (requirement === 'user' && view === 'sign-in' && !isModalOpen) setRequirement('location');\n    else if (profile || require === 'location' ) setRequirement('location');\n  };\n\n  useEffect(() => {\n    if(!require)return;\n    // console.log(\"[ useProfile ]\",{view, requirement, profile})\n    if (!profile?.id && requirement === undefined) addUser();\n    if (requirement !== 'location') addLocation();\n    if (requirement === 'location' && !profile?.lngLat && !isModalOpen && !permissionDenied) requestLocation();\n    if (permissionDenied) {\n      setRequirement('done');\n      setProfile(prevProfile => ({\n        ...prevProfile!,\n        lngLat: [0, 0]\n      }));\n    }\n  }, [isModalOpen, permissionDenied, requirement]);\n\n  return profile;\n};\n\nexport default useProfile;","/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useRoute.ts",["1421","1422"],"import { useRouter } from 'next/router';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useClearance, useUser } from './useUser';\nimport { IRoute, useClearanceRoutes } from '@shared/components/Navbar/data/routes';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\n\ninterface ORoute{\n  selectedUser:IAuthenticatedUser | undefined;\n  pathname:string;\n  explicitRouter:(e:any)=>void;\n  routeTitle?:string | false;\n};\n\n\nconst useRoute = (): ORoute => {\n  const user = useUser();\n  const [selectedUser, setUser] = useState<IAuthenticatedUser | undefined>();\n  const router = useRouter();\n  const clearanceRoutes = useClearanceRoutes();\n  const level = useClearance();\n  const handleRouteTitle = () => String(router.pathname)?.length && router.pathname.split('/')[1] || false;\n  const routeTitle = handleRouteTitle();\n\n\n  const renderTriggers = [user, selectedUser, setUser, clearanceRoutes, level];\n\n  const explicitRouter = (route: IRoute) => {\n    if (route?.href) router.push(route.href, undefined, { shallow: false });\n  };\n  const implicitRouter = useCallback(() => {\n\n    if (user && !selectedUser) setUser(user);\n    if (clearanceRoutes) {\n      const matchingRoute = clearanceRoutes.find(clearRoute => {\n        const routePathWithoutQuery = clearRoute?.href;\n        if (routePathWithoutQuery === router.pathname) {\n          return true;\n        }\n        else if (\n          (\n            Boolean(clearRoute.clearance && clearRoute.clearance >= level) ||\n            Boolean(!clearRoute.clearance)\n          )) {\n          return false;\n        }\n        else if (clearRoute?.items) {\n          return clearRoute.items.some(item => {\n            const itemPathWithoutQuery = item?.href.split('?')[0];\n            return itemPathWithoutQuery === router.pathname;\n          });\n        }\n        return false;\n      });\n      if (matchingRoute) {\n        const hrefIsString:boolean = typeof matchingRoute?.href === 'string';\n        const notCurrent = matchingRoute?.href && !router.asPath.includes(matchingRoute?.href) || 'current-route';\n        const canNavigate = Boolean( typeof hrefIsString === 'boolean' && typeof notCurrent === 'boolean');\n        const emailVerified = Boolean(router.pathname == '/verify' && router?.query?.vid == 'email' && user);\n        if(emailVerified)router.push('/profile');\n        if(canNavigate){\n          router.push(String(matchingRoute.href), undefined, { shallow: true });\n        }\n      } else if (router.asPath !== '/authentication/signout') {\n        let currentPath: string = router.asPath;\n        if (currentPath.includes('/404?')) {\n          router.push('/');\n        } else {\n          router.push(`/404?loc=${currentPath}`);\n        }\n      }\n    }\n  }, [...renderTriggers]); \n  const pathname: string = router.pathname;\n  useEffect(() => {\n    implicitRouter();\n  }, [ implicitRouter  ]); // Added routeTitle to dependencies array\n  \n\n  return { selectedUser, pathname, explicitRouter, routeTitle};\n};\n\nexport default useRoute;\n","/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useUser.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/authentication/hooks/useUserAgent.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/authentication/types/AuthenticationError.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/component.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/environment.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/environments/environment.dev.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/environments/environment.interface.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/environments/environment.production.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/errors/ConfigurationError.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/errors/errorResponse.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/AdminService/AdminService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/AdminService/IAdminService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/AdminService/adminModels/iAdminAccounts.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/ApiService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/DocumentService/DocumentService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/DocumentService/IDocumentService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/GuestService/GuestService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/GuestService/IGuestService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/HomeService/HomeService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/HomeService/IHomeService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/MemberService/IMemberService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/MemberService/MemberService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/MemberService/hooks/useSetupIntentSecret.ts",["1423"],"import { getService } from '@webstack/common';\nimport { useEffect, useState } from 'react';\nimport IMemberService, { SetupIntentSecretRequest } from '../IMemberService';\n\nconst useSetupIntentSecret = (user?: SetupIntentSecretRequest) => {\n    const MemberService = getService<IMemberService>(\"IMemberService\");\n    const [clientSecret, setClientSecret] = useState();\n    const fetchClientSecret = async () => {\n        if(clientSecret || !user)return;\n        const customer_id = user?.id;\n        if(!customer_id){\n            console.error(\"Setup intent, no customer_id\");\n            return;\n        }\n        const response = await MemberService.createSetupIntent(customer_id);\n        if (response?.client_secret) {\n            setClientSecret(response.client_secret);\n        } else {\n            console.error(\"Client secret not found in the response\", response);\n        }\n    };\n    useEffect(() => {\n        fetchClientSecret();\n    },[user, setClientSecret]);\n  return clientSecret;\n};\n\nexport default useSetupIntentSecret;","/home/web/servers/frontend/Deepturn/app/src/core/services/ProductService/IProductService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/ProductService/ProductService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/SocialService/ISocialService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/core/services/SocialService/SocialService.ts",[],"/home/web/servers/frontend/Deepturn/app/src/layouts/default/DefaultLayout.tsx",["1424"],"import React, { ReactElement, useEffect, useRef } from \"react\";\nimport styles from './DefaultLayout.scss'; // Changed to .css import\nimport Title from \"@webstack/components/Title/Title\";\nimport environment from \"~/src/core/environment\";\n\ninterface IProps {\n  children: ReactElement;\n}\n\nconst MainLayout = (props: IProps) => {\n  const mainRef = useRef<any>();\n  const mid = environment.merchant.mid;\n\n  const styleMerchant = () => {\n    if (!mid || !mainRef?.current) return;\n    \n    // // Set margin-top based on header height\n    // const mainRefStyle = mainRef.current.style;\n    // const headerHeight = document.getElementById('header-container')?.offsetHeight;\n    // if (headerHeight) {\n    //   mainRefStyle.marginTop = `${headerHeight}px`;\n    // }\n\n    // Dynamically load the merchant-specific stylesheet\n    const existingLink = document.querySelector(`link[href*=\"${mid}.css\"]`);\n    if (!existingLink) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = `/styles/merchants/${mid}.css`;\n      document.head.appendChild(link);\n    }\n  };\n\n  useEffect(() => {\n    styleMerchant();\n    window.addEventListener('resize', styleMerchant);\n    return () => window.removeEventListener('resize', styleMerchant);\n  }, []);\n  \n  return (\n    <>\n      <Title />\n      <style jsx>{styles}</style>\n      <main ref={mainRef}>\n        {props.children}\n      </main>\n    </>\n  );\n}\n\nexport default MainLayout;\n","/home/web/servers/frontend/Deepturn/app/src/models/CustomToken.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/CustomerContext.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/ICustomer.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/MemberToken.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/IPrice.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/IProduct.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/CartConfigResponse.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/MemberOrderHistory.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/MemberProductLimitResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/ProductLimitResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/ProductResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/Revenue.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/Shopping/old/ShoppingResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/SponsorContext.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/distributor/NewInfluencers.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/reports/PartnerDefinition.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/resources/CourseResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/resources/LessonResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/resources/MemberProgressResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/resources/Resource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/resources/ResourceCollection.ts",[],"/home/web/servers/frontend/Deepturn/app/src/models/resources/SeriesResource.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/404/Custom404.tsx",["1425"],"// Relative Path: ./404.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './Custom404.scss';\nimport Image from 'next/image';\nimport { useRouter } from 'next/router';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport UiButton from '@webstack/components/UiButton/UiButton';\n\n// Remember to create a sibling SCSS file with the same name as this component\n\nconst Custom404: React.FC = () => {\n  const router = useRouter();\n  const [location, setLoc ]=useState<string>('');\n\n  \n  useEffect(() => {\n    if(router.query && typeof router.query.loc == 'string')setLoc(router.query.loc);\n  }, []);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='custom-404'>\n        <div className='custom-404__container'>\n          <div className='custom-404__content'>\n            <div className='custom-404__content--header'>\n              <div className='custom-404__content--header__title'>\n                <div>\n                  <UiButton \n                  variant='lite' \n                  traits={{beforeIcon:'fa-chevron-left'}} onClick={()=>router.push('/')}>back</UiButton>\n                </div>\n                <UiIcon icon='fa-exclamation-triangle' />{`This page does not exist`}\n              </div>\n              <div className='custom-404__content--header__location'>\n              {location}\n              </div>\n\n            </div>\n            <div className='custom-404__content--content'>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Custom404;\n","/home/web/servers/frontend/Deepturn/app/src/modules/about/controller/About.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/about/merchantViews/AireHotelAbout/AireHotelAbout.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/controller/Admin.tsx",["1426"],"// Relative Path: ./admin.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './Admin.scss';\nimport UiSettingsLayout from '@webstack/layouts/UiSettingsLayout/controller/UiSettingsLayout';\nimport AdminCustomers from '../views/AdminCustomers/controller/AdminCustomers';\nimport AdminProducts from '../views/AdminProducts/controller/AdminProducts';\nimport AdminListDocuments from '../views/AdminDocuments/controller/AdminListDocuments';\nimport AdminSystem from '../views/AdminSystem/AdminSystem';\nimport AdminAccounts from '../views/AdminAccounts/controller/AdminAccounts';\nimport { useClearance } from '~/src/core/authentication/hooks/useUser';\nimport AdminMarketing from '../views/AdminMarketing/AdminMarketing';\nimport { useRouter } from 'next/router';\nimport AdminDashboard from '../views/AdminDashboard/controller/AdminDashboard';\nimport AdminMgmt from '../views/AdminMgmt/controller/AdminMgmt';\nimport AdminSales from '../views/AdminSales/controller/AdminSales';\n\n\n\nconst Admin = () => {\n  const initialViews = {\n    management: <AdminMgmt/>,\n    sales: <AdminSales/>,\n    operations: <h1>Operations</h1>,\n    finance: <h1>Finance and Accounting</h1>,\n    marketing: <h1>Marketing</h1>,\n    humanResources: <h1>Human Resources</h1>,\n    customerService: <h1>Customer Service</h1>,\n    infoTechnology: <h1>Information Technology</h1>,\n    develop: <h1>Research and Development</h1>,\n    legal: <h1>Legal</h1>,\n    procurement: <h1>Procurement</h1>,\n    strategicPlanning: <h1>Strategic Planning</h1>,\n  }\n  const [views, setViews]=useState<any>();\n  \n  // const initialViews = {\n  //   dashboard: <AdminDashboard />,\n  //   sales: <AdminDashboard />,\n  //   customers: <AdminCustomers />,\n  //   products: <AdminProducts />,\n  //   invoice: <AdminInvoices />,\n  //   documents: <AdminListDocuments />,\n  //   system: <AdminSystem />,\n  //   messenger: <AdminMesenger />,\n  //   marketing: <AdminMarketing />,\n  // }\n  const level = useClearance();\n  useEffect(() => {\n    if(level < 10 && views )return;\n    if (level &&  level >= 10 )setViews({...initialViews, ['accounts']:<AdminAccounts />});\n    else setViews(initialViews);\n  }, []);\n  if( views === undefined)return <>not authorized</>;\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <UiSettingsLayout\n        title=\"admin\"\n        // subTitle={}\n        views={views}\n      />\n    </>\n  );\n};\nexport default Admin;      ","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminAccounts/controller/AdminAccounts.tsx",["1427"],"import React, { useEffect, useState } from 'react';\nimport styles from './AdminAccounts.scss';\nimport { getService } from '@webstack/common';\nimport IAdminService from '~/src/core/services/AdminService/IAdminService';\nimport AdapTable from '@webstack/components/AdapTable/views/AdapTable';\nimport AdaptTableCell, { NaCell } from '@webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableCell/AdaptTableCell';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport { phoneFormat } from '@webstack/helpers/userExperienceFormats';\nimport IAccount from '~/src/core/services/AdminService/adminModels/iAdminAccounts';\nimport AdminAccount from '../views/AdminAccount/AdminAccount';\n\n// Remember to create a sibling SCSS file with the same name as this component\n\n\nconst AdminAccounts = () => {\n  const adminService = getService<IAdminService>(\"IAdminService\");\n  const [accounts, setaccounts] = useState<IAccount[] | undefined>();\n  const [view, setView]=useState<'list' | 'description'>('list');\n  const listAccounts = async () => {\n    const formatAccounts = (newAccounts: any)=>{\n      const formatted = newAccounts.map((account:IAccount,index: number)=>{\n        const business_profile = account.business_profile ?? null;\n        return {\n          // business_profile:JSON.stringify(business_profile),\n          id: account.id,\n          account: <AdaptTableCell cell='member' data={{\n            id:account.id,\n            name:business_profile.name,\n            email:account.email ?? 'no email',\n            phone:business_profile.support_phone\n          }}/>,\n          support: <AdaptTableCell cell='member' data={{\n            id:account.id,\n            name:business_profile.name,\n            email:business_profile.support_email ?? 'no email',\n            phone:business_profile.support_phone\n          }}/>,\n          address:<AdaptTableCell cell='address' data={business_profile?.support_address}/>,\n          phone: business_profile.support_phone?<UiButton variant='link' size='sm' href={`tel://${business_profile?.support_phone}`}>{\n            phoneFormat(business_profile.support_phone)\n          }</UiButton>:<NaCell/>,\n          url: business_profile.url?<UiButton size='sm' variant='link' target='_blank' href={`https://${business_profile.url}`}>{business_profile.url}</UiButton>:<NaCell/>,\n        }\n      })\n      // console.log('[ AN ACCOUNTS ]', formatted);\n      setaccounts(formatted)\n    };\n    try {\n      // const response:any = mockAccountsResponse;\n      const response = await adminService.listAccounts();\n      // console.log(response)\n      response?.data && setaccounts(response.data);\n      formatAccounts(response.data)\n    } catch (e: any) {\n      console.log('[ ADMIN ACCONTS get Account Err ]', e)\n    }\n  }\n  useEffect(() => {\n    if (!accounts && view === 'list') {\n      listAccounts()\n    }else if(view !== 'list'){\n\n    }\n  }, []);\n  return (\n    <>\n      <style jsx>{styles}</style>\n\n      <div className='admin-accounts'>\n        <h1>Admin Accounts</h1>\n        {accounts && view === 'list' && <AdapTable data={accounts} options={{hideColumns:['id']}} onRowClick={(account: any)=>setView(account.id)}/>}\n        {view !== 'list' && <AdminAccount accountId={view}/>}\n      </div>\n    </>\n  );\n};\n\nexport default AdminAccounts;\n\n\n\n       {/* {accounts && (\n          accounts.map((key, index) => {\n            return <div key={index} className='admin-accounts__account'>\n              {Object.entries(key).map(([key, value]) => {\n                return <div key={key} className='admin-accounts__account--line'>\n                  <div className='admin-accounts__account--line-key'>{key}\n                  </div>\n                  <div className='admin-accounts__account--line-value'>{value}</div>\n                </div>\n              })}\n            </div>\n          }) */}","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminAccounts/data/mockAccountsResponse.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminAccounts/views/AdminAccount/AdminAccount.tsx",["1428"],"// Relative Path: ./AdminAccount.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './AdminAccount.scss';\nimport IAccount from '~/src/core/services/AdminService/adminModels/iAdminAccounts';\nimport { getService } from '@webstack/common';\nimport IAdminService from '~/src/core/services/AdminService/IAdminService';\nimport UiButton from '@webstack/components/UiButton/UiButton';\n\n// Remember to create a sibling SCSS file with the same name as this component\n\nconst AdminAccount = ({ accountId }: { accountId: string }) => {\n    const [account, setaccount] = useState<any>();\n    const adminService = getService<IAdminService>(\"IAdminService\");\n    const getAccount = async () => {\n        try {\n            setaccount(await adminService.getAccount(accountId));\n        } catch (e: any) { console.log('[ AdminAccount.getAccount()<ERROR> ]', e) }\n    }\n\n    useEffect(() => {\n        if (accountId && !account) getAccount();\n    }, [accountId]);\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='admin-account'>\n                <div className='admin-account__header'>\n                    <div className='admin-account__header--title'>\n                        {accountId}\n                    </div>\n                    <div className='admin-account__header--contact'>\n                        {account?.email && <UiButton size='sm' href={`mailto://${account.email}`}>\n                            {account.email}</UiButton>}\n                        {account?.business_profile.support_phone && <UiButton type='tel' size='sm' href={`mailto://${account.email}`}>\n                            {account.business_profile.support_phone}</UiButton>}\n\n                    </div>\n                </div>\n                <div className='admin-account__info'></div>\n                <div className='admin-account__info'>\n                    {account?.business_profile && Object.entries(account).map((info: any, index: number) => {\n                        return <div key={index} className='admin-account__info--line'>\n                            {info[0]}\n                        </div>\n                    })}\n                </div>\n                <hr />\n                <div className='admin-account__info'>\n                    {account?.business_profile && Object.entries(account.business_profile).map((info: any, index: number) => {\n                        return <div key={index} className='admin-account__info--line'>\n                            {info[0]}: {JSON.stringify(info[1])}\n                        </div>\n                    })}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AdminAccount;","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminBilling/controller/AdminBilling.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/controller/AdminCustomers.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/functions/canViewCustomer.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerAdd/AdminCustomerAdd.tsx",["1429"],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerDetail/controller/AdminCustomerDetail.tsx",["1430"],"import React, { useEffect } from 'react';\nimport styles from './AdminCustomerDetail.scss';\nimport UiForm from '@webstack/components/UiForm/controller/UiForm';\nimport { useRouter } from 'next/router';\nimport UiCollapse from '@webstack/components/UiCollapse/UiCollapse';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport useAdminCustomer from '../hooks/useAdminCustomer';\nimport keyStringConverter from '@webstack/helpers/keyStringConverter';\nimport UiLoader from '@webstack/components/UiLoader/view/UiLoader';\nimport { findField } from '@webstack/components/UiForm/functions/formFieldFunctions';\nimport { useClearance } from '~/src/core/authentication/hooks/useUser';\nimport useAdminCustomerDelete from '../hooks/useAdminCustomerDelete';\nimport UiInput from '@webstack/components/UiForm/components/UiInput/UiInput';\n\nconst AdminCustomerDetails: React.FC<any> = ({ id, setView }: { id?: string, setView: (e: any) => void }) => {\n  const router = useRouter();\n  const customer_id = router?.query?.cid && String(router?.query?.cid) || id;\n  const {level}=useClearance();\n  const { \n    customer,\n    displayFields,\n    setFields,\n    modifyCustomer,\n    initialCustomer,\n\n  } = useAdminCustomer({customer_id, level});\n  const customerName = customer?.contact && findField(customer.contact, 'name')?.value || ''\n  const hasFormChanged = (formId:string)=>{\n    let initialForm:any = false;\n    if(initialCustomer[formId])initialForm = initialCustomer[formId];\n    if(!initialForm){alert('error');return;}\n    const changedFields = Object.values(customer[formId]).filter((f:any,key:number)=>{\n      const initialValue:any = findField(initialCustomer[formId], f.name)?.value;\n        if(formId !== 'contact' || initialValue == undefined )return;\n       if(f.value !== initialValue)return f\n       else if(f.name == 'address' && initialValue?.line1 !== f.value?.line1)return f\n    }\n    )\n    changedFields?.length && console.log({filt: changedFields})\n    } \n  const {deleteCustomer} = useAdminCustomerDelete(customer_id)\n  useEffect(() => {}, [hasFormChanged]);\n  if (customer) {\n    return (\n      <>\n        <style jsx>{styles}</style>\n        {/* {JSON.stringify(initialCustomer.contact)} */}\n        <div className='admin-customer-detail'>\n          {Object.entries(customer).map(([formKey, formVal]: any, index: number) => {\n            hasFormChanged(formKey)\n\n            return <div key={formKey} className={`admin-customer-detail__${displayFields[formKey] ? 'display' : 'form'}`}>\n              {displayFields[formKey] && (\n                <>\n                  <div className='display--list'>\n                    {formKey && Object.entries(displayFields[formKey]).map(([listItem, listValue]: any, index: number) => (\n                      <div key={index} className='display--list-item'>\n                        <div className='display--list-item__key'>\n                          {keyStringConverter(listItem)}\n                        </div>\n                        <div className='display--list-item__value'>\n                          {typeof listValue != 'object' &&listItem!='password'&& listValue || <UiInput type='password' size=\"sm\" variant=\"flat\" value={listValue}/>}\n\n                          {typeof listValue == 'object' && Object.entries(listValue).map(([lk,lv]:any)=> \n                          <div key={lk}>\n                            {lk}:{String(lv)}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <div className='admin-customer-detail__display--title'>{formKey}</div>\n                </>\n              )}\n              <UiCollapse key={`${index}-${formKey}`} label={displayFields[formKey] ? `Edit ${keyStringConverter(formKey)}` : keyStringConverter(formKey)}>\n                <UiForm fields={formVal} onChange={(e) => setFields({ form: formKey, e })} />\n              </UiCollapse>\n            </div>\n        })}\n        </div>\n        <div className='admin-customer-detail__actions'>\n          <UiButton onClick={modifyCustomer}>Update {customerName}</UiButton>\n        </div>\n        <div style={{ marginLeft: \"auto\" }}>\n          <UiButton variant='error' onClick={\n            ()=>deleteCustomer()}\n          >\n            Delete {customerName}\n          </UiButton>\n        </div>\n      </>\n    );\n  }\n\n  if (customer === false) return <>...no customer</>;\n\n  return <UiLoader />;\n};\n\nexport default AdminCustomerDetails;\n","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerDetail/hooks/useAdminCustomer.tsx",["1431"],"import { getService } from \"@webstack/common\";\nimport { useNotification } from \"@webstack/components/Notification/Notification\";\nimport { findField } from \"@webstack/components/UiForm/functions/formFieldFunctions\";\nimport { IFormField } from \"@webstack/components/UiForm/models/IFormModel\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport IAdminService from \"~/src/core/services/AdminService/IAdminService\";\nimport { useModal } from \"@webstack/components/modal/contexts/modalContext\";\nimport { useRouter } from \"next/router\";\nimport { dateFormat } from \"@webstack/helpers/userExperienceFormats\";\n\nconst useAdminCustomer = ({ customer_id, level }: { customer_id?: string, level: number }) => {\n  const router = useRouter();\n  const adminService = getService<IAdminService>('IAdminService');\n  const [customer, setCustomerState] = useState<any>();\n  const [initialCustomer, setInitialCustomer] = useState<any>();\n  const [displayFields, setDisplayFields] = useState<any>({});\n  const [notification, setNotification] = useNotification();\n  const { openModal } = useModal();\n\n  const getCustomer = useCallback(async () => {\n    if (!customer_id || customer || initialCustomer) return;\n\n    try {\n      const response = await adminService.getCustomer(customer_id);\n      console.log({ response });\n      if (response?.error) {\n        setNotification({ active: true, dismissable: true, apiError: response });\n        console.error(\"Couldn't get customer\");\n        return;\n      }\n\n      const context: any = { contact: [] };\n      initForms(response, context);\n      setCustomerState(context);\n      setInitialCustomer(context);\n    } catch (error) {\n      setCustomerState(false);\n      console.error('[ ADMIN CUSTOMER DETAILS ]', error);\n    }\n  }, [customer_id, customer, initialCustomer, adminService, setNotification]);\n\n  const handleField = (context: any, formName: string, field: { name: any, value: any }) => {\n    const { name, value } = field;\n    const typeIsNameFields = ['password', 'email', 'address'];\n    let readOnlyFields = [\n      'id', 'object', 'default_source', 'invoice_prefix', 'test_clock', 'tax_exempt', 'currency', 'service', 'created',\n      'email_verified', 'password_token', 'type', 'server_url',\n    ];\n    if (level >= 11) readOnlyFields.push('clearance');\n\n    let fieldContext: IFormField = { name: String(name).toLowerCase(), value, label: name, type: 'text' };\n    if (typeIsNameFields.includes(name)) fieldContext.type = name;\n    if (readOnlyFields.includes(name)) fieldContext.readonly = true;\n    if (typeof value === 'number' || !isNaN(parseFloat(value))) fieldContext.type = parseFloat(value) > 99 ? 'tel' : 'pill';\n    if (name === 'created') fieldContext.value = dateFormat(Number(String(value).substring(0, 10)), { isTimestamp: true });\n    if (typeof value === 'boolean') fieldContext.type = 'checkbox';\n\n    // Split name into firstName and lastName\n    if (name === 'name' && formName == \"contact\") {\n      const [firstName, lastName] = value.split(' ');\n      context[formName].push({ ...fieldContext, name: 'firstName', label: 'first name', value: firstName, autoComplete: 'given-name', required: !!firstName });\n      context[formName].push({ ...fieldContext, name: 'lastName', label: 'last name', value: lastName, autoComplete: 'family-name', required: !!lastName });\n      return;\n    }\n\n    // Add autoComplete\n    if (['firstName', 'lastName', 'address', 'phone'].includes(name)) {\n      fieldContext.autoComplete = name.replace('-', ' ');\n    }\n\n    // Add required fields\n    if (['address', 'firstName', 'lastName', 'phone'].includes(name) && value) {\n      fieldContext.required = true;\n    }\n    if (!context[formName]) context[formName] = [fieldContext];\n    else context[formName].push(fieldContext);\n  };\n\n  const initForms = (response: any, context: any, parent?: string) => {\n    const isContactField = (value: any) => ['string', 'number', undefined, 'boolean'].includes(typeof value) || !value;\n\n    Object.entries(response).forEach(([respFldKey, respFldVal]: any) => {\n      const keyToUse = parent || 'contact';\n\n      if (isContactField(respFldVal)) {\n        handleField(context, keyToUse, { name: respFldKey, value: respFldVal });\n        updateDisplayFields(keyToUse, respFldKey, respFldVal);\n      } else if (respFldVal?.constructor === Object) {\n        if (![\"data\", \"address\", 'devices'].includes(respFldKey)) {\n          initForms(respFldVal, context, respFldKey);\n        } else if (respFldKey === 'address') {\n          context.contact.push({ name: respFldKey, value: respFldVal, type: respFldKey });\n        } else {\n          setDisplayFields((prevDisplay: any) => ({ ...prevDisplay, [keyToUse]: respFldVal }));\n        }\n      } else if (respFldVal?.constructor === Array) {\n        respFldVal.forEach((val: any, listVal: number) => {\n          let listKeyToUse = keyToUse;\n\n          const lastLetter = respFldKey.slice(-1);\n          if (context[listKeyToUse]) listKeyToUse = `${lastLetter === 's' ? respFldKey.slice(0, -1) : respFldKey}-${listVal}`;\n          Object.entries(val).forEach(([dictKey, dictValue]: any) => {\n            if (dictValue?.constructor === Object) {\n\n              Object.entries(dictValue).forEach(([k, v]:any) => {\n                if (v?.constructor == Array) {\n                  // console.log({parent, keyToUse, listKeyToUse, dictKey,  k,v})\n                  // const toUpdate = customer[listKeyToUse][dictKey][k];\n                  // console.log({toUpdate})\n                  // setCustomerState({...customer, })\n                  if(!displayFields[listKeyToUse]){\n                    displayFields[listKeyToUse]=v\n                    updateDisplayFields(listKeyToUse, k, typeof v != 'object'? v:v);\n                    console.log({lk:displayFields[listKeyToUse]})\n                    // console.log({FOOP:[`${k}-${arrInd}`]})\n                  }\n                  else{\n                    Object.values(v).map((vl, arrInd: number) =>{\n                      console.log(listKeyToUse,{name:`${k}-${arrInd}`,value:vl})\n                      // handleField(context, keyToUse, { name: respFldKey, value: respFldVal });\n                      // updateDisplayFields(listKeyToUse, `${k}-${arrInd}`, typeof vl != 'object'? vl:JSON.stringify(vl))\n                    }\n                    )\n                  }\n                  // TODO STILL NOT MAPPING REQUEST RIGHT \n                 \n                }\n                isContactField(v) && handleField(context, listKeyToUse, { name: k, value: v })\n              }\n              );\n            } else {\n              handleField(context, listKeyToUse, { name: dictKey, value: dictValue });\n            }\n          });\n        });\n      }\n    });\n  };\n\n  const updateDisplayFields = (keyToUse: string, key: string, value: any) => {\n    const isDisplayField = () => {\n      let context = false;\n      if (keyToUse === 'contact') context = ['name', 'email', 'phone'].includes(key);\n      if (keyToUse === 'user') context = ['email', 'email_verified','password'].includes(key);\n      if(keyToUse.includes('device'))context = true;\n      return context;\n    };\n    const displayValue = ()=>{\n      if(['undefined', 'null', 'boolean'].includes(typeof value) || String(value).length)return `${value}`;\n      if(value)return value;\n      return \"n/a\";\n  }\n    if (isDisplayField()) {\n      setDisplayFields((prevDisplay: any) => {\n        const updatedDisplay = { ...prevDisplay };\n        if (!updatedDisplay[keyToUse]) {\n          updatedDisplay[keyToUse] = {};\n        }\n        updatedDisplay[keyToUse][key] = displayValue()\n        return updatedDisplay;\n      });\n    }\n  };\n\n  const setFields = ({ form, e }: { form: string, e: any }) => {\n    const { name, value } = e.target;\n    const currentForm: IFormField[] = customer[form];\n    const fieldToChange = findField(currentForm, name);\n    if (fieldToChange) {\n      fieldToChange.value = value;\n      const updatedForm = currentForm.map((field: IFormField) =>\n        field.name === name ? { ...field, value } : field\n      );\n      setCustomerState((prevState: any) => ({\n        ...prevState,\n        [form]: updatedForm\n      }));\n    }\n  };\n\n  const modifyCustomer = async () => {\n    const modifyCustomerService = async (request: any) => {\n      try {\n        const response = await adminService.updateCustomer(request);\n        if (response) openModal({ children: JSON.stringify(response) });\n      } catch (error: any) {\n        console.error({ error });\n      }\n    };\n\n    let request: any = { metadata: {} };\n    let user = request.metadata?.user;\n\n    Object.entries(customer).forEach(([formName, fields]: any) => {\n      fields.forEach((field: any) => {\n        let fieldName: string = field.name;\n        let fieldValue: any = field.value;\n        if (field?.name === \"created\") fieldValue = Number(dateFormat(fieldValue, { options: { returnType: \"timestamp\" } }));\n\n        // Join firstName and lastName\n        if (formName === 'contact' && (fieldName === 'firstName' || fieldName === 'lastName')) {\n          const firstNameField = findField(fields, 'firstName');\n          const lastNameField = findField(fields, 'lastName');\n          if (firstNameField && lastNameField) {\n            request.name = `${firstNameField.value} ${lastNameField.value}`;\n            return;\n          }\n        }\n\n        if (['contact', 'methods', 'address'].includes(formName)) {\n          if (formName === 'contact' && fieldName === 'address') {\n            request[fieldName] = fieldValue;\n          } else {\n            request[fieldName] = fieldValue;\n          }\n        } else {\n          if (!request.metadata[formName]) {\n            if (!formName.includes(\"-\")) {\n              request.metadata[formName] = {};\n            } else {\n              const formNameParts = formName.split(\"-\");\n              formName = formNameParts[0] + \"s\";\n              if (!request.metadata[formName]) {\n                request.metadata[formName] = [];\n              }\n              if (formNameParts[1]) {\n                console.log(\"[ request.metadata[formName][index] ]\", { fields })\n                if (!request.metadata.user.devices) {\n                  request.metadata.user.devices = []\n                }\n                Object.entries(fields).map(([index, field]: any) => {\n                  const fpOne = Number(formNameParts[1])\n                  if (!request.metadata.user.devices?.[fpOne]) {\n                    request.metadata.user.devices[fpOne] = {}\n                  }\n                  if (field?.name === \"created\") field.value = Number(dateFormat(field.value, { options: { returnType: \"timestamp\" } }));\n                  request.metadata.user.devices[fpOne][field.name] = field.value\n                })\n              }\n\n              return;\n            }\n          }\n          request.metadata[formName][fieldName] = fieldValue;\n        }\n      });\n    });\n\n    console.log({ request, user });\n\n    if (Object.keys(request).length > 1 || Object.keys(request.metadata).some(key => Object.keys(request.metadata[key]).length > 0)) {\n      await modifyCustomerService(request);\n    } else {\n      console.error(\"[ ADMIN CUS DETAILS (NO REQ) ]\");\n    }\n  };\n\n  useEffect(() => {\n    if (!customer && !initialCustomer) getCustomer();\n  }, [getCustomer, customer, initialCustomer]);\n\n  return {\n    customer,\n    initialCustomer,\n    displayFields,\n    setFields,\n    modifyCustomer,\n  };\n};\n\nexport default useAdminCustomer;\n","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerDetail/hooks/useAdminCustomerDelete.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerList/AdminCustomerList.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminDashboard/controller/AdminDashboard.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminDocuments/controller/AdminListDocuments.tsx",["1432"],"import React, { useEffect, useState } from 'react';\nimport styles from './AdminListDocuments.scss';\nimport { getService } from '@webstack/common';\nimport IDocumentService from '~/src/core/services/DocumentService/IDocumentService';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport { useLoader } from '@webstack/components/Loader/Loader';\nimport UiLoader from '@webstack/components/UiLoader/view/UiLoader';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\n\nconst RenderFile = ({ currentDoc }:{currentDoc:any}) => {\n    const retrieved = currentDoc.retrieved;\n    const router = useRouter();\n    useEffect(() => {\n        console.log('Document changed:', currentDoc);\n    }, [currentDoc]);\n\n    if (currentDoc) {\n        if(retrieved?.object && retrieved.object === 'file_link'){\n            if(currentDoc.type === 'png'){\n                return <Image src={retrieved.url} alt={currentDoc.filename} />;\n            }\n            else if (currentDoc.type === 'pdf') {\n                return (\n                    <embed\n                        src={currentDoc.url}\n                        type=\"application/pdf\"\n                        width=\"100%\"\n                        height=\"500px\"\n                    />\n            );\n        }\n        // } else if (currentDoc.type === 'png' || currentDoc.type === 'jpeg') {\n        //     return <img src={currentDoc.url} alt={currentDoc.filename} />;\n        // }\n    }\n    }\n\n    return null; // No document to render\n};\n\nconst AdminListDocuments = ({ docs }: any) => {\n    const docService = getService<IDocumentService>(\"IDocumentService\");\n    const [documents, setDocuments] = useState<any | undefined>();\n    const [currentDoc, setCurrentDoc] = useState<any>(null);\n    const [loader, setLoader] = useLoader();\n\n\n    const downloadFile = async (fileUrl: string, fileName: string) => {\n        try {\n            const response = await fetch(fileUrl);\n            if (!response.ok) throw new Error('Network response was not ok');\n            const blob = await response.blob();\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = fileName; // Use the extracted filename\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n            a.remove();\n        } catch (error) {\n            console.error(\"Error downloading file:\", error);\n        }\n    };\n\n    const retreive = async (doc:any) => {\n        const fileId = doc.id\n        setLoader({ active: true, body: `loading document ${fileId}` });\n        \n        try {\n            const retrieved = await docService.retrieveDocument(fileId);\n            setCurrentDoc({...doc, retrieved});\n            setLoader({ active: false });\n        } catch (error) {\n            setLoader({ active: true, body: <div className='error'>Document Failed {fileId}</div>, persistence:3000 });\n        }\n    };\n\n\n    useEffect(() => {\n        const getDocs = async () => {\n            if (!docs) {\n                try {\n                    const documentsList = await docService.listDocuments();\n                    setDocuments(documentsList.data);\n                } catch (error) {\n                    setDocuments(false);\n                    console.error(\"Error fetching documents:\", error);\n                }\n            } else {\n                setDocuments(docs);\n            }\n        };\n\n        if (documents === undefined) {\n            setLoader({ active: true, body: 'Getting admin documents' });\n            getDocs().then(() => setLoader({ active: false }));\n        }\n    }, [docs, docService, ]);\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            {!docs && <h1>Admin List Docs</h1>}\n            <div className='admin-list-documents'>\n                {currentDoc && <RenderFile currentDoc={currentDoc} />}\n                {documents ? (\n                    documents.map((doc: any, index: number) => {\n                        return (\n                            <div key={index} className='admin-list-documents__list'>\n                                <div className='admin-list-documents__list--item'>\n                                    <div className='admin-list-documents__list--item-content'>\n                                        <strong>file: </strong>{doc?.filename}<br/><br/>\n                                        <strong>purpose:</strong>{doc?.purpose}\n                                    </div>\n                                    <div className='admin-list-documents__list--item-action'>\n                                        <UiButton onClick={() => retreive(doc)}>preview</UiButton>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                ) : (\n                    <>\n                        {documents === false && <p>No documents found.</p>}\n                        {documents === undefined && <UiLoader />}\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default AdminListDocuments;\n","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminInvoices/controller/AdminInvoices.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminMarketing/AdminMarketing.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminMesenger/AdminMesenger.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminMgmt/controller/AdminMgmt.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminProducts/controller/AdminProducts.tsx",["1433"],"// Relative Path: ./AdminCustomer.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './AdminProducts.scss';\nimport { getService } from '@webstack/common';\nimport IProductService, { IGetProduct } from '~/src/core/services/ProductService/IProductService';\nimport { dateFormat } from '@webstack/helpers/userExperienceFormats';\nimport AdaptTableCell from '@webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableCell/AdaptTableCell';\nimport { useModal } from '@webstack/components/modal/contexts/modalContext';\nimport AdminProduct from '../views/AdminAddProduct/AdminAddProduct';\nimport AdapTable from '@webstack/components/AdapTable/views/AdapTable';\nimport { IProduct } from '~/src/models/Shopping/IProduct';\nimport UiViewLayout from '@webstack/layouts/UiViewLayout/controller/UiViewLayout';\n\nconst AdminProducts: React.FC = () => {\n  const {openModal, closeModal}=useModal();\n  const [products, setProducts]=useState<IProduct[] | undefined>();\n  const [product, setProduct]=useState<IProduct>();\n  const [hasMore, setHasMore ]=useState();\n\n  const [view, setView]=useState<string>('list');\n\n  const handleSelectProduct = (product:IProduct)=>{\n    console.log('prod: ',product)\n    if(!product.id)return;\n    setProduct(product);\n    setView('product');\n  } \n  const views:any = {\n    list: <AdapTable options={{tableTitle:'admin products'}} data={products} onRowClick={handleSelectProduct}/>,\n    add: <AdminProduct/>,\n    product: <AdminProduct setView={()=>setView('list')} product={product}/>\n  }\n\nconst ProductService = getService<IProductService>('IProductService');\n\nasync function getProducts() {\n  if (products)return;\n  try {\n    const productsResponse = await ProductService.getProducts();\n    setHasMore(productsResponse.has_more);\n    const formattedProducts = productsResponse?.data.map((field: any) => {\n      let context = {\n        id: field.id,\n        name: field.name,\n        image: field.images,\n        type: field.type,\n        default_price: field.default_price,\n        updated: dateFormat(field.updated, { isTimestamp: true }),\n        created: dateFormat(field.created, { isTimestamp: true }),\n        livemode: JSON.stringify(field.livemode)\n      };\n      return context;\n    })\n    setProducts(formattedProducts);\n  } catch (e: any) {\n    console.log('[ ADMIN PRODUCTS ( ERROR ) ]', e)\n  }\n}\n\nuseEffect(() => {getProducts()}, [getProducts, setProduct]);\n\nreturn (\n  <>\n    <style jsx>{styles}</style>\n    <div className='admin-products'>\n      <UiViewLayout\n        views={views}\n        currentView={view}\n        actions={['list', 'add']}\n        showTitle={true}\n        title=\"Admin Products\"\n      />\n    </div>\n  </>\n);\n};\n\nexport default AdminProducts;\n","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminProducts/views/AdminAddProduct/AdminAddProduct.tsx",["1434"],"// Relative Path: ./AddProduct.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './AdminAddProduct.scss';\nimport UiForm from '@webstack/components/UiForm/controller/UiForm';\nimport { IFormField } from '@webstack/components/UiForm/models/IFormModel';\nimport environment from '~/src/core/environment';\nimport { IProduct } from '~/src/models/Shopping/IProduct';\n\n\ninterface IAdminProduct {\n  product?: IProduct;\n  setView?: (e: any) => void;\n}\n\nconst AdminProduct: React.FC<IAdminProduct> = ({ product }) => {\n  const mid = environment.merchant.mid;\n  const initialFields = [\n    { name: 'name', label: 'product name' },\n    { name: 'active', label: 'active', value: false, type: 'checkbox' },\n    { name: 'description', label: 'product description', type: 'textarea' },\n    { name: 'type', label: 'type' },\n    { name: 'price', label: 'price', type: 'tel' },\n  ]\n  const [fields, setFields] = useState<IFormField[]>();\n  const onSubmit = () => {\n    let request = {\n      mid: mid,\n    }\n  }\n\n  const handleFields = () => {\n    if (!product) setFields(initialFields);\n    else if (product && !fields) {\n      const newFields = Object.entries(product).map(([name, value]: any, index: number) => {\n        return { label: name, name, value }\n      })\n      console.log('[ newFields ]',newFields);\n      setFields(newFields)\n      // AdminAddProduct.tsx:35 {name: 'name', value: 'offgrid box'}\n      // AdminAddProduct.tsx:35 {name: 'image', value: Array(1)}\n      // AdminAddProduct.tsx:35 {name: 'type', value: 'service'}\n      // AdminAddProduct.tsx:35 {name: 'default_price', value: 'price_1OHZmJIodeKZRLDVUeSlY6M7'}\n      // AdminAddProduct.tsx:35 {name: 'updated', value: '11/28/2023 @ 3:29:15 PM'}\n      // AdminAddProduct.tsx:35 {name: 'created', value: '11/28/2023 @ 3:29:14 PM'}\n      // AdminAddProduct.tsx:35 {name: 'livemode', value: {…}}\n      // AdminAddProduct.tsx:35 {name: 'id', value: 'prod_P5lI35r2EWTAxi'}\n      // AdminAddProduct.tsx:35 {name: 'name', value: 'offgrid box'}\n      // AdminAddProduct.tsx:35 {name: 'image', value: Array(1)}\n      // AdminAddProduct.tsx:35 {name: 'type', value: 'service'}\n      // AdminAddProduct.tsx:35 {name: 'default_price', value: 'price_1OHZmJIodeKZRLDVUeSlY6M7'}\n      // AdminAddProduct.tsx:35 {name: 'updated', value: '11/28/2023 @ 3:29:15 PM'}\n      // AdminAddProduct.tsx:35 {name: 'created', value: '11/28/2023 @ 3:29:14 PM'}\n      // AdminAddProduct.tsx:35 {name: 'livemode', value: {…}}\n    }\n  }\n  useEffect(() => {handleFields()}, [handleFields]);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='add-product'>\n        <UiForm\n          fields={fields}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default AdminProduct;","/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminSales/controller/AdminSales.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminSystem/AdminSystem.tsx",["1435"],"// Relative Path: ./AdminSystem.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './AdminSystem.scss';\nimport { getService } from '@webstack/common';\nimport IAdminService from '~/src/core/services/AdminService/IAdminService';\nimport keyStringConverter from '@webstack/helpers/keyStringConverter';\nimport UiBar from '@webstack/components/Graphs/UiBar/UiBar';\nimport { colorPercentage, dateFormat } from '@webstack/helpers/userExperienceFormats';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport { useLoader } from '@webstack/components/Loader/Loader';\nimport UiButton from '@webstack/components/UiButton/UiButton';\n\n// Remember to create a sibling SCSS file with the same name as this component\n\nconst AdminSystem: React.FC = () => {\n  const [systemData, setSystemData] = useState<any>();\n  const [loader, setLoader] = useLoader();\n  const adminService = getService<IAdminService>('IAdminService');\n  const fetchSystemData = async () => {\n    setLoader({ active: true });\n    try {\n      const systemResponse = await adminService.getSystemInfo();\n      setSystemData(systemResponse)\n    } catch (err: any) {\n      setSystemData(err);\n    }\n  };\n  const RenderTemp = ({ name, value, percent }: any) => {\n    const color = colorPercentage(percent, true);\n    const genIcon = () => {\n      if (percent < 25) {\n        return 'fa-temperature-empty'; // Assuming you want 'fa-temperature-empty' for less than 25%\n      } else if (percent >= 25 && percent < 50) {\n        return 'fa-temperature-quarter'; // Replace with the desired icon for 25% to 50%\n      } else if (percent >= 50 && percent < 75) {\n        return 'fa-temperature-half'; // Replace with the desired icon for 50% to 75%\n      } else if (percent >= 75 && percent < 100) {\n        return 'fa-temperature-three-quarters'; // Replace with the desired icon for 75% to 100%\n      } else {\n        return 'fa-temperature-full'; // Replace with the desired icon for 100%\n      }\n    };\n    return <>\n      <style jsx> {styles}</style>\n      <div className='admin-system__temp'>\n        <div className='admin-system__temp--name'>\n          {name && keyStringConverter(name) || 'Temp %'}\n        </div>\n        <div className='admin-system__temp--percent' style={{ color: color }}>\n          <UiIcon icon={genIcon()} color={color} /> {value}°C / {percent}%\n        </div>\n      </div>\n    </>\n  }\n  const lActive = loader?.active;\n  const getData = async () => {\n    fetchSystemData().then(() => {\n      setLoader({ active: false });\n    });\n  }\n  function bytesToGigabytes(bytes: number) {\n    return (bytes / (1024 ** 3)).toFixed(2);  // Convert to GB and round to 2 decimal places\n  }\n\n  useEffect(() => {\n    if (!systemData) getData()\n  }, [setSystemData]);\n  if (Object(systemData)?.length) return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='admin-system'>\n        <div className='admin-system__header'>\n          <div className='admin-system__title--container'>\n            <div className='admin-system__title'>\n              admin system\n            </div>\n            <div className='admin-system__title--timestamp'>\n              {dateFormat(systemData?.timestamp, { isTimestamp: true })}\n            </div>\n          </div>\n\n          <div >\n            <UiButton busy={loader?.active} variant='dark' onClick={getData}>Refresh</UiButton>\n          </div>\n        </div>\n        <div className='admin-system__overview'>\n          <div className='admin-system__overview--item'>\n            <div className='admin-system__overview--item--title'>\n              <UiIcon icon='fa-microchip' /> Graphics\n            </div>\n            <div className='admin-system__overview--item--content'>\n              <div className='admin-system__overview--item--content__info'>{systemData?.gpu_info}</div>\n              <RenderTemp name='gpu temp' value={systemData?.gpu_temp} percent={systemData?.gpu_temp_percentage} />\n            </div>\n          </div>\n          <div className='admin-system__overview--item'>\n            <div className='admin-system__overview--item--title'>\n              <UiIcon icon={lActive ? 'spinner' : 'fa-disc-drive'} /> Processor\n            </div>\n            <div className='admin-system__overview--item--content'>\n              <div className='admin-system__overview--item--content__info'>{systemData?.cpu_info}</div>\n              <RenderTemp name='cpu temp' value={systemData?.cpu_temp} percent={systemData?.cpu_temp_percentage} />\n            </div>\n          </div>\n          <div className='admin-system__overview--item'>\n            <div className='admin-system__overview--item--title'>\n              <UiIcon icon={lActive ? 'spinner' : 'fa-memory'} /> Memory\n            </div>\n            <div className='admin-system__overview--item--content'>\n              <div className='admin-system__overview--item--content__info'>\n                <div className='d-flex' style={{ flexDirection: 'column' }}>\n                  <UiBar\n                    header='Usage'\n                    percentage={systemData?.memory_percentage}\n                    barCount={4}\n                    status={systemData?.memory_percentage >= 90 && 'high' || undefined}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='admin-system__overview--item'>\n            <div className='admin-system__overview--item--title'>\n              <UiIcon icon='fa-microchip' /> Storage\n            </div>\n            <div className='admin-system__overview--item--content'>\n              <div className='d-flex' style={{ flexDirection: 'column' }}>\n                <UiBar\n                  header={systemData?.storage_info?.drive}\n                  percentage={systemData?.storage_info?.percent_used}\n                  barCount={4}\n                  status={systemData?.storage_info?.percent_used >= 90 && 'high' || undefined}\n                />\n                {/* <div>{bytesToGigabytes(systemData?.storage_info?.available)}</div> */}\n                {/* <div>{bytesToGigabytes(systemData?.storage_info?.total)}</div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </>\n  );\n  return <>\n    <style jsx>{styles}</style>\n    <div className='admin-system'>\n      <div className='admin-system__header'>\n        <div className='admin-system__title--container'>\n          <div className='admin-system__title'>\n            admin system\n          </div>\n          <h2>System data unavailable</h2>\n        </div>\n      </div>\n    </div>\n  </>\n};\n\nexport default AdminSystem;","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/controller/Authentication.tsx",["1436"],"import { useEffect, useState } from \"react\";\nimport LoginView from \"../views/Login/views/LoginView/LoginView\";\nimport styles from \"./Authentication.scss\";\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport SignUp from \"../views/SignUp/SignUp\";\nimport keyStringConverter from \"@webstack/helpers/keyStringConverter\";\nimport { useRouter } from \"next/router\";\nimport UiButton from \"@webstack/components/UiButton/UiButton\";\nimport Link from \"next/link\";\nimport environment from \"~/src/core/environment\";\nimport { useModal } from \"@webstack/components/modal/contexts/modalContext\";\nimport { useNotification } from \"@webstack/components/Notification/Notification\";\nimport { useClearance } from \"~/src/core/authentication/hooks/useUser\";\n\n\n\nconst Authentication: React.FC<any> = (props: any) => {\n  const [newCustomerEmail, setNewCustomerEmail] = useState<string | undefined>();\n  const [view, setView] = useState<string>(props?.view || \"sign-in\");\n  const [hover, setHover] = useState<boolean>(false);\n  const router = useRouter();\n  const query = router.query;\n  const { openModal, closeModal } = useModal();\n  const [notif, setNotification] = useNotification();\n\n  const handleView = () => {\n    switch (view) {\n      case \"sign-in\":\n        setView(\"sign-up\")\n        break;\n      case \"sign-up\":\n        setView(\"sign-in\")\n        break;\n      case \"customer-created\":\n        setView(\"sign-in\")\n        break;\n      case \"existing\":\n        setView(\"sign-in\")\n        break;\n      default:\n        setView(\"sign-up\")\n    }\n  }\n  const handleSignup = (response: any) => {\n    const status = response?.status;\n    if (!status) {\n      alert(\"dev, handle this! 212\");\n      return;\n    }\n\n    let label = \"404, an error occured signing up. \"\n    switch (status) {\n      case 'created':\n        label = `email: ${response?.email}, successfully created.`\n        break;\n      case 'existing':\n        label = `email: ${response?.email}, exists.`\n        break;\n      default: break;\n    }\n    setNotification({ active: true, list: [{ 'label': label, message: \"Please wait a few minutes before logging in\" }] });\n    setView('sign-in');\n    setNewCustomerEmail(response.email)\n  }\n  const handleSignIn = (user: any) => {\n    if (user?.id) {\n      const WelcomeModalContent = ({ user, onClose }: any) => {\n        const adminClearance = useClearance() > 9;\n        const onProfileClick = (isAdmin: boolean) => {\n          if (isAdmin && adminClearance) router.push('/admin');\n          else router.push('/profile');\n          closeModal();\n        }\n        return (\n\n          <>\n            <style jsx>{styles}</style>\n            <div className='authentication__welcome-modal'>\n              <h3>Welcome, {user.name}</h3>\n              {adminClearance && <UiButton onClick={onProfileClick}>admin</UiButton>}\n              <UiButton onClick={onProfileClick}>account</UiButton>\n              <UiButton onClick={onClose}>Close</UiButton>\n            </div>\n          </>\n        )\n      };\n\n      // Usage within a component\n      openModal({\n        title: 'User Details',\n        children: <WelcomeModalContent user={user} onClose={closeModal} />\n      });\n    }\n  };\n\n  useEffect(() => {\n\n    if (query && query.verify && view !== 'verify') {\n      setView('verify');\n    }\n\n    if (newCustomerEmail != undefined) setView(\"sign-in\");\n  }, [handleSignup, handleSignIn,])\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className={`authentication ${view == 'sign-in' ? ' authentication__sign-in' : ''}`}>\n        <div className='authentication__view-header'>\n          <div className=\"authentication__logo\">\n            <UiIcon icon={`${environment.merchant.name}-logo`} />\n          </div>\n          <div className='authentication__view-name'>\n            {keyStringConverter(view)}\n          </div>\n        </div>\n        {view.includes(\"@\") && <div className='authentication__email-verify'>\n          An email has been sent to\n          <Link onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} style={hover ? { color: 'var(--primary' } : undefined} href={`mailto://${view}`}>{' ' + view + ', '}</Link> click the link in the email to continue.\n        </div>}\n        {view == 'sign-in' && <LoginView email={newCustomerEmail} onSuccess={handleSignIn} />}\n        {view == 'sign-up' && <SignUp onSuccess={handleSignup} />}\n        <div className=\"authentication__view-action\">\n          <div className=\"authentication__view-label\">\n          <div className=\"authentication__view-label--text\">\n            {view == 'sign-in' && \"no account?\"}\n            {view == 'sign-up' && \"already have an account?\"}\n          </div>\n          </div>\n\n          <UiButton\n            onClick={handleView}\n            variant=\"link\"\n          >\n            {view == 'sign-in' && \"Sign Up\"}\n            {view == 'sign-up' && \"Login\"}\n          </UiButton>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Authentication;","/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/controller/Login.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/views/LoginView/LoginView.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/views/ResetPassword/ResetPassword.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/Login/views/TwoFactorAuth/TwoFactorAuth.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/authentication/views/SignUp/SignUp.tsx",["1437"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./SignUp.scss\";\nimport { useUser } from \"~/src/core/authentication/hooks/useUser\";\nimport { getService } from \"@webstack/common\";\nimport IMemberService from \"~/src/core/services/MemberService/IMemberService\";\nimport useUserAgent from \"~/src/core/authentication/hooks/useUserAgent\";\nimport UiForm from \"@webstack/components/UiForm/controller/UiForm\";\nimport keyStringConverter from \"@webstack/helpers/keyStringConverter\";\nimport { findField } from \"@webstack/components/UiForm/functions/formFieldFunctions\";\nimport { useNotification } from \"@webstack/components/Notification/Notification\";\nimport environment from \"~/src/core/environment\";\nimport useDevice from \"~/src/core/authentication/hooks/useDevice\";\n\n\nexport interface ISignUp {\n  // setView?: (e: any) => void;\n  onSuccess?: (e: any) => void;\n  hasPassword?: boolean;\n  btnText?: string;\n  login?: boolean\n  title?: string | React.ReactElement;\n}\nconst form = [\n  { name: \"first_name\", label: \"first name\", placeholder: 'first name', required: true, width: '50%' },\n  { name: \"last_name\", label: \"last name\", placeholder: 'last name', required: true, width: '50%' },\n  { name: \"email\", type: 'email', label: \"email\", placeholder: 'your@email.com', required: true }\n];\nconst pwFields = [\n  { name: \"password\", label: \"password\", type: 'password', placeholder: 'password', required: true },\n  { name: \"confirm_password\", label: \"confirm password\", type: 'password', placeholder: 'confirm password', required: true }\n]\nconst SignUp = ({ hasPassword = true, btnText, onSuccess, title }: ISignUp): React.JSX.Element => {\n  const [notification, setNotification] = useNotification();\n  const [loading, setLoading] = useState<any>(false);\n  const user = useUser();\n  const MemberService = getService<IMemberService>(\"IMemberService\");\n  // const user_agent = useUserAgent();\n  const device = useDevice()\n  const [fields, setFields] = useState<any>(form);\n\n  const changeField = (fieldName: string, key: string, value: string) => {\n    const changedFields = fields.map((field: any) => {\n      if (field?.name == fieldName) {\n        delete field.error;\n        field[key] = value;\n      }\n      return field;\n    });\n    setFields(changedFields);\n    return true;\n  }\n\n  const handleErrors = () => {\n    let hasError = false;\n    fields.forEach((field: any) => {\n      const fn = field?.name;\n      const fnd = keyStringConverter(fn);\n      const fv = field?.value;\n      const vl = fv?.length;\n      const minMsg = `${fnd}, is not long enough`;\n      const maxMsg = `${fnd}, is not long enough`;\n      if (!fv) hasError = changeField(fn, 'error', `${fnd}, can't be empty`);\n      else switch (fn) {\n        case 'first_name':\n          if (vl < 3) hasError = changeField(fn, 'error', minMsg);\n          else if (vl > 20) hasError = changeField(fn, 'error', maxMsg);\n          break;\n        case 'last_name':\n          if (vl < 3) hasError = changeField(fn, 'error', minMsg);\n          else if (vl > 20) hasError = changeField(fn, 'error', maxMsg);\n          break;\n        case 'email':\n          if (fv && !fv.includes('@')) hasError = changeField(fn, 'error', `${fnd}, missing \"@\"`);\n          else if (fv && !fv.includes('.')) hasError = changeField(fn, 'error', `${fnd}, missing \".\"`);\n          break;\n        case 'password':\n          const cpw_val = fields.find((f: any) => f.name == 'confirm_password')?.value;\n          if (vl < 3) hasError = changeField(fn, 'error', minMsg);\n          else if (vl > 20) hasError = changeField(fn, 'error', maxMsg);\n          if (fv != cpw_val) {\n            hasError = changeField(fn, 'error', `Passwords don't match`);\n            hasError = changeField('confirm_password', 'error', `Passwords don't match`);\n          }\n          break;\n\n        default:\n          break;\n      }\n    });\n    return hasError;\n  }\n\n\n  // const URL = useReferrer();\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    changeField(name, 'value', value);\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    const errors = handleErrors();\n    if (!errors) {\n      const request = {\n        name: `${findField(fields, 'first_name')?.value} ${findField(fields, 'last_name')?.value}`,\n        email: findField(fields, 'email')?.value,\n        phone: findField(fields, 'phone')?.value,\n        address: findField(fields, 'address')?.value,\n        metadata: {\n          user:{\n              email: findField(fields, 'email')?.value,\n              devices: [{...device, created:`${Date.now()}`}],\n              password: findField(fields, \"password\")?.value\n            },\n            merchant:environment.merchant\n        }\n      }\n      let context;\n      try {\n        const response = await MemberService.signUp(request);\n        if (response?.email !== undefined ) {\n          context = response;\n          onSuccess && onSuccess(response);\n        }\n        else if (response?.status === 'existing' && onSuccess) {\n          context = {...response, email: findField(fields,'email')?.value};\n          onSuccess(context);\n        }else {\n          console.error('[ SIGN UP RESPONSE UNHANDLED ]', response);\n          // Display a general user-friendly error message\n        }\n      } catch (e: any) {\n        if (e?.detail?.fields) {\n          console.log(\"[ e.detail.fields ]\",e.detail.fields)\n          e.detail.fields.forEach((field: any) => {\n            changeField(field.name, 'error', field.message);\n          });\n        } else {\n          console.error('[ SIGN UP RESPONSE ERRORS ]', e);\n        }\n      }\n      // finally{\n        // console.log('[ handleSubmit (signUp) ]',context)\n      // }\n    } else {\n      console.error('[ SIGN UP ERRORS LOCAL ]', errors);\n    }\n    setLoading(false);\n  };\n\n\n  useEffect(() => {\n    if (hasPassword) {\n      setFields([...fields, ...pwFields]);\n    }\n  }, []);\n  return (\n    <>\n      <style jsx>{styles}</style>\n\n      {!user && <UiForm title={title} fields={fields} onSubmit={handleSubmit} loading={loading} onChange={handleChange} submitText={btnText || 'sign up'} />}\n      <div className=\"authentication__authentication-status\">\n        {loading?.message}\n      </div>\n    </>\n  )\n}\n\nexport default SignUp;","/home/web/servers/frontend/Deepturn/app/src/modules/dashboard/pages/DashboardPage/DashboardPage.tsx",["1438"],"import React, { useEffect } from \"react\";\nimport styles from \"./DashboardPage.scss\";\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport { useRouter } from \"next/router\";\nimport AdaptGrid from \"@webstack/components/AdaptGrid/AdaptGrid\";\nimport { IRoute, useClearanceRoutes, pruneRoutes } from \"@shared/components/Navbar/data/routes\";\nimport UiLoader from \"@webstack/components/UiLoader/view/UiLoader\";\ninterface IDashboard {\n  links?: IRoute[];\n}\nexport const DashboardPage: React.FC<IDashboard> = ({ links }: IDashboard) => {\n  const router = useRouter();\n  const dashboardLinks = pruneRoutes([\"dashboard\", \"account\"]);\n  const access = useClearanceRoutes();\n  const handleClick = (link: any) => {\n    // console.log('link: ', link)\n    if (!link.href) return;\n    router.push(link.href);\n  };\n  \n  useEffect(() => {}, [handleClick]);\n  if (Array(dashboardLinks) || Array(dashboardLinks)) return (\n    <>\n      <style jsx>{styles}</style>\n      <div className=\"dashboard\">\n      {access && <AdaptGrid xs={2} md={4} gap={10}>\n          {Object.entries(links || access).map(([key, link]) => {\n            return (\n              <div\n                key={key}\n                data-testid={`dashboard-page-internal-link-${link.label} `}\n                onClick={() => link?.active && handleClick(link)}\n                className='dashboard__dashboard-item'\n              >\n                <UiIcon icon={link.altIcon ? link.altIcon : link.icon} /> {link?.altLabel ? link.altLabel : link.label}\n              </div>\n            );\n          })}\n        </AdaptGrid>}\n      </div>\n    </>\n  );\n  return <UiLoader />\n};\n","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/controller/Checkout.tsx",["1439","1440"],"import React, { useEffect, useState } from 'react';\nimport styles from './Checkout.scss';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport useCart from '../../cart/hooks/useCart';\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\n\nimport SignUp from '~/src/modules/authentication/views/SignUp/SignUp';\nimport { useGuest } from '~/src/core/authentication/hooks/useGuest';\n\nimport Login from '~/src/modules/authentication/views/Login/controller/Login';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport Collect from '../views/Collect/controller/Collect';\nimport CartList from '../../cart/views/CartList/CartList';\nimport { useNotification } from '@webstack/components/Notification/Notification';\nimport UiViewLayout, { IView } from '@webstack/layouts/UiViewLayout/controller/UiViewLayout';\n\n\nconst Checkout = (): React.JSX.Element => {\n\n    const user = useUser();\n    const [view, setView] = useState<any>();\n    const [_cart, setCart] = useState<any>();\n    const [selectedUser, setUser] = useState<IAuthenticatedUser | { email: string } | undefined>();\n    const { cart } = useCart();\n    const guest = useGuest();\n    const handleSignUp = (res: any) => {\n        const selectedUser = res?.id && res || guest;\n        // console.log('[handleSignUp ]', res)\n        if (['guest', 'created'].includes(res?.status)) {\n            // console.log(\"[ RES ]\", res)\n            handleUser()\n            setView('collect');\n            handleNotifictaion(res);\n        }\n        else if (res?.status === 'existing' || selectedUser) {\n            setUser({ email: res.email });\n            setView('existing');\n        }\n        else {\n            // console.log('[ CHECKOUT (HANDLE SIGNUP)[ERROR] ]', res);\n        }\n    }\n    const [notification, setNotification] = useNotification();\n    type InotificationContext = { data: string, email: string, status: \"existing\" | \"created\" | \"success\" }\n    const handleNotifictaion = (notificationContext: InotificationContext) => {\n        // console.log('[ handleNotification ]', notificationContext)\n        const status = notificationContext.status;\n        if (status) setNotification({\n            active: true,\n            persistence: 3000,\n            list: [{ name: `email ${status}, sign in to continue` }]\n        });\n        // console.log('[ NOTIFICIATION ]', { notification, notificationContent: notificationContext })\n    }\n    const views: IView = {\n        'sign-up': (\n            <SignUp\n                title=\"Contact info\"\n                hasPassword={false}\n                btnText='continue'\n                onSuccess={handleSignUp}\n            />),\n        'existing': (\n            <Login onSuccess={handleSignUp} title={`Account for ${selectedUser?.email}, exists. please sign in.`} email={selectedUser?.email} />\n        ),\n        'collect': (\n            <Collect\n                user={selectedUser}\n                cart_items={_cart}\n            />\n        )\n    }\n    const handleUser = () => {\n        if (selectedUser) return;\n        // console.log('[ USER ]', { user, guest })\n        if (user || guest) {\n            setView('collect');\n            setUser(user || guest);\n        } else {\n            setView('sign-up');\n        }\n    }\n    const handleCart = () => {\n        if (_cart) return;\n        setCart(cart);\n    }\n    useEffect(() => {\n        handleUser();\n        handleCart();\n    }, [handleUser, handleCart]);\n    return <>\n        <style jsx>{styles}</style>\n        <div className='checkout' id=\"main-checkout\">\n                <div className='checkout__title'>\n                    Secure Checkout <UiIcon icon=\"fa-lock\" />\n                </div>\n                <div className='checkout__button'>\n                    Step {view === 'sign-up' ? '1' : '2'} of 2\n                </div>\n            <div className='checkout__body'>\n            <div className='checkout__cart-list'><CartList adjustable={false} variant='mini' /></div>\n                <div className='checkout__view'>\n                    <UiViewLayout\n                        views={views}\n                        currentView={view}\n                    />\n                </div>\n            </div>\n        </div>\n    </>\n};\n\nexport default Checkout;","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/CheckoutButton/CheckoutButton.tsx",["1441"],"// Relative Path: ./Checkout.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './CheckoutButton.scss';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport { calculateCartTotal } from '@webstack/helpers/userExperienceFormats';\nimport { useRouter } from 'next/router';\nimport Checkout from '~/src/pages/checkout';\nimport { ITraits } from '@webstack/components/UiForm/components/FormControl/FormControl';\nimport { getService } from '@webstack/common';\nimport IMemberService, { ISessionData } from '~/src/core/services/MemberService/IMemberService';\nimport { encryptString } from '@webstack/helpers/Encryption';\nimport { useModal } from '@webstack/components/modal/contexts/modalContext';\nimport useCart from '../../../cart/hooks/useCart';\nimport CookieHelper from '@webstack/helpers/CookieHelper';\n\n// Remember to create a sibling SCSS file with the same name as this component\ninterface ICheckoutButton {\n    cart_items: any;\n    label?: string;\n    isModal?: boolean;\n    traits?: ITraits;\n    collect?: boolean;\n    setup?: boolean;\n    method_id?: string;\n    customer_id?: string;\n}\nconst CheckoutButton: React.FC<ICheckoutButton> = (props) => {\n    const { label = \"Checkout\", isModal = false, traits, collect, method_id, customer_id } = props;\n    const {  cart } = useCart();\n    const [error, setError] = useState<any>();\n    const [sessionData, setSessionData] = useState<ISessionData | undefined>();\n    const router = useRouter();\n    const { isModalOpen, openModal, closeModal } = useModal();\n    const MemberService = getService<IMemberService>('IMemberService');\n    const handleCheckout = async () => {\n        if (collect && sessionData) {\n            try {\n                const checkoutResponse = await MemberService.processTransaction(sessionData);\n                const hasTransaction = CookieHelper.getCookie('transaction-token');\n                if(hasTransaction)router.push('/transaction');\n                else setError(\"No Transaction Cookie\")\n            } catch (error: any) {\n                setError(error);\n            }\n        }\n        // if (isModal) openModal({ children: <Checkout cart={sessionData} />, variant: 'popup' });\n        // if (isModal && user?.default_source == null) openModal(<AccountCreateMethod loading={status} open onSubmit={handleCreateMethod} />);\n        if (!isModal && !isModalOpen) router.push(\"/checkout\");\n    };\n\n    const prepareSession = () => {\n        const session_cart_items = cart && cart.map((item: any) => {\n            return { price: item.price.id, quantity: item.price.qty };\n        });\n        const contextSession = {\n            cart_items: cart?cart:[],  // Updated to use cart_items\n            method_id: method_id,\n            customer_id: customer_id,\n        };\n        setSessionData(contextSession);\n    };\n    useEffect(() => { \n        prepareSession();\n        \n    }, []);\n\n    return <>\n        <style jsx>{styles}</style>\n        {error && \"[ CheckoutButton REsp( ERROR) ]: \" + JSON.stringify(error)}\n        <div className='checkout-button'>\n            <UiButton variant=\"glow\" traits={traits} onClick={handleCheckout} >{`${label} ${calculateCartTotal(cart)}`}</UiButton>\n        </div>\n    </>\n};\n\nexport default CheckoutButton;","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/Collect/controller/Collect.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/Collect/views/Payment.tsx",["1442"],"import React, { useEffect, useState } from 'react';\nimport { useStripe, useElements, PaymentElement } from '@stripe/react-stripe-js';\nimport useCart from '../../../../cart/hooks/useCart';\nimport styles from \"./Payment.scss\";\nimport UiButton from '@webstack/components/UiButton/UiButton';\n\ninterface IGuestCheckoutProps {\n  onSuccess: (paymentIntent: any) => void;\n  success_url?: string;\n}\n\nconst PaymentElementForm: React.FC<IGuestCheckoutProps> = ({  onSuccess, success_url }) => {\n    const [_cart,setCart]=useState<any | undefined>();\n    const { cart } = useCart();\n\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n    \n        if (!stripe || !elements) {\n            console.log(\"Stripe has not loaded yet.\");\n            return;\n        }\n    \n        const result:any = await stripe.confirmPayment({\n            elements,\n            confirmParams: {\n              return_url: success_url || \"/transaction\",\n            },\n        });\n    \n        if (result.error) {\n            console.log(\"Error:\", result.error.message);\n        } else {\n            // The paymentIntent can be accessed from result.paymentIntent if it's present\n            // Note: The exact path might vary based on your Stripe API version and setup\n            const paymentIntent = result.paymentIntent;\n            if (paymentIntent && paymentIntent.status === 'succeeded') {\n                console.log(\"Payment succeeded:\", paymentIntent);\n                onSuccess(paymentIntent);\n            }\n        }\n    };\n    \n\n    useEffect(() => {\n        if(!_cart)setCart(cart);\n    }, [setCart]);\n    return (\n        <>\n          <style jsx>{styles}</style>\n\n          <form onSubmit={handleSubmit}>\n          <div>\n          {JSON.stringify(_cart)}\n          </div>\n              <PaymentElement />\n              <UiButton variant={!stripe?'disabled':'glow'} type='submit' disabled={!stripe}>Submit</UiButton>\n\n          </form>\n        </>\n    );\n};\n\nexport default PaymentElementForm;\n","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/FUTURECollect/controller/Collect.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Checkout/views/FUTURECollect/views/Payment.tsx",["1443"],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/controller/Products.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/ProductQuote/controller/ProductQuote.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/ProductQuote/views/ProductFeatureOther/SurveyChoiceOther.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/ProductQuote/views/SurveyForm/SurveyForm.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/controller/ProductDescription.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/views/BannerProduct/BannerProduct.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/views/ProductBuyNow/ProductBuyNow.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductDescription/views/ProductImage/ProductImage.tsx",["1444","1445"],"import React, { useEffect, useState } from 'react';\nimport styles from './ProductImage.scss';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport environment from '~/src/core/environment';\n\nconst ProductImage: React.FC<{ image?: any, options?: any }> = ({ image, options }) => {\n    const [imageLoadError, setImageLoadError] = useState<boolean>(false);\n    \n    useEffect(() => {\n        if(!image)setImageLoadError(true);\n    }, []);\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className={`product-image ${options?.view?`product-image__${options?.view}`:''}`}>\n                    {image != undefined && !imageLoadError ? (\n                        <img\n                            src={image}\n                            alt=\"img\"\n                            className={`product-image__content ${options?.view?`product-image__content__${options?.view}`:''}`}\n                            onError={() => setImageLoadError(true)}\n                        />\n\n                    ) : <UiIcon icon={`${environment.merchant.name}-logo`} />}\n            </div>\n        </>\n    );\n};\n\nexport default ProductImage; ","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/controller/ProductsListing.tsx",["1446"],"import React, { useEffect, useState } from \"react\";\nimport { NextPage } from \"next\";\nimport styles from \"./ProductsListing.scss\";\nimport { getService } from \"@webstack/common\";\nimport { dateFormat, numberToUsd } from \"@webstack/helpers/userExperienceFormats\";\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\nimport IProductService from \"~/src/core/services/ProductService/IProductService\";\nimport { useLoader } from \"@webstack/components/Loader/Loader\";\nimport environment from \"~/src/core/environment\";\nimport ProductList from \"../views/ProductList/ProductList\";\nimport UiSelect from \"@webstack/components/UiForm/components/UiSelect/UiSelect\";\n\ninterface Filter {\n  [key: string]: {\n    [key: string]: { selected: boolean };\n  };\n}\n\nconst ProductsListing: NextPage = () => {\n  const [loader, setLoader] = useLoader();\n  const user = useUser();\n  const [filters, setFilters] = useState<Filter>({ categories: {}, types: {} });\n  const [products, setProducts] = useState<any[]>();\n  const [hasMore, setHasMore] = useState<boolean>(false);\n  const ProductService = getService<IProductService>(\"IProductService\");\n\n  const getSelectedCategories = (filter: any) => {\n    const selectedEntries = Object.entries(filter).filter(([, value]: any) => value.selected);\n    if (selectedEntries.length === 0) return \"all\";\n    return selectedEntries.map(([key]) => key).join(\", \");\n  };\n\n  const updateFilters = (filterKey: keyof Filter, value: string) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [filterKey]: {\n        ...prevFilters[filterKey],\n        [value]: { selected: !prevFilters[filterKey][value]?.selected }\n      }\n    }));\n  };\n\n  const fetchProducts = async () => {\n    !loader.active && setLoader({ \n      active: true,\n      body: 'loading products',\n      // animation: true\n     });\n    try {\n      const memberResponse = await ProductService.getProducts();\n      const fetchedProducts: any = memberResponse?.data;\n\n      if (fetchedProducts) {\n        const filteredProducts = fetchedProducts.filter((product: any) => {\n          const { category, hide_price, mid, type } = product.metadata;\n          if (mid !== environment.merchant.mid) return false;\n\n          const categoryMatch = Object.entries(filters.categories).some(([key, val]) => val.selected && key === category);\n          const typeMatch = Object.entries(filters.types).some(([key, val]) => val.selected && key === type);\n\n          return (categoryMatch || Object.keys(filters.categories).length === 0) && (typeMatch || Object.keys(filters.types).length === 0);\n        });\n\n        const formattedProducts = filteredProducts.map((product: any) => ({\n          ...product,\n          created: dateFormat(product.price.created, { isTimestamp: true }),\n        }));\n\n        setHasMore(memberResponse.has_more);\n        setProducts(formattedProducts);\n      }\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    } finally {\n      setLoader({ active: false });\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n  }, [filters]); // Refetch products whenever filters change\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className=\"product-listing\">\n        <div className=\"product-listing__header\">\n          <div>\n            <h1>Products</h1>\n          </div>\n          {/* <div className=\"product-listing__filters\">\n            {['categories', 'types'].map(filterKey => (\n              <UiSelect\n                key={filterKey}\n                variant=\"dark\"\n                onSelect={(value) => updateFilters(filterKey as keyof Filter, value)}\n                label={filterKey}\n                options={Object.keys(filters[filterKey])}\n                title={getSelectedCategories(filters[filterKey])}\n                value={getSelectedCategories(filters[filterKey])}\n              />\n            ))}\n          </div> */}\n        </div>\n        <ProductList products={products} />\n      </div>\n    </>\n  );\n};\n\nexport default ProductsListing;\n","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/views/ProductChapters/ProductChapters.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/views/ProductList/ProductList.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/Products/views/ProductListing/views/ProductSlider/ProductSlider.tsx",["1447","1448"],"import React, { useEffect, useRef, useState } from 'react';\nimport styles from \"./ProductSlider.scss\";\nimport ProductBuyNow from '../../../ProductDescription/views/ProductBuyNow/ProductBuyNow';\n// import ProductImage from '../../../controller/ProductDescription/views/ProductImage/ProductImage';\nimport useCart from '~/src/modules/ecommerce/cart/hooks/useCart';\nimport { ICartItem } from '~/src/modules/ecommerce/cart/model/ICartItem';\nimport { useRouter } from 'next/router';\n// import useScroll from '@webstack/hooks/useScroll';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nconst DEFAULT_PRODUCTS_LEN = 4\ninterface Product {\n  id: string;\n  name: string;\n  images: string;\n}\n\ninterface ProductSliderProps {\n  products: Product[];\n}\n\nconst ProductSlider: React.FC<ProductSliderProps> = ({ products }) => {\n  const itemsRef = useRef<any>(null);\n  const router = useRouter();\n  const [_products, setProducts]=useState<any>(Array.from({ length: DEFAULT_PRODUCTS_LEN }, (_, i) => i + 1));\n  const [isScrolledLeft, setIsScrolledLeft] = useState(true);\n  const [isScrolledRight, setIsScrolledRight] = useState(false);\n\n\n  const updateScrollButtons = () => {\n    if (itemsRef.current) {\n      const { scrollLeft, scrollWidth, offsetWidth } = itemsRef.current;\n      setIsScrolledLeft(scrollLeft === 0);\n      setIsScrolledRight(scrollLeft + offsetWidth >= scrollWidth);\n    }\n  };\n  const handleScroll = (right: boolean = true) => {\n    if (itemsRef.current) {\n      const scrollAmount = right ? itemsRef.current.offsetWidth : -itemsRef.current.offsetWidth;\n      const newScrollPosition = itemsRef.current.scrollLeft + scrollAmount;\n  \n      itemsRef.current.scrollTo({\n        left: newScrollPosition,\n        behavior: 'smooth'  // Smooth scrolling\n      });\n  \n      setTimeout(updateScrollButtons, 150); // Update buttons after scroll animation\n    }\n  };\n  \n\n  useEffect(() => {\n    loadProducts();\n    updateScrollButtons(); // Initial check for scroll buttons\n  }, [products]);\n\n\n  const handleProduct = (product: any) => {\n    router.push({ pathname: \"/product\", query: { id: product.id, pri: product.price.id } })\n  }\n  const loadProducts = () =>{\n    products?.length && setProducts(products);\n  }\n\n  \n  useEffect(() => {\n      loadProducts();\n  }, [handleScroll]);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className={`product-slider--container${_products?.length > 3 &&' product-slider--container--overflow'|| ''}`}>\n      { !isScrolledLeft && (\n        <div className='product-slider__left' onClick={() => handleScroll(false)}>\n          <UiIcon icon='fa-chevron-left'  />\n        </div>\n      )}\n      <div className='product-slider' ref={itemsRef}>\n        <div className='product-slider__items' >\n          { _products.map((product: any, key: number) => \n              <div\n                key={key}\n                className='product-slider__item' \n                onClick={()=>{handleProduct(product)}}\n              >\n                <div className='product-slider__item--image'>\n                {/* <ProductImage image={product?.images} options={{ animate: true, view: \"slider\" }} /> */}\n                </div>\n                <div className='product-slider__item--info'>\n                  <div className='product-slider__item--info__name'>\n                  {product?.name}\n                  </div>\n                  {product?.description && <div className='product-slider__item--info__description'>\n                    {product.description}\n                  </div>}\n                  <div className='product-slider__item--info__action'>\n                    <ProductBuyNow product={product}  />\n                  </div>\n                </div>\n              </div>\n           )}\n        </div>\n      </div>\n      { !isScrolledRight && _products?.length > 2 && (\n        <div className='product-slider__right' onClick={() => handleScroll(true)}>\n          <UiIcon icon='fa-chevron-right'  />\n        </div>\n      )}\n      </div>\n    </>\n  );\n}\n\nexport default ProductSlider;\n","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/controller/Cart.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/helpers.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/hooks/useCart.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/model/ICartItem.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/CartList/CartList.tsx",["1449"],"import styles from './CartList.scss';\nimport AdaptGrid from '@webstack/components/AdaptGrid/AdaptGrid';\nimport React, { useEffect, useState } from 'react';\nimport { IProduct } from '~/src/models/Shopping/IProduct';\nimport CartListItem from '../CartListItem/CartListItem';\nimport useCart from '../../hooks/useCart';\n// import AdapTable from '@webstack/components/AdapTable/views/AdapTable';\n// import Image from 'next/image';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport environment from '~/src/core/environment';\n// import { numberToUsd } from '@webstack/helpers/userExperienceFormats';\n\ninterface ICartTableItem {\n    name?: string;\n    description?: string;\n    price?: string;\n    image?: React.ReactElement;\n}\nconst CartList = ({ variant, adjustable }: { variant?: 'mini', adjustable?:boolean }) => {\n    const [_cart, setCart] = useState<IProduct[] | ICartTableItem[]>();\n    const { cart } = useCart();\n    const BrandIcon = () => {\n        return <>\n            <style jsx>{styles}</style>\n            <div className='cart-list__brand-icon'>\n                <UiIcon width=\"100px\" height=\"120px\" icon={`${environment.merchant.name}-logo`} />\n            </div>\n        </>\n    };\n    useEffect(() => {\n        if (!_cart && cart) setCart(cart);\n    }, []);\n    if (_cart) return <>\n        <style jsx>{styles}</style>\n        <div \n            className={`cart-list ${\n                variant&&` cart-list__${variant}`||''}\n                `}>\n            <AdaptGrid xs={1} gap={20}>\n                {_cart.map((item: any, key: number) => (\n                    <div key={key}>\n                        <CartListItem variant={variant} item={item} adjustable={adjustable} />\n                    </div>\n                ))\n                }\n            </AdaptGrid>\n        </div>\n    </>;\n    return <></>\n}\n\nexport default CartList;","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/CartListItem/CartListItem.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/CartListItemMini/CartListItemMini.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/cart/views/EmptyCart/EmptyCart.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/transaction/controller/Transaction.tsx",["1450","1451"],"// Relative Path: ./Transaction.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './Transaction.scss';\nimport { getService } from '@webstack/common';\nimport IMemberService from '~/src/core/services/MemberService/IMemberService';\nimport CookieHelper from '@webstack/helpers/CookieHelper';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport { dateFormat, numberToUsd } from '@webstack/helpers/userExperienceFormats';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\nimport { useGuest } from '~/src/core/authentication/hooks/useGuest';\n\n// Remember to create a sibling SCSS file with the same name as this component\nconst ENCRYPTION_KEY = process.env.NEXT_PUBLIC_ENCRYPTION?.trim();\n\nconst Transaction: React.FC = () => {\n  const user = useUser();\n\n  const MemberService = getService<IMemberService>('IMemberService');\n  const [selectedUser, setUser] = useState<IAuthenticatedUser | { email: string } | undefined>();\n  const [transaction, setTransaction] = useState<any>();\n  const guest = useGuest();\n\n  const loadTransaction = () => {\n    if (transaction) return;\n    const hasTransaction = CookieHelper.getCookie('transaction-token');\n    const decryptToken = async (token: string) => {\n      if (token) {\n        try {\n          const response = await MemberService.decryptJWT({\n            token: token,\n            secret: String(ENCRYPTION_KEY),\n            algorithm: 'HS256'\n          });\n          if (response?.decoded) {\n            // console.log('[ JWT DECODE (SUCCESS) ]', response.decoded);\n            setTransaction(response.decoded);\n          }\n        } catch (error: any) {\n          setTransaction({ error: error?.detail?.detail });\n          console.error('[ JWT DECODE (ERROR) ]', error?.detail?.detail);\n        }\n      }\n    };\n    if (hasTransaction) {\n      CookieHelper.deleteCookie('cart');\n      decryptToken(hasTransaction);\n    }\n  }\n  const handleUser = () => {\n    if (selectedUser) return;\n    if (user || guest) setUser(user || guest);\n  };\n  useEffect(() => {\n    handleUser();\n  }, [handleUser, user]);\n  useEffect(() => {\n    loadTransaction();\n  }, [setTransaction]);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='transaction'>\n        {transaction?.total !== undefined && <div className='transaction__header'>\n          <div className='transaction__title'>\n            <div className='transaction__title--status'>Purchase Success</div>\n          </div>\n        </div>}\n        <div className='transaction__content'>\n        {transaction?.data?.id && \n        <div className='transaction__content--header'>\n        <div className='transaction__content--header-title'>\n          <div className='transaction--pi'>\n            <div>PURCHASE ID</div>\n            <div>{transaction.data.id}</div>\n          </div>\n          </div>\n          </div>}\n          {transaction?.data?.created && <div className='transaction--date'><div>Purchased</div><div>{dateFormat(transaction.data.created, { isTimestamp: true })}</div></div>}\n          {selectedUser && <div className='transaction--email'><div>Email</div><div>{selectedUser?.email}</div></div>}\n          {transaction?.cart_items && <>\n            <div className='transaction--list'>\n              {Array(transaction?.cart_items).map(\n                ([field, value]: any) => {\n                  return <div className='transaction__item' key={field.name}>\n                    <div className='transaction__item-identity'>\n                      <div className='identity-name'>{field.name}</div>\n                      <div className='identity-id'>{field.id}</div>\n                    </div>\n                    <div className='transaction__item-description'>\n                      {field.description}\n                    </div>\n                    <div className='transaction__item-amount'>\n                      {numberToUsd(field.price?.unit_amount)}\n                    </div>\n                  </div>\n                })}\n            <div className='transaction--total'><div>total</div> <div>{numberToUsd(transaction.total)}</div></div>\n            </div>\n          </>\n          }\n          {transaction?.error?.includes(\"Your card was declined.\") && <div className='card transaction__error declined'>\n            <div className='transaction__title'>\n              Your card was declined\n            </div>\n            <UiButton href=\"/cart\">return to cart</UiButton>\n          </div>}\n        </div>\n      </div>\n      {/* {JSON.stringify(transaction)} */}\n    </>\n  );\n};\n\nexport default Transaction;","/home/web/servers/frontend/Deepturn/app/src/modules/ecommerce/transaction/views/TransactionItem/TransactionItem.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/home/controller/Home.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/home/views/hue/controller/Lights.tsx",["1452"],"// Relative Path: ./lights.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './Lights.scss';\nimport { getService } from '@webstack/common';\nimport IHomeService, { ILight } from '~/src/core/services/HomeService/IHomeService';\nimport AdaptGrid from '@webstack/components/AdaptGrid/AdaptGrid';\nimport { useLoader } from '@webstack/components/Loader/Loader';\nimport UiBar from '@webstack/components/Graphs/UiBar/UiBar';\nimport ToggleSwitch from '@webstack/components/UiForm/components/UiToggle/UiToggle';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport UiInput from '@webstack/components/UiForm/components/UiInput/UiInput';\nimport UiMediaSlider from '@webstack/components/UiMedia/views/UiMediaSlider/UiMediaSlider';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport { calculateHexFromHueSatBri } from '../functions/LightHelpers';\nimport { reverseString } from '@webstack/helpers/Strings/reverseString';\nimport ColorPicker from '@webstack/components/ColorPicker/ColorPicker';\nimport UiKnob from '@webstack/components/UiForm/components/UiKnob/UiKnob';\n\ninterface ILightDisplay extends ILight {\n  view?: string;\n}\nconst LightsList = () => {\n  const [loader, setLoader] = useLoader();\n  const [go, setGo] = useState<any | undefined>(false);\n  // const [group, setGroup] = useState<string[] | undefined>();\n  const [currentLight, setCurrentLight] = useState<ILightDisplay | undefined>();\n  const [hueData, setHueData] = useState<any>();\n  const [isAll, setIsAll] = useState<boolean | ILightDisplay>(false);\n  const homeService = getService<IHomeService>('IHomeService');\n  const [view, setView] = useState('light');\n  const updateLight = (changedLight: ILightDisplay, isColor?: boolean) => {\n    setHueData(() => hueData.map((light: ILightDisplay) => {\n      if (light.id_ == changedLight.id_) {\n        if (isColor) changedLight.view = 'color'\n        light = changedLight;\n      }\n      return light;\n    }))\n  };\n\n  const toggleBarView = (id: string) => {\n    const updateLightsWithView = hueData.map((light: ILightDisplay) => {\n      if (light?.id_ == id) {\n        if (light?.view == undefined) {\n          light.view = 'color'\n        } else if (light?.view != undefined) delete light.view\n\n      }\n      return light\n    });\n    setHueData(updateLightsWithView)\n  }\n\n  const onLights = hueData && hueData?.filter((light: ILightDisplay) => light.is_on) || [];\n  const handleLightAnimation = (color: string) => {\n    if (onLights.length === 0) return;\n    const currentLightIndex = currentLight ? onLights.findIndex((light: ILightDisplay) => light.id_ === currentLight.id_) : -1;\n    const nextLightIndex = (currentLightIndex + 1) % onLights.length;\n    const nextLight = onLights[nextLightIndex];\n    setCurrentLight(nextLight);\n    multiHomeService('color', { id: nextLight.id_, hex: color });\n  };\n  const [group, setGroup] = useState<string[]>([]); // Changed from useState<string[] | undefined>();\n\n\n  const atPoints = onLights && onLights.map((light: ILightDisplay, index: number) => {\n    const newHex = light?.hex ? `#${reverseString(light.hex.substring(1, light.hex.length))}` : '#ff3300'\n    return {\n      time: (index + 1) * 1000,\n      value: newHex,\n      backgroundColor: newHex,\n      onPoint: handleLightAnimation\n    };\n  });\n  const hueList = async (hue_object?: string) => {\n    setLoader({ active: true, body: `loading ${hue_object}` });\n    try {\n      const response = await homeService.hue_list(hue_object);\n      setHueData(response);\n    } catch (e: any) {\n      console.log('[ FETCH LIGHTS (ERR) ]', JSON.stringify(e))\n    }\n  }\n\n  const addToGroup = (id_: string) => {\n    setGroup(group !== undefined ? [...group, id_] : [id_]);\n  }\n  const removeFromGroup = (id_: string) => {\n    if (group) {\n      setGroup(group.filter((existingId) => existingId !== id_));\n    }\n  }\n\n  const multiHomeService = async (action: string, data?: any) => {\n    // console.log('[ CHATGPT HELP! ]',JSON.stringify({action, data, group}));\n    const handleLoader = (active: boolean, action?: string, name?: string) => {\n      setLoader({ active: active, body: `${action}, ${name} ` });\n    };\n\n    handleLoader(true, action, data?.name);\n\n    const applyAction = async (id_: string) => {\n      let response;\n      // Convert string ID to number if your service methods expect numeric IDs\n      const numericId = Number(id_);\n      switch (action) {\n        case 'toggle':\n          response = await homeService.hue_toggle(numericId, view === 'group' && 'group' || undefined);\n          break;\n        case 'brightness':\n          if (data?.bri !== undefined) {\n            response = await homeService.hue_brightness(numericId, data.bri, view);\n          }\n          break;\n        case 'color':\n          if (data?.hex) {\n            console.log(\"[ data.hex ] \", data.hex, view)\n            response = await homeService.lightColor(id_, data.hex, view);\n            const calculatedHex = calculateHexFromHueSatBri(response.hue, response.sat, response.bri);\n            response = { ...response, hex: calculatedHex, view: 'color' };\n          }\n          break;\n        // No default action needed as all cases are covered\n      }\n      if (response) {\n        updateLight(response, action === 'color');\n      }\n    };\n\n    // Perform action on all lights in the group if applicable\n    if (group.length > 0 && ['toggle', 'brightness', 'color'].includes(action)) {\n      for (const id_ of group) {\n        await applyAction(id_);\n      }\n    } else if (data?.id) {\n      // Perform action on a single light\n      await applyAction(data.id);\n    }\n\n    handleLoader(false, action, data?.name);\n  };\n\n\n  const getHueList = (hue_object?: string) => {\n\n    hueList(hue_object).then(() => {\n      setLoader({ active: false });\n      hue_object && setView(hue_object);\n    });\n  }\n  const oppoView = view === 'light' ? 'group' : 'light';\n  useEffect(() => {\n    hueData == undefined && getHueList();\n  }, []);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='lights'>\n\n        {/* <AdaptGrid xs={2} lg={3} gap={15}>\n          <UiButton variant={go && 'primary'} onClick={() => getHueList(oppoView)}>{oppoView}</UiButton>\n          <UiButton variant={go && 'primary'} onClick={() => setGo(!go)}>start animation</UiButton>\n          <UiButton variant={go && 'primary'} onClick={() => isAll == false ? setIsAll({ ...onLights[0], id_: 'all-lights' }) : false}>\n            Set All\n          </UiButton>\n        </AdaptGrid>\n        <UiMediaSlider\n          backgroundColors={['#ff3300']}\n          atPoints={atPoints}\n          duration={10000}\n          start={go}\n        /> */}\n        <UiKnob percent={10} />\n        {hueData && !isAll && <AdaptGrid xs={1} sm={3} gap={15}>\n          {Object.entries(hueData).map(([key, light]: any, index: number) =>\n            <div\n              className={`lights__light ${group?.includes(light.id_) ? 'in-group' : ''}`}\n              key={index}\n              onDoubleClick={() => {\n                if (group?.includes(light.id_)) {\n                  console.log(`removeFromGroup(${light.id_})`);\n                  removeFromGroup(light.id_);\n                } else {\n                  console.log(`addToGroup(${light.id_})`);\n                  addToGroup(light.id_);\n                }\n              }}>\n              <div className='lights__light-header'>\n                <div className='lights__light-header--action'>\n                  <UiInput size='sm' value={light.name} disabled={true} />\n                  <UiButton size='sm' >update</UiButton>\n                </div>\n\n                <div className='lights__light-header--action' >\n                  <ToggleSwitch name={light?.id_} value={light?.is_on} onChange={() => multiHomeService('toggle', { id: light.id_ })}/>\n                  <div\n                    className='lights__light-header--action'\n                    onClick={() => toggleBarView(light.id_)}\n                  >\n                    <UiIcon icon='fa-palette' />\n                  </div>\n                </div>\n              </div>\n\n              {light?.view !== 'color' ? (\n                <UiBar\n                  onChange={(value) => {\n                    if (String(value).length == 0 || !value) return;\n                    else multiHomeService('brightness', { id: light.id_, bri: value, name: light.name });\n                  }}\n                  barCount={5}\n                  percentage={light?.bri * 100 / 254}\n                />\n              ) : (\n                <ColorPicker\n                  hex={light.hex}\n                  onChange={(hex: string) => multiHomeService('color', { id: light.id_, hex: hex, name: light.name })}\n                />\n              )}\n            </div>\n          )}\n        </AdaptGrid>}\n        {typeof isAll == 'object' && (\n          <UiBar\n            onChange={(value) => {\n              if (String(value).length == 0 || !value) return;\n              else if (String(value).startsWith('#')) multiHomeService('color', { id: isAll.id_, hex: value });\n              else multiHomeService('brightness', { id: isAll.id_, bri: value });\n            }}\n            barCount={5}\n            percentage={isAll?.bri * 100 / 254}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LightsList;\n","/home/web/servers/frontend/Deepturn/app/src/modules/home/views/hue/functions/LightHelpers.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/home/views/surveillance/controller/Surveillance.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/index/controller/Index.tsx",["1453"],"import styles from './Index.scss';\nimport Deepturn from '../views/Merchants/Deepturn/controller/Deepturn';\nimport NirvanaEnergy from '../views/Merchants/NirvanaEnergy/NirvanaEnergy';\nimport environment from '~/src/core/environment';\nimport { useEffect, useState } from 'react';\nimport UiViewLayout from '@webstack/layouts/UiViewLayout/controller/UiViewLayout';\nimport AireHotel from '../views/Merchants/AireHotel/AireHotel';\n\n\n\nconst Index = () => {\n  const [view, setView] = useState<any>()\n\n  const views = {\n    'nirv1': <NirvanaEnergy />,\n    'mb1':<Deepturn/>,\n    'ah1':<AireHotel/>,\n  }\n  // const campaign = useCampaign();\n  const mid = environment.merchant.mid;\n  useEffect(() => {\n    if (!view)setView(mid); \n}, []);\nreturn (\n    <>\n      <style jsx>{styles}</style>\n        <UiViewLayout\n          currentView={view}\n          views={views}\n        /> \n    </>\n  );\n\n};\n\nexport default Index;","/home/web/servers/frontend/Deepturn/app/src/modules/index/views/HomeGridItem/HomeGridItem.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/index/views/Merchants/AireHotel/AireHotel.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/index/views/Merchants/Deepturn/controller/Deepturn.tsx",["1454","1455","1456"],"import React, { useEffect, useState } from 'react';\nimport styles from './Deepturn.scss';\n// import UiMap from '../../../../../webstack/components/ThreeComponents/UiMap/controller/UiMap';\n// import { IVessel } from '@webstack/components/ThreeComponents/UiMap/models/IMapVessel';\nimport { useRouter } from 'next/router';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport environment from '~/src/core/environment';\nimport UiViewLayout from '@webstack/layouts/UiViewLayout/controller/UiViewLayout';\nimport { capitalizeAll } from '@webstack/helpers/Capitalize';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport { TJSCube } from '@webstack/components/ThreeComponents/TJSCube/controller/test';\nimport useWindow from '@webstack/hooks/useWindow';\nconst Deepturn = () => {\n  const { width } = useWindow();\n  // const [currentVessel, setCurrentVessel] = useState<IVessel | false | undefined>();\n  // const closeVessel = () => currentVessel && setCurrentVessel(false);\n  const { pathname } = useRouter()\n  // const vessels: IVessel[] = [\n  //   {\n  //     name: 'Two Story Smart Home',\n  //     lngLat: [-75.1867254, 39.9307048],\n  //     className: \"partner\",\n  //     images: [\n  //       \"https://a0.muscache.com/im/pictures/hosting/Hosting-U3RheVN1cHBseUxpc3Rpbmc6MTEyNDAxNzM1NTk1NjgzMjg4Mw%3D%3D/original/e1573119-8f57-4e97-9d4f-9ed4be4de8b4.jpeg?im_w=1200\",\n  //       \"https://a0.muscache.com/im/pictures/hosting/Hosting-U3RheVN1cHBseUxpc3Rpbmc6MTEyNDAxNzM1NTk1NjgzMjg4Mw%3D%3D/original/a6f2bd88-0ef0-455b-8f00-433eee5b13c2.jpeg?im_w=720\"\n  //     ],\n  //     description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n  //   },\n  // ];\n  const [loaded, setLoaded] = useState<boolean>(false);\n  const [view, setView] = useState<string>('enter');\n  const handleLoad = () => {\n    if (!loaded && pathname == '/') setLoaded(true);\n  }\n  useEffect(() => {\n    if (document.readyState === 'complete' || document.readyState === 'interactive') {\n      handleLoad()\n    } else {\n      window.addEventListener('DOMContentLoaded', handleLoad);\n    }\n    return () => window.removeEventListener('DOMContentLoaded', handleLoad);\n\n  }, []);\n\n  const DeepturnCommercial = () => {\n\n  }\n  const ComingSoon = () => {\n    return <>\n      <style jsx>{styles}</style>\n      <div className='deepturn__coming-soon'>\n        <div className='deepturn__coming-soon--title'>\n          Coming Soon\n        </div>\n        <div>\n          <pre className='deepturn__coming-soon--body'>\n            Digital marketing is the vehicle to take the insights from our Behavioral Microtargeting program and deliver the right messages to the right individuals in meaningful ways online.\n          </pre>\n\n          <pre className='deepturn__coming-soon--body'>\n            Our full-service in-house marketing operation gives you access to a powerful collaboration of behavioral insight and industry-leading advertising technology, with a transparent pricing structure driven solely by your success.\n          </pre>\n        </div>\n      </div>\n    </>\n  }\n  const DeepturnEntitySelect = () => {\n    const BusinessSelectMarquee = ({ btnText, title, description, onClick }: { btnText: string, title?: string, description: string, onClick?: (e: any) => void }) => <>\n      <style jsx>{styles}</style>\n      <div className='business-select--marquee'>\n        <div className='-deepturn__'>Beta</div>\n\n        <div className='business-select--marquee__title'>\n          <UiIcon icon={`${environment.merchant.name}-logo`} /> {capitalizeAll(btnText)}\n        </div>\n        <div className='business-select--marquee__description'>\n          {description}\n        </div>\n        <UiButton\n          variant=\"primary\"\n          traits={{\n            beforeIcon: `${environment.merchant.name}-logo`\n          }}\n          size='xxl'\n          onClick={() => setView('coming-soon')}\n        // FUTURE USAGE\n        // onClick={()=>setView(btnText)}\n        >visit {capitalizeAll(btnText)}</UiButton>\n      </div></>\n    return <>\n      <style jsx>{styles}</style>\n\n      <div className='deepturn__business-select'>\n        <BusinessSelectMarquee\n          btnText=\"commercial\"\n          title=\"Data-driven marketing\"\n          description=\"We measurably improve your brand's marketing effectiveness by changing consumer behavior.\"\n        />\n        <BusinessSelectMarquee\n          btnText=\"political\"\n          title=\"Data-driven campaigns\"\n          description=\"By knowing your electorate better, we achieve greater influence while lowering overall costs.\"\n        />\n      </div>\n    </>\n  }\n  const views = {\n    enter: <div><UiButton variant='dark' size='xxl' onClick={() => setView('businessSelect')}>&zwnj; &zwnj; &zwnj; enter &zwnj; &zwnj; &zwnj; </UiButton></div>,\n    businessSelect: <DeepturnEntitySelect />,\n    \"coming-soon\": <ComingSoon />\n  }\n  return (\n    <>\n      <style jsx>{styles}</style>\n      {/* <div className='dev'>{JSON.stringify(userData, null, 2)}</div> */}\n      <div className='deepturn'>\n          <img className='deepturn__bg' src=\"/assets/backgrounds/contour_bg.gif\" />\n        <div className='component--terrain'>\n          <TJSCube\n\n            icon={{\n              bevel: {\n                bevelEnabled: true,\n                bevelThickness: 5,\n                bevelSegments: 15,\n                bevelSize: 2\n              },\n              color: \"#303030\",\n              // backgroundColor:\"#e0e0e0\",\n              metalness: 15,\n              // roughness: .51,\n              // opacity: opacity !== 0 && opacity * .1 || .1,\n              // opacity: .7,\n              icon: \"deepturn-logo\",\n              // texture: \"/assets/backgrounds/lava1.jpeg\",\n              // bumpMap:\"/assets/textures/texture-leaves.jpeg\",\n              texture: \"/assets/backgrounds/contour_bg.gif\",\n              size: width > 1100 ? { x: 100, y: 100, z: 9 } : { x: 70, y: 70, z: 9 },\n              animate: { rotate: { y: -2, x: 1, speed: .0007 } }\n            }}\n          // metalness={5}\n          />\n        </div>\n        <UiViewLayout variant='anchor' views={views} currentView={view} />\n      </div>\n    </>\n  );\n};\n\nexport default Deepturn;\n{/* <div className='component--map'>\n<pre>{JSON.stringify(userData, null, 2)}</pre>\n\n  {/* {userData && Object.entries(userData).map(([k, v]) => <div className='d-flex-col s-w-100 align-start gap-9'>\n    <div >\n      {k}: {typeof v == 'object' ? Object.entries(v).map(([l, b]) => <div className='d-flex-col s-w-100 align-start gap-9'>\n        <div>--> {l}: {JSON.stringify(b)}</div>\n      </div>) : v}\n    </div><br />\n  </div>)} */}\n{/* <TJSCube\nicon={{\nbevel: {\n  bevelEnabled: true,\n  bevelThickness: 5,\n  bevelSegments: 15,\n  bevelSize: 2\n},\n// color:\"#e0e0e0\"/,\n// backgroundColor:\"#e0e0e0\",\n// metalness: 10,\n// roughness: .51,\n// opacity: opacity !== 0 && opacity * .1 || .1,\n// opacity: .7,\nicon: \"deepturn-logo\",\ntexture: \"/assets/backgrounds/lava1.jpeg\",\n// bumpMap:\"/assets/textures/texture-leaves.jpeg\",\nsize: { x: 300, y: 300, z: 9 },\nanimate: { rotate: { y: -2, x: 1, speed: .0007 } }\n}}\n// metalness={5}\n/>  */}\n{/*\n<UiMap\nonVesselClick={setCurrentVessel}\nrequire='both'\noptions={{\nrpm: 200,\n}}\nvessels={vessels}\n/>\n<UiTerrain/>\n</div>\n */}","/home/web/servers/frontend/Deepturn/app/src/modules/index/views/Merchants/NirvanaEnergy/NirvanaEnergy.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/controller/User.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/helpers/methodReduce.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/model/IMethod.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserDocs/controller/UserDocs.tsx",["1457"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styles from './UserDocs.scss';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport { getService } from '@webstack/common';\nimport IProductService from '~/src/core/services/ProductService/IProductService';\nimport environment from '~/src/core/environment';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport capitalize, { capitalizeAll } from '@webstack/helpers/Capitalize';\nimport UiCollapse from '@webstack/components/UiCollapse/UiCollapse';\nimport { useLoader } from '@webstack/components/Loader/Loader';\nimport keyStringConverter from '@webstack/helpers/keyStringConverter';\nimport UiInput from '@webstack/components/UiForm/components/UiInput/UiInput';\nimport DocumentsNone from '../views/DocumentsNone';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport IDocumentService from '~/src/core/services/DocumentService/IDocumentService';\nimport { useModal } from '@webstack/components/modal/contexts/modalContext';\nimport AdaptGrid from '@webstack/components/AdaptGrid/AdaptGrid';\n\n// Remember to create a sibling SCSS file with the same name as this component\ninterface IDocuments {\n  user?: IAuthenticatedUser;\n  previewPdf?: boolean;\n}\n\nconst UserDocs = ({ user, previewPdf }: IDocuments) => {\n\n  const docRef = useRef<any | null>(null);\n  const [docs, setDocs] = useState([]);\n  const ProductService = getService<IProductService>('IProductService');\n  const [loader, setLoader] = useLoader();\n  const [fullName, setFullName] = useState<string>('');\n  const pdfContainerRef = useRef<HTMLDivElement | null>(null);\n\n  const documentService = getService<IDocumentService>('IDocumentService');\n  const { openModal, closeModal, modalContent } = useModal();\n  const onSubmit = async (formData: any) => {\n    closeModal();\n    setLoader({ active: true, body: 'Uploading your document' });\n    try {\n      const response = await documentService.uploadDocument(formData, 'tax_document_user_upload');\n      console.log('PDF uploaded successfully', response);\n    } catch (error) {\n      console.error('Error uploading PDF', error);\n    }\n  }\n  const generateAndSendPDF = async (docId: string) => {\n    // Get the DOM element using the ref\n    const pdfCurrent = pdfContainerRef.current;\n    console.log('[ PDF CONTAINER REF ]', pdfCurrent?.offsetHeight)\n    if (!pdfCurrent) {\n      console.error('PDF container element not found');\n      return;\n    }\n\n    // Define custom dimensions for the PDF (adjust as needed)\n    const pageWidth = pdfCurrent?.offsetWidth; // A standard page width in points (8.27 inches * 72 points per inch)\n    const pageHeight = pdfCurrent?.offsetHeight;  // A standard page height in points (11 inches * 72 points per inch)\n    const margin = 10;       // Margin in points\n\n    // Create a new jsPDF instance with custom dimensions\n    const pdf = new jsPDF('p', 'pt', [pageWidth, pageHeight]);\n\n    // Initialize variables for page rendering\n    let currentPageY = margin;\n    let contentHeight = 0;\n\n    // // Helper function to add a new page\n    // const addNewPage = () => {\n    //   pdf.addPage();\n    //   currentPageY = margin;\n    //   contentHeight = 0;\n    // };\n\n    // Capture the content of the specified element\n    const canvas = await html2canvas(pdfCurrent, { scrollY: currentPageY });\n\n    // Calculate the content's height\n    contentHeight = canvas.height;\n\n    // Check if content height exceeds the remaining page height\n    // if (currentPageY + contentHeight > pageHeight - margin) {\n    //   // Content height exceeds the remaining page height, so add a new page\n    //   addNewPage();\n    // }\n\n    // Add the captured content to the PDF page\n    pdf.addImage(canvas, 'PNG', margin, currentPageY, pageWidth - 2 * margin, contentHeight);\n\n    // Convert the PDF to a Blob\n    const pdfBlob = pdf.output('blob');\n\n    // Prepare the data to be sent\n    const formData = new FormData();\n    formData.append('file', pdfBlob, 'document.pdf');\n\n    // Open the modal with the preview content\n    if(previewPdf){openModal(\n      < >\n        <style jsx>{styles}</style>\n        <div className='account-documents__pdf-preview'>\n\n          <h2>Document Preview</h2>\n          <div className='account-documents__pdf-preview--content'>\n            <embed src={URL.createObjectURL(pdfBlob)} type=\"application/pdf\" width=\"100%\" height=\"600px\" />\n          </div>\n          <UiButton variant='primary' onClick={() => onSubmit(formData).then(() => setLoader({ active: false }))}>Confirm & continue</UiButton>\n          <UiButton variant='link' onClick={closeModal}>cancel</UiButton>\n        </div>\n      </>\n    )}else{\n      onSubmit(formData).then(() => setLoader({ active: false }));\n    }\n  };\n\n  const handleFullName = (e: any) => {\n    const { value } = e.target;\n    setFullName(value);\n  };\n\n  const getDocuments = async () => {\n    setLoader({ active: true, body: 'getting your documents' })\n    try {\n      const entireProducts = await ProductService.getProducts();\n      const userRequirements = user?.metadata?.requirements;\n      const newDocs = entireProducts?.data.filter((prod: any) =>\n        // IS MERCHANT\n        prod?.metadata?.mid == environment.merchant.mid &&\n        // IS A DOCUMENT\n        prod?.metadata?.type == 'document' &&\n        // Document is for Customer\n        userRequirements?.includes(prod.id)\n      );\n      setDocs(newDocs);\n    } catch (e: any) {\n      console.log('[ DOCS ERROR ]', e);\n    }\n    setLoader({ active: false });\n  }\n\n  const isComplete = () => {\n    const fNLen = fullName.length;\n    if (!user || user?.name == undefined) return 'no user';\n    else if (fNLen < 3) return true;\n    else if (fNLen >= 3 && String(user.name).toLowerCase().includes(fullName.toLowerCase())) {\n      return true;\n    } else {\n      return 'full name incorrect';\n    }\n  };\n\n  const complete = isComplete();\n\n  useEffect(() => {\n    Boolean(!Object(docs).length) && getDocuments();\n  }, [setDocs]);\n\n  const DocStatusBox = ({ status, docs }: any) => {\n    return <>\n      <style jsx>{styles}</style>\n      <div className='account-documents__status'>\n        {status} Documents\n        <div className='account-documents__status--docs'>\n          {docs?.length && Object.entries(docs).map(([k, s]: any) => {\n            return <div key={k} className='account-documents__status--docs--doc'>\n              {/* {s?.name} */}\n              {Number(k + 1)}. <UiButton variant='link'>{capitalizeAll(s?.name)}</UiButton>\n            </div>\n          }) || <div className='account-documents__status--docs--none'>\n              NO documents are {status}\n            </div>}\n        </div>\n      </div>\n    </>\n  }\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='account-documents' ref={docRef}>\n        <div className='account-documents__header'>\n          <div className='account-documents__header--title'>\n            {user?.name && `${capitalizeAll(user.name)}'s Documents`}\n          </div>\n        </div>\n        {docs?.length && <AdaptGrid xs={1} md={2} variant='card' gapX={10} margin=\"var(--s-4) 0\">\n          <DocStatusBox status='incomplete' docs={docs} />\n          <DocStatusBox status='complete' />\n        </AdaptGrid> || null}\n        <div className='account-documents__list'>\n          <div className='account-documents--document'>\n            {docs?.length ? docs.map((doc: any, i: number) => {\n              return <div key={i} >\n                <UiCollapse variant='document' label={doc?.name} open={true}>\n                  <div className='account-documents__pdf' ref={pdfContainerRef}>\n                    {doc?.description && <div className='account-documents__pdf__description'>\n                      {doc?.description}\n                    </div>}\n                    <ol className='account-documents--document__terms' >\n                      {doc?.metadata && Object.entries(doc?.metadata).filter(([key, bullShit]) => key.substring(0, 2) === 't-').map(([key, value]: any) => {\n                        const termTitle: string = String(`${capitalize(key?.split('_')[1])}`);\n\n                        return <li key={key} className='account-documents--document__terms--term'>\n                          <div className='account-documents--document__terms--term__title'>\n                            {capitalize(keyStringConverter(termTitle))}\n                          </div>\n                          <div className='account-documents--document__terms--term__body'>\n                            {value && value || ''}\n                          </div>\n                        </li>\n                      })}\n                    </ol>\n                    <div className='account-documents__actions'>\n                      <UiInput\n                        variant={`signature${typeof complete != 'string' ? '' : ' invalid'}`}\n                        name='name'\n                        value={fullName}\n                        label={`Sign, \"${user?.name}\". to agree to the terms & conditions`}\n                        placeholder={user?.name}\n                        onChange={handleFullName}\n                        error={typeof complete == 'string' && complete || undefined}\n                      />\n                      <UiButton\n                        variant={String(user?.name).toLowerCase() == fullName.toLowerCase() ? 'primary' : 'disabled'}\n                        onClick={() => generateAndSendPDF(doc.id)}\n                      >\n                        Agree\n                      </UiButton>\n                    </div>\n                  </div></UiCollapse>\n              </div>\n            }) : (!loader.active &&\n              <DocumentsNone />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserDocs;\n","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserDocs/views/DocumentsNone.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/controller/UserMethods.tsx",["1458"],"// Relative Path: ./AccountMethod.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './UserMethods.scss';\nimport IMemberService from '~/src/core/services/MemberService/IMemberService';\nimport { getService } from '@webstack/common';\nimport { IMethod } from '../../../model/IMethod';\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\nimport UserCurrentMethods from '../views/UserCurrentMethods/UserCurrentMethods';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport Loader, { useLoader } from '@webstack/components/Loader/Loader';\nimport UserCreateMethod from '../views/UserCreateMethod/controller/UserCreateMethod';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\n\n\n\ninterface IUserMethods {\n  open?: boolean | 'opened';\n  customerMethods?: any;\n  user?: IAuthenticatedUser;\n  selected?: string;\n  onSelect?: (method?: IMethod) => void;\n  onSuccess?: (e: any) => void;\n}\nconst UserMethods: React.FC<any> = ({ user, open, customerMethods, selected, onSelect, onSuccess }: IUserMethods) => {\n  const [loader, setLoader] = useLoader();\n  const [label, setLabel] = useState<any>('payment methods');\n  const [methods, setMethods] = useState<IMethod[]>([]);\n  const [selectedUser, setUser] = useState<IAuthenticatedUser | undefined>();\n\n  const MemberService = getService<IMemberService>(\"IMemberService\");\n\n  const handleDelete = async (id: string) => {\n    getAccountMethods();\n  }\n  const handleCreated = (e: any) => {\n    getAccountMethods();\n    onSuccess && onSuccess(e)\n  }\n\n  const getAccountMethods = async (e?: any) => {\n    if (!selectedUser) return;\n    const methodsResponse = await MemberService.getMethods(selectedUser.id);\n      if(methodsResponse?.data?.length === 1 && onSelect)onSelect(methodsResponse?.data[0])\n      setMethods(methodsResponse?.data);\n  }\n  const handleLabel = () => {\n    if (selectedUser && methods.length && !open) {\n      let default_method: any = methods.find(m => m.id == selectedUser?.invoice_settings?.default_payment_method);\n      if (default_method?.card) {\n        default_method = <div style={{ display: 'flex', alignItems: \"center\", gap: '16px' }}>\n          <UiIcon icon={default_method.card.brand} /> {`**** **** **** ${default_method.card.last4}`}\n        </div>\n        setLabel(default_method);\n      }\n    }\n  }\n  const signed_in_user = useUser();\n  const canSelect = selected !== undefined && onSelect;\n  const handleMethodUser = () =>{\n    if (!user) setUser(signed_in_user);\n    else if (user) setUser(user);\n  }\n  const handleMethod =()=>!customerMethods && getAccountMethods() || setMethods(customerMethods);\n  const initUserMethods = () =>{\n    setLoader({ active: true });\n    handleMethodUser();\n    handleLabel();\n    handleMethod();\n    setLoader({ active: false });\n  }\n  const userHasCards = Boolean(Object.entries(methods).filter(([_, m]:any)=>m?.card)?.length);\n  useEffect(() => {\n  initUserMethods();\n  }, [selectedUser]);\n  if (selectedUser !== undefined) return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='user-methods'>\n        {userHasCards &&\n          <div\n            className={`user-methods__existing ${canSelect ? ' user-methods__existing__selected' : ''}`}\n          >\n            {onSelect && <div className={`${!selected ? 'existing__select' : 'existing__selected'}`}>\n              {selected ?\n                <UserCurrentMethods\n                  user={selectedUser}\n                  methods={[selected]}\n                  onDeleteSuccess={handleDelete}\n                  response={loader.active}\n                  selected={selected}\n                  onSelect={onSelect}\n                /> : 'Select a payment method'}\n            </div>\n            }\n            {!selected &&\n              <div className='user-methods__list'>\n                <div className='user-methods__existing--title'>\n                  current methods\n                </div>\n                <UserCurrentMethods\n                  user={selectedUser}\n                  methods={methods}\n                  onDeleteSuccess={handleDelete}\n                  response={loader.active}\n                  selected={selected}\n                  onSelect={onSelect}\n                />\n              </div>\n            }\n          </div>\n        }\n          <UserCreateMethod user={selectedUser} onSuccess={handleCreated} />\n      </div>\n    </>\n  );\n  return <></>\n};\n\nexport default UserMethods;","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/models/IPaymentMethod.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCreateMethod/controller/UserCreateMethod.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCreateMethod/views/CreateMethodStripeForm/CreateMethodStripeForm.tsx",["1459","1460"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useStripe, useElements } from '@stripe/react-stripe-js';\nimport styles from \"./CreateMethodStripeForm.scss\";\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport environment from '~/src/core/environment';\nimport { useNotification } from '@webstack/components/Notification/Notification';\nimport keyStringConverter from '@webstack/helpers/keyStringConverter';\nimport { useLoader } from '@webstack/components/Loader/Loader';\n\ninterface IAccountCreateMethod {\n    onSuccess?: (e: any) => void;\n    open?: boolean;\n    user?: IAuthenticatedUser | undefined;\n    collapse?: boolean;\n    className?: string;\n    shippable?: boolean;\n    success_url?: string;\n}\n\n\nconst CreateMethodStripeForm = ({ onSuccess, user, shippable, success_url=\"/checkout\" }: IAccountCreateMethod) => {\n    const stripe = useStripe();\n    const elements: any = useElements();\n    const [notification, setNotification]=useNotification();\n    const [loader,setLoader] = useLoader();\n    const options = {\n        layout: { \n            type: 'accordion',\n            defaultCollapsed: false,\n            radios: false,\n            spacedAccordionItems: true\n        },\n        // ADD BILLING DETAILS\n    };\n\n    const onSubmit = useCallback(async (event: any) => {\n        event.preventDefault();\n        setLoader({active:true});\n        let confirmParams: any = {\n            // return_url: undefined,\n            return_url: `${environment.merchant.url}${success_url}`,\n        };\n        if (shippable && user?.address?.line1) {\n            confirmParams.shipping = {\n                name: user?.name || 'no-name',\n                address: user.address,\n            };\n        };\n        try {\n            const result: any = await stripe?.confirmSetup({\n                elements,\n                confirmParams: confirmParams,\n                redirect:'if_required',\n            });\n            // console.log('[ RESULT ]', result)\n            if (result.error) {\n                const err = result.error;\n                setNotification({\n                    active: true,\n                    list:[{name: keyStringConverter(err.type), message: err.message}]\n                })\n                console.error('[ Create Method ]( ERROR )', err);\n            } else {\n                const setupIntent: any = result.setupIntent;\n                if (setupIntent && setupIntent.status === 'succeeded') {\n                    onSuccess && onSuccess(setupIntent);\n                }\n            }\n        } catch (e: any) {\n            console.error('[ Account Create Method (onsubmit) Error ]',JSON.stringify(e))\n        }finally{\n            setLoader({active:false});\n        }\n    }, [ elements]);\n\n    const hasPayElem = elements?.getElement('payment') || false;\n    useEffect(() => {\n        // console.log('notification', notification)\n        if (elements && !hasPayElem) {\n            const paymentElement = elements.create('payment', options);\n            paymentElement.mount('#payment-element');\n        }\n    }, [stripe, elements, onSubmit]);\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <form onSubmit={onSubmit} className='account-create-method'>\n                <div className='account-create-method__content'>\n                    <div id=\"payment-element\" />\n                    <div className='account-create-method__submit'>\n                        <UiButton type=\"submit\" variant={hasPayElem?'link':'disabled'}>\n                            Add Payment Method\n                        </UiButton>\n                    </div>\n                </div>\n            </form>\n        </>\n    ); \n};\n\nexport default CreateMethodStripeForm;\n   \n            // {\n            //     \"error\": {\n            //         \"type\": \"card_error\",\n            //         \"code\": \"card_declined\",\n            //         \"decline_code\": \"generic_decline\",\n            //         \"doc_url\": \"https://stripe.com/docs/error-codes/card-declined\",\n            //         \"message\": \"Your card has been declined.\",\n            //         \"payment_method\": {\n            //             \"id\": \"pm_1OqQZDIodeKZRLDVHqXUeO0h\",\n            //             \"object\": \"payment_method\",\n            //             \"billing_details\": {\n            //                 \"address\": {\n            //                     \"city\": null,\n            //                     \"country\": \"US\",\n            //                     \"line1\": null,\n            //                     \"line2\": null,\n            //                     \"postal_code\": \"84117\",\n            //                     \"state\": null\n            //                 },\n            //                 \"email\": null,\n            //                 \"name\": null,\n            //                 \"phone\": null\n            //             },\n            //             \"card\": {\n            //                 \"brand\": \"mastercard\",\n            //                 \"checks\": {\n            //                     \"address_line1_check\": null,\n            //                     \"address_postal_code_check\": null,\n            //                     \"cvc_check\": null\n            //                 },\n            //                 \"country\": \"US\",\n            //                 \"display_brand\": \"mastercard\",\n            //                 \"exp_month\": 2,\n            //                 \"exp_year\": 2029,\n            //                 \"funding\": \"credit\",\n            //                 \"generated_from\": null,\n            //                 \"last4\": \"1411\",\n            //                 \"networks\": {\n            //                     \"available\": [\n            //                         \"mastercard\"\n            //                     ],\n            //                     \"preferred\": null\n            //                 },\n            //                 \"three_d_secure_usage\": {\n            //                     \"supported\": true\n            //                 },\n            //                 \"wallet\": null\n            //             },\n            //             \"created\": 1709516627,\n            //             \"customer\": null,\n            //             \"livemode\": true,\n            //             \"type\": \"card\"\n            //         },\n            //         \"request_log_url\": \"https://dashboard.stripe.com/logs/req_UudiYaaSTsA0g3?t=1709516627\",\n            //         \"setup_intent\": {\n            //             \"id\": \"seti_1OqQVrIodeKZRLDVX6XqR9KT\",\n            //             \"object\": \"setup_intent\",\n            //             \"automatic_payment_methods\": {\n            //                 \"allow_redirects\": \"always\",\n            //                 \"enabled\": true\n            //             },\n            //             \"cancellation_reason\": null,\n            //             \"client_secret\": \"seti_1OqQVrIodeKZRLDVX6XqR9KT_secret_Pfm3S5ahUYgGXZVTQJwCNG2DQBtdp00\",\n            //             \"created\": 1709516419,\n            //             \"description\": null,\n            //             \"last_setup_error\": {\n            //                 \"code\": \"card_declined\",\n            //                 \"decline_code\": \"generic_decline\",\n            //                 \"doc_url\": \"https://stripe.com/docs/error-codes/card-declined\",\n            //                 \"message\": \"Your card was declined.\",\n            //                 \"payment_method\": {\n            //                     \"id\": \"pm_1OqQZDIodeKZRLDVHqXUeO0h\",\n            //                     \"object\": \"payment_method\",\n            //                     \"billing_details\": {\n            //                         \"address\": {\n            //                             \"city\": null,\n            //                             \"country\": \"US\",\n            //                             \"line1\": null,\n            //                             \"line2\": null,\n            //                             \"postal_code\": \"84117\",\n            //                             \"state\": null\n            //                         },\n            //                         \"email\": null,\n            //                         \"name\": null,\n            //                         \"phone\": null\n            //                     },\n            //                     \"card\": {\n            //                         \"brand\": \"mastercard\",\n            //                         \"checks\": {\n            //                             \"address_line1_check\": null,\n            //                             \"address_postal_code_check\": null,\n            //                             \"cvc_check\": null\n            //                         },\n            //                         \"country\": \"US\",\n            //                         \"display_brand\": \"mastercard\",\n            //                         \"exp_month\": 2,\n            //                         \"exp_year\": 2029,\n            //                         \"funding\": \"credit\",\n            //                         \"generated_from\": null,\n            //                         \"last4\": \"1411\",\n            //                         \"networks\": {\n            //                             \"available\": [\n            //                                 \"mastercard\"\n            //                             ],\n            //                             \"preferred\": null\n            //                         },\n            //                         \"three_d_secure_usage\": {\n            //                             \"supported\": true\n            //                         },\n            //                         \"wallet\": null\n            //                     },\n            //                     \"created\": 1709516627,\n            //                     \"customer\": null,\n            //                     \"livemode\": true,\n            //                     \"type\": \"card\"\n            //                 },\n            //                 \"type\": \"card_error\"\n            //             },\n            //             \"livemode\": true,\n            //             \"next_action\": null,\n            //             \"payment_method\": null,\n            //             \"payment_method_configuration_details\": {\n            //                 \"id\": \"pmc_1LqQAcIodeKZRLDVcPlgynCI\",\n            //                 \"parent\": null\n            //             },\n            //             \"payment_method_types\": [\n            //                 \"card\",\n            //                 \"bancontact\",\n            //                 \"ideal\"\n            //             ],\n            //             \"status\": \"requires_payment_method\",\n            //             \"usage\": \"off_session\"\n            //         },\n            //         \"shouldRetry\": false\n            //     }\n            // }","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCurrentMethod/UserCurrentMethod.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserCurrentMethods/UserCurrentMethods.tsx",["1461"],"// Relative Path: ./AccountCurrentMethod.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './UserCurrentMethods.scss';\n\nimport { useNotification } from '@webstack/components/Notification/Notification';\nimport { IMethod } from '~/src/modules/profile/model/IMethod';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport UserCurrentMethod from '../UserCurrentMethod/UserCurrentMethod';\n\n// Remember to create a sibling SCSS file with the same name as this component\ninterface UserCurrentMethod {\n    methods: IMethod[];\n    onDeleteSuccess: (e: any) => void;\n    response?: string;\n    selected?: IMethod | false;\n    onSelect?: (method: IMethod | false) => void;\n    user: IAuthenticatedUser;\n}\nconst UserCurrentMethods: React.FC<any> = ({ methods, onDeleteSuccess, response, user, selected, onSelect }: UserCurrentMethod) => {\n    const default_payment_method = user?.invoice_settings?.default_payment_method\n    const [notification, setNotification] = useNotification();\n    const [methodsClass, setMethodsClass] = useState<any>();\n\n    const handleMethodClasses = (id?: string, iconClasses?: { iconClasses: { default: string, delete: string } }) => {\n        const icons = { default: id == default_payment_method ? 'fa-star' : 'fal-star', delete: 'fa-trash-can' };\n        const init = {\n            content: ['current-method__content'],\n            icons: icons\n        };\n        const show = {\n            content: ['current-method__content', 'current-method__content-show'],\n            icons: icons\n        };\n        const hide = {\n            content: ['current-method__content', 'current-method__content-hide'],\n            icons: icons\n        };\n\n        if (methods && !methodsClass && !id) {\n            let classes: any = {}\n            methods.map((m, k) => { classes[m.id] = init });\n            setMethodsClass(classes);\n        }\n        else if (methods && methodsClass && id) {\n            const currentClasses = methodsClass[id];\n            // console.log('[ currentClasses ]', currentClasses.content)\n            if (currentClasses.content.includes('current-method__content-show')) {\n                setMethodsClass({ ...methodsClass, [id]: hide })\n            } else {\n                setMethodsClass({ ...methodsClass, [id]: show })\n            }\n        }\n    }\n    const handleClick = (selectedMethod: IMethod) => {\n        const id = selectedMethod?.id\n        // console.log({...selectedMethod})\n        if (id && onSelect) {\n            onSelect(!selected && selectedMethod );\n        } else if(id){\n            handleMethodClasses(id)\n        }else{\n            console.error(\"[ JS ( Method  ) ]\", {...selectedMethod})\n        }\n    }\n    useEffect(() => {\n        if (response && response != '') {\n            setNotification({\n                active: true,\n                list: [{ label: response }]\n            });\n        }\n        handleMethodClasses()\n\n    }, [selected, methods]);\n    return (\n        <>\n            <style jsx>{styles}</style>\n            { methods && Object.entries(methods).filter(([_, m]:any)=>m?.card).map(([key, method]:any) => <div \n                className={`current-method--container`} key={key}\n            >\n                <UserCurrentMethod\n                    method={method}\n                    handleClick={handleClick}\n                    methodsClass={methodsClass}\n                    selected={selected}\n                    default_payment_method={default_payment_method}\n                    onDeleteSuccess={onDeleteSuccess}        \n/>\n            </div>)}\n        </>\n    );\n};\n\nexport default UserCurrentMethods;","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserMethods/views/UserSelectMethod/UserSelectMethod.tsx",["1462"],"// Relative Path: ./UserSelectMethod.tsx\nimport React, { useEffect } from 'react';\nimport styles from './UserSelectMethod.scss';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport { IMethod } from '~/src/modules/profile/model/IMethod';\n\n// Remember to create a sibling SCSS file with the same name as this component\ninterface IUserSelectMethods{\n    user?:IAuthenticatedUser;\n    methods:IMethod[]\n}\nconst UserSelectMethod: React.FC<IUserSelectMethods> = ({user, methods}:IUserSelectMethods) => {\n    const findDefaultMethod = () =>{\n        if(!user || !methods)return;\n        const methodIds = methods.map((m,v)=>(m.id));\n        const defaults = [user?.invoice_settings?.default_payment_method, user?.default_source];\n        const hasDefault = defaults.filter(d => d !== null);\n        if(hasDefault?.length){\n            console.log(hasDefault)\n        }\n        // console.log('methodIds: ', user?.default_source, user?.invoice_settings)\n        // console.log('methodIds: ', methodIds)\n    }\n    \n    useEffect(() => {\n        findDefaultMethod();\n    }, [user]);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='user-select-method'>\n      <div className='user-select-method__list'>\n        {methods && Object.entries(methods).map((m,v)=>{\n            return JSON.stringify(m)\n        })}\n      </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserSelectMethod;","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserModify/UserModify.tsx",["1463"],"\nimport { useEffect, useState } from 'react';\n// import styles from './UserModify.scss';\nimport { getService } from '@webstack/common';\nimport IMemberService from '~/src/core/services/MemberService/IMemberService';\nimport { useNotification } from '@webstack/components/Notification/Notification';\nimport UiForm from '@webstack/components/UiForm/controller/UiForm';\nimport { IFormField } from '@webstack/components/UiForm/models/IFormModel';\nimport { phoneFormat } from '@webstack/helpers/userExperienceFormats';\nimport UiMarkdown from '@webstack/components/UiMarkDown/UiMarkDown';\n\nconst UserModify = ({ user, open = false }: any) => {\n  const MemberService = getService<IMemberService>('IMemberService');\n  const [notifiication, setNotification]=useNotification();\n  const [busy, setBusy]=useState(false);\n  const initialFields: IFormField[] = [\n    { name: 'first_name', label: 'first name', required: true },\n    { name: 'last_name', label: 'last name', required: true },\n    { name: 'email', label: 'email', required: true },\n    { name: 'phone', label: 'phone', required: true,constraints:{ min: 1, max: 9} },\n    { name: 'address', label: 'address', required: true },\n  ]\n  const [fields, setFields] = useState<IFormField[]>(initialFields);\n  const onUser = () => {\n    const fieldKeys = initialFields.map(field => field.name);\n    const userFields = () => {\n      if (!user) return [];\n      if(user.phone)user.phone = phoneFormat(user.phone);\n      const firstLast = user.name.split(' ');\n      // Assuming user object has a 'name' property that contains the full name\n      const modifiedUser = {\n        ...user,\n        first_name: firstLast[0],\n        last_name: firstLast[1] || '', // In case there's no last name\n      };\n      delete modifiedUser.name;\n\n      return initialFields.map(field => {\n        if (field.name && fieldKeys.includes(field.name)) return { ...field, value: modifiedUser[field.name] || field.value };\n        return field;\n      });\n    };\n    const updatedFields = userFields();\n    if (updatedFields.length) setFields(updatedFields);\n  };\n  const onChange = (e: { target: { name: string; value: any } }) => {\n    const { name, value } = e.target;\n    // Update the state with the new value for the changed field\n    setFields(currentFields => currentFields.map(field => {\n      if (field.name === name) {\n        // If the field is the one that changed, update its value\n        return { ...field, value: value };\n      }\n      // Otherwise, return the field as is\n      return field;\n    }));\n  };\n  const onSubmit = async (form:any)=>{\n    setBusy(true);\n    const findField:any= (name:string)=>fields.find(f=>f.name == name)?.value;\n    let address = findField('address');\n    const metadata = Boolean(address?.lat && address?.lng ) && {'address.lat': address.lat, 'address.lng': address.lng};\n    if(address?.lat, address?.lng){\n      delete address?.lat;\n      delete address?.lng;\n    }\n    let request:any = {\n      name: `${findField('first_name')} ${findField('last_name')}`,\n      email: findField('email'),\n      phone: phoneFormat(String(findField('phone')), 'US', true),\n      ...address,\n      metadata: metadata,\n    }\n    console.log('[ request ]',request)\n    try{\n      const response = await MemberService.modifyCustomer(user.id);\n      if(response.object == 'customer')setNotification({\n        active: true,\n        list:[\n          {label: 'success', message:<UiMarkdown text={`Updated Member: *${response?.name}*`}/>}\n        ]\n      })\n      // console.log('[ SUCCESS ]', response);\n    }catch(e){\n      console.log('[ EROR ]', e);\n    }\n    setBusy(false);\n  }\n  useEffect(() => {\n    // Check if the user object is present and if the fields have not been updated yet\n    if (user && JSON.stringify(fields) === JSON.stringify(initialFields)) {\n      onUser();\n    }\n  }, [user, setFields]);\n  \n  return (\n      <UiForm\n        fields={fields}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        loading={busy}\n      />\n  );\n};\n\nexport default UserModify;\n","/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserProfile/UserProfile.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/profile/views/UserSubscriptions/controller/UserSubscriptions.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/services/controller/Services.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/ContactForm/ContactForm.tsx",["1464","1465"],"import React, { useEffect, useState } from 'react';\nimport styles from './ContactForm.scss';\nimport UiForm from '@webstack/components/UiForm/controller/UiForm';\nimport IAuthenticatedUser from \"~/src/models/ICustomer\";\nimport { IFormField } from '@webstack/components/UiForm/models/IFormModel';\nimport { findField } from '@webstack/components/UiForm/functions/formFieldFunctions';\nimport useWindow from '@webstack/hooks/useWindow';\n\ninterface IContactFormProps {\n  submit?: {\n    text?: string;\n  }\n  onSubmit: (contactData: any) => void;\n  user?: any;\n  fieldErrors?: any;\n  payment?: any;\n  title?: string | React.ReactElement | boolean;\n}\n\nconst ContactForm: React.FC<IContactFormProps> = (props) => {\n  const { onSubmit, user, submit, title = 'contact', fieldErrors } = props;\n  const windowSize = useWindow();\n\n  const getWidth = (): string => windowSize.width >= 900 ? \"33%\" : \"100%\";\n  const width = getWidth();\n\n  const defaultContactFields: IFormField[] = [\n    { name: 'name', label: \"name\", type: 'text', placeholder: 'Herbie Hancock', required: true },\n    { name: 'email', label: 'email', type: 'email', placeholder: 'your@email.com', required: true, width },\n    { name: 'phone', value: '1 (435) 200 - 3006', label: 'phone', type: 'tel', placeholder: '1 (000) 000-0000', required: true, width },\n    { name: 'address', label: 'address', type: 'text', placeholder: 'Your Address', required: true, width },\n  ];\n\n  const [fields, setFields] = useState<IFormField[]>(defaultContactFields);\n  const [disabled, setDisabled] = useState<boolean>(true);\n\n  const handleDisabled = (updatedFields: IFormField[]) => {\n    const isFormComplete = updatedFields.every(field => !field.required || (field.value && !field.error));\n    setDisabled(!isFormComplete);\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    let fieldsRef = fields.map((field: IFormField) => {\n      if (field.name === name) {\n        field.value = value;\n        return validateField(field);\n      }\n      return field;\n    });\n    setFields(fieldsRef);\n    handleDisabled(fieldsRef);\n  };\n\n  const validateField = (field: IFormField): IFormField => {\n    let text: string = findField(defaultContactFields, field.name)?.name || \"* \";\n    let color: string | undefined = undefined;\n    const errorColor = \"var(--orange-50)\";\n    const hasNumbers = /\\d/;\n\n    if (field.required && !field.value) {\n      color = \"var(--gray-50)\";\n    } else if (field.name === 'email') {\n      const validEmailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (typeof field.value === 'string' && !validEmailRegex.test(field.value)) {\n        text += ' *Invalid email address*';\n        color = errorColor;\n      }\n    } else if (field.name === 'phone') {\n      if (typeof field.value === 'string' && String(field.value).length < 20) {\n        text += ' *not long enough*';\n        color = errorColor;\n      }\n    } else if (field.name === 'name') {\n      if (typeof field.value === 'string' && field.value.length < 3) {\n        text += ' *First Name, too short*';\n        color = errorColor;\n      } else if (typeof field.value === 'string' && !field.value.includes(' ')) {\n        text += ' *Full name must include a space*';\n        color = errorColor;\n      } else if (typeof field.value === 'string' && field.value.includes(' ') && field.value.split(' ')[1].length < 3) {\n        text += ' *Last name, too short*';\n        color = errorColor;\n      } else if (typeof field.value === 'string' && hasNumbers.test(field.value)) {\n        text += ' *Name must not include numbers*';\n        color = errorColor;\n      }\n    }\n\n    const hasError = findField(fieldErrors, field.name);\n    if (fieldErrors && hasError && field.name == text) {\n      delete field.error;\n    }\n    const context = { ...field, label: { text, color } };\n    return context;\n  };\n\n  const handleFormSubmit = () => {\n    const formData = fields.reduce((acc: any, field: any) => {\n      acc[field.name] = field.value;\n      return acc;\n    }, {});\n    onSubmit(formData);\n  };\n\n  useEffect(() => {\n    if (fieldErrors) {\n      const updatedFields = fields.map((field: IFormField) => {\n        const errorField = findField(fieldErrors, field.name);\n        if (errorField) return { ...field, error: errorField.error };\n        return field;\n      });\n      setFields(updatedFields);\n    }\n  }, [fieldErrors]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const newWidth = getWidth();\n      setFields(prevFields => prevFields.map(field => ({\n        ...field,\n        width: field.name !== 'name' ? newWidth : field.width\n      })));\n    };\n\n    handleResize(); // Call it once to set initial widths\n  }, [windowSize.width]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='contact-form'>\n        {title && <div className='contact-form__title'>{title}</div>}\n        {fieldErrors && (\n          <ul>\n            {Object.entries(fieldErrors).map(([index, field]: any) => (\n              <li key={index}>\n                <strong>{field?.name}: </strong>{field?.error}\n              </li>\n            ))}\n          </ul>\n        )}\n        <UiForm\n          fields={fields}\n          disabled={disabled}\n          onChange={onChange}\n          onSubmit={handleFormSubmit}\n          submitText={submit?.text}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ContactForm;\n","/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/controller/Navbar.tsx",["1466","1467"],"import React, { useEffect, useState, useMemo, useRef } from \"react\";\nimport styles from \"./Navbar.scss\";\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport { IRoute, useClearanceRoutes } from \"../data/routes\";\nimport useRoute from \"~/src/core/authentication/hooks/useRoute\";\nimport UiButton from \"@webstack/components/UiButton/UiButton\";\nimport Authentication from \"~/src/pages/authentication\";\nimport { useCartTotal } from \"~/src/modules/ecommerce/cart/hooks/useCart\";\nimport { useModal } from \"@webstack/components/modal/contexts/modalContext\";\nimport UiSelect from \"@webstack/components/UiForm/components/UiSelect/UiSelect\";\nimport MobileNav from \"../views/MobileNav/MobileNav\";\nimport environment from \"~/src/core/environment\";\nimport useNavMobile from \"../hooks/useNavBreak\";\nimport useScroll from \"@webstack/hooks/useScroll\";\nimport keyStringConverter from \"@webstack/helpers/keyStringConverter\";\n\nconst Navbar = () => {\n  const { selectedUser, pathname, explicitRouter } = useRoute();\n  const routes = useClearanceRoutes();\n  const [scroll, _] = useScroll();\n  const { openModal, closeModal, isModalOpen, replaceModal } = useModal();\n  const [currentRoutes, setCurrentRoutes] = useState<IRoute[]>([]);\n  const [toggled, setToggled] = useState<string | null>(null);\n  const navRef = useRef(null);\n  const navItemsRef = useRef(null);\n  const breakpointWidth = 1100;\n  const isMobile = useNavMobile(navRef, navItemsRef, breakpointWidth);\n\n  const handleMobileClick = (selectedRoute: IRoute) => {\n    if (isModalOpen) {\n      replaceModal(\n        selectedRoute.href && !selectedRoute.items ? (\n          explicitRouter(selectedRoute)\n        ) : selectedRoute.modal ? (\n          modals[selectedRoute.modal]\n        ) : (\n          <MobileNav routes={selectedRoute.items || []} handleClick={handleMobileClick} onBack={handleBackButtonClick} />\n        )\n      );\n    } else {\n      if (selectedRoute.href && !selectedRoute.items) {\n        explicitRouter(selectedRoute);\n        closeModal();\n      } else if (selectedRoute.modal) {\n        openModal({ children: modals[selectedRoute.modal] });\n      } else if (selectedRoute.items) {\n        replaceModal({ children: <MobileNav routes={selectedRoute.items || []} handleClick={handleMobileClick} onBack={handleBackButtonClick} /> });\n      }\n    }\n  };\n\n  const merchantName = String(environment.merchant.name);\n  const isBrandRoute = (route: IRoute) => route.label === keyStringConverter(merchantName);\n\n  const handleBackButtonClick = () => {\n    setCurrentRoutes(routes);\n    handleTrigger();\n  };\n\n  const handleToggle = (label: string) => {\n    setToggled(label);\n  };\n\n  const handleSelect = (route: IRoute | string) => {\n    const _route: IRoute = typeof route === 'string' ? { href: route } : route;\n\n    if (_route?.href) {\n      explicitRouter(_route);\n      setToggled(_route.label || null);\n    } else if (_route?.modal) {\n      if (!isModalOpen) {\n        openModal({ children: modals[_route.modal] });\n      } else {\n        replaceModal({ children: modals[_route.modal] });\n      }\n    }\n  };\n\n  const handleTrigger = () => {\n    const content = {\n      title: (\n        <>\n          <h1 onClick={() => handleMobileClick({ href: '/' })}>\n            <UiIcon icon={`${environment.merchant.name}-logo`} />\n            {environment.merchant.name && keyStringConverter(environment.merchant.name)}\n          </h1>\n        </>\n      ),\n      children: <MobileNav routes={currentRoutes} handleClick={handleMobileClick} />\n    };\n\n    if (isModalOpen) {\n      replaceModal(content);\n    } else {\n      openModal(content);\n    }\n  };\n\n  const displayName = useMemo(() => {\n    return selectedUser?.name ? `${selectedUser.name.split(\" \")[0]} ${selectedUser.name.split(\" \")[1][0]}.` : \"\";\n  }, [selectedUser]);\n\n  const cartTotal = useCartTotal();\n\n  const modals: any = {\n    login: <Authentication view='sign-up' onClose={closeModal} />,\n  };\n\n  const navClass = `navbar__container ${isMobile ? 'navbar__container--hide' : ''} ${merchantName}`;\n\n  useEffect(() => {\n    if (!isModalOpen && toggled) {\n      setToggled('');\n    }\n  }, [setToggled, isModalOpen]);\n\n  useEffect(() => {\n    if (routes) {\n      const newRoutes = routes\n        .filter(r => !(r.href === '/cart' && cartTotal === 0) && r.hide !== true)\n        .map(r => r);\n\n      setCurrentRoutes(newRoutes.reverse());\n    }\n    toggled != null && setToggled(null);\n  }, [routes, setCurrentRoutes, cartTotal]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <nav id=\"nav-bar\" className={navClass}>\n        <div className='navbar' ref={navRef}>\n          <div className={`navbar__trigger${scroll > 90 ? ' navbar__trigger--o' : ''}`}>\n            <UiIcon\n              icon={isModalOpen ? 'fa-xmark' : 'fa-bars'}\n              onClick={handleTrigger}\n            />\n          </div>\n          <div ref={navItemsRef} className={`nav-bar__nav-items`}>\n            {currentRoutes && currentRoutes.map((route, key) => {\n              return <div\n                key={key}\n                className={`nav__nav-item nav__nav-item--${route.label ? (\n                  isBrandRoute(route) ? 'brand' : route.label.toLowerCase()) : (\n                  String(route.href).split('/')[1]\n                )}${toggled === route.label ? ' nav__nav-item__active' : ''}${route.label === 'profile' && cartTotal === 0 && ' no-cart' || ''\n                  }`}\n                onDoubleClick={() => route?.href && handleSelect({ href: route.href })}\n              >\n                {route.href !== '/cart' ? !route?.items ? (\n                  <UiButton\n                    traits={route?.icon ? (\n                      isBrandRoute(route) ? {\n                        beforeIcon: { icon: route.icon }\n                      } : {\n                        afterIcon: { icon: route.icon }\n                      }\n                    ) : undefined}\n                    variant='flat'\n                    onClick={() => handleSelect(route)}\n                  >\n                    {route.label}\n                  </UiButton>\n                ) : (\n                  <UiSelect\n                    openDirection={route?.label === 'profile' && 'left' || undefined}\n                    overlay={{ zIndex: 997 }}\n                    traits={route?.icon ? { afterIcon: { icon: route.icon } } : undefined}\n                    openState={Boolean(toggled && toggled === route.label) ? 'open' : 'closed'}\n                    variant='flat'\n                    value={route.label === 'profile' ? displayName : route.label}\n                    options={route?.items}\n                    onSelect={handleSelect}\n                    onToggle={() => route.label && handleToggle(route.label)}\n                  />\n                ) : (\n                  <UiIcon\n                    badge={cartTotal}\n                    onClick={() => handleSelect(route)}\n                    icon={route?.icon}\n                  />\n                )}\n              </div>\n            })\n            }\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/data/routes.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/hooks/useNavBreak.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/shared/components/Navbar/views/MobileNav/MobileNav.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/social/controller/Social.tsx",["1468"],"// Relative Path: ./Social.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './Social.scss';\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\nimport capitalize from '@webstack/helpers/Capitalize';\nimport UiLoader from '@webstack/components/UiLoader/view/UiLoader';\nimport Instagram from '../views/instagram/controller/Instagram';\nimport { useRouter } from 'next/router';\nimport UiSettingsLayout from '@webstack/layouts/UiSettingsLayout/controller/UiSettingsLayout';\n\n// Remember to create a sibling SCSS file with the same name as this component\n\nconst DefaultSocial = (user?: any) => {\n  return <>\n    <style jsx>{styles}</style>\n    <div className='home__default'>\n      <div className='home__default--title'>\n        {user && user?.name && capitalize(user.name) || ''}, Social Automation.\n      </div>\n    </div>\n  </>\n}\nconst Social: React.FC<any> = () => {\n  const router = useRouter();\n  const platform = router?.query?.platform;\n  const user = useUser();\n\n  const [view, setView] = useState<string | undefined>();\n  const views = {\n    instagram: <Instagram />\n  };\n\n  useEffect(() => { if (platform && !view) setView(String(platform)) }, [platform]);\n  if (user && platform) return (\n    <>\n      <style jsx>{styles}</style>\n     <UiSettingsLayout viewName={view} title=\"social\" subTitle={view} views={views}/>\n    </>\n  ); return <><UiLoader /></>\n};\n\nexport default Social;","/home/web/servers/frontend/Deepturn/app/src/modules/social/views/instagram/controller/Instagram.tsx",["1469"],"// Relative Path: ./Instagram.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './Instagram.scss';\nimport InstagramAuthenticate from '../views/InstagramAuthenticate/InstagramAuthenticate';\nimport UiViewLayout from '@webstack/layouts/UiViewLayout/controller/UiViewLayout';\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\nimport UiLoader from '@webstack/components/UiLoader/view/UiLoader';\nimport { useLoader } from '@webstack/components/Loader/Loader';\n\n\n// Remember to create a sibling SCSS file with the same name as this component\n\nconst Instagram: React.FC<any> = ({ current }: { current?: string }) => {\n    const [view, setView] = useState<string | undefined>('signin');\n    const [credentials, setCredentials] = useState<any | undefined>();\n    const user = useUser();\n    const [loader, setLoader]=useLoader();\n    const views = {\n        signin: <InstagramAuthenticate {...user} />,\n        // authenticating: <UiLoader height=\"1000px\" text={`signing in: ${credentials?.username}`} />\n    };\n    const viewProps = { views, currentView: view };\n\n   \n   useEffect(() => {\n    const usersSocialServices = user?.metadata?.user?.social;\n    if(usersSocialServices?.length){\n      const igData = usersSocialServices.findLast((a:any,k:any)=>usersSocialServices[k])?.authorization_data;\n      if(igData?.username){\n        setCredentials(igData);\n        setLoader({\n            active: true,\n            body:`signing in: ${credentials?.username}`,\n            backgroundColor:\"#20202090\"\n        })\n        // setView(\"authenticating\");\n      }\n    }\n   }, []);\n    return (\n        <>\n            <style jsx>{styles}</style>\n            {/* {JSON.stringify(user?.metadata?.user)} */}\n            <div className='instagram'>\n                <div className='instagram--view'>\n                    <UiViewLayout\n                        {...viewProps}\n                    />\n                </div>\n            </div>\n            <div className='instagram__tandc'>\n                Not Responsible\n            </div>\n        </>\n    );\n};\n\nexport default Instagram;","/home/web/servers/frontend/Deepturn/app/src/modules/social/views/instagram/views/InstagramAuthenticate/InstagramAuthenticate.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/verify/controller/Verify.tsx",["1470"],"import React, { useEffect, useState } from 'react';\nimport styles from './Verify.scss';\nimport { useRouter } from 'next/router';\n// import VerifyEmail from '../views/VerifyEmail/VerifyEmail';\n// import LoginView from '../../authentication/views/Login/views/LoginView/LoginView';\n// import VerifyAccount from '../views/VerifyAccount/VerifyAccount';\n// import VerifyPayment from '../views/VerifyPayment/VerifyPayment';\n// import VerifyPassword from '../views/VerifyPassword/VerifyPassword';\n// import VerifyShare from '../views/VerifyShare/VerifyShare';\nimport IMemberService from '~/src/core/services/MemberService/IMemberService';\nimport { getService } from '@webstack/common';\nimport keyStringConverter from '@webstack/helpers/keyStringConverter';\nimport VerifyEmail from '../views/VerifyEmail/VerifyEmail';\n\ninterface IVerifyErrorView {\n  view?: string;\n  name?: string;\n  message?: string;\n}\nconst DefaultVerifyView = () => {\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='verify__default'>\n        <h1>Verify</h1>\n        <p>Here is where you will verify a token in which you should have received via a specified contact method.</p>\n      </div>\n    </>\n  );\n};\nconst VerifyErrorView = (props: IVerifyErrorView) => {\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='verify__error' id={props.view}>\n        <h3>¡Error!</h3>\n        <div className='verify__error-header'>Verify: <span className=\"c-error\">{props?.name && keyStringConverter(props?.name)}</span>\n        </div>\n        <p className=''>{props?.message}</p>\n        <span className='error--more-info'>If you think you are seeing this message as an error, please contact your admin.</span>\n      </div>\n    </>\n  );\n};\n\nconst Verify = () => {\n  const { pathname, query } = useRouter();\n  const [view, setView] = useState('');\n  const [context, setContext] = useState<any>('');\n  // const [newCustomerEmail, setNewCustomerEmail] = useState<string | undefined>();\n  // const [token, setToken] = useState<string | undefined>();\n  const MemberService = getService<IMemberService>(\"IMemberService\");\n\n  const vid = query?.vid;\n  const token = query?.token;\n\n  const handleVerify = async () => {\n    if (!token) {\n      setContext({ status: 'no_token_present' });\n      return;\n    }\n\n    try {\n      const verifiedResponse = await MemberService.verifyEmail(String(token));\n      // console.error('[ HANDLE VERIFY ]', verifiedResponse)\n      if (verifiedResponse) setContext(verifiedResponse);\n    } catch (e: any) {\n      console.error('[ HANDLE VERIFY ]', e)\n      if(e?.fields)console.log({e:e.fields})\n    }\n  }\n  const views: any = {\n    'no-view-id': VerifyErrorView({ ...context, name: context?.view }),\n    'no-token': VerifyErrorView({ ...context, name: context?.view }),\n    email: <VerifyEmail token={token} \n      onSuccess={console.log}\n    // onSuccess={(v: string) => setNewCustomerEmail(v)}\n     />,\n  }\n  //   'sign-in': <LoginView email={newCustomerEmail} />,\n  //   email: <VerifyEmail token={token} onSuccess={(v: string) => setNewCustomerEmail(v)} />,\n  //   password: <VerifyPassword token={token} onSuccess={(v: string) => setNewCustomerEmail(v)} />,\n  //   account: <VerifyAccount />,\n  //   payment: <VerifyPayment token={token} />,\n  //   share: <VerifyShare />,\n  // };\n  const intLayout =async  () => {\n    const queryTypes = [typeof vid, typeof token];\n    const meetsQuerys = queryTypes.filter(a=>'string').length == 2;\n    if(meetsQuerys)return vid;\n    // if (typeof query.token == 'string') setToken(query.token);\n  };\n  const initView = (view?:string|string[])=>{\n    if(context)return;\n    else if(!vid && !token)return;\n    if(!view && !vid)setContext({\n      view: 'no-view-id',\n      code: 404,\n      error: true,\n      message: 'No View'\n    });\n    else if( !token)setContext({\n      view: 'no-token',\n      code: 404,\n      error: true,\n      message: 'No Token Type Specified'\n    });\n    setContext({view:view});\n  }\n  useEffect(() => {\n    \n    intLayout().then((a)=>initView(a));\n    // console.log('initview:',view)\n\n    // if (newCustomerEmail) {\n    //   setView('sign-in');\n    // } \n  }, [intLayout]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='verify'>\n        {views[context?.view]}\n      </div>\n    </>\n  );\n};\n\nexport default Verify;\n","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyAccount/VerifyAccount.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyEmail/VerifyEmail.tsx",["1471"],"/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyPassword/VerifyPassword.tsx",["1472"],"// Relative Path: ./VerifyEmail.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './VerifyPassword.scss';\nimport { getService } from '@webstack/common';\nimport IMemberService from '~/src/core/services/MemberService/IMemberService';\nimport UiLoader from '@webstack/components/UiLoader/view/UiLoader';\nimport keyStringConverter from '@webstack/helpers/keyStringConverter';\nimport UiForm from '@webstack/components/UiForm/controller/UiForm';\nimport { IFormField } from '@webstack/components/UiForm/models/IFormModel';\nimport Login from '~/src/modules/authentication/views/Login/controller/Login';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport { useModal } from '@webstack/components/modal/contexts/modalContext';\n\n// Remember to create a sibling SCSS file with the same name as this component\ninterface VerifyPassword {\n    token?: string;\n    onSuccess: (e: any) => void;\n}\ninterface IVerifyPasswordState {\n    status?: string;\n    detail?: {\n        detail: string\n    };\n    fields?: IFormField[];\n    message?: string;\n    customer?: any;\n}\nconst ENCRYPTION_KEY = process.env.NEXT_PUBLIC_ENCRYPTION?.trim();\nconst VerifyPassword: React.FC<any> = ({ token, onSuccess }: VerifyPassword) => {\n    const [state, setState] = useState<IVerifyPasswordState>({ status: 'verifying_email' });\n    const MemberService = getService<IMemberService>(\"IMemberService\");\n    const {openModal}=useModal();\n\n    const handleVerify = async () => {\n        if(!ENCRYPTION_KEY)return;\n        if (!token) {\n            setState({ status: 'no_token_present' });\n            return;\n        }\n        const verifiedResponse = await MemberService.decryptJWT({\n            token: token,\n            secret: ENCRYPTION_KEY,\n            algorithm: 'HS256'\n        });\n        if (verifiedResponse) setState(verifiedResponse);\n    }\n\n    const loadingText = (): string => {\n        let context = '';\n        const isString = (e: any) => typeof e == 'string';\n        if (isString(state.status)) context = String(state.status)\n        else if (isString(state.detail)) context = String(state.detail);\n        else if (state.detail?.detail && isString(state.detail?.detail)) context = state.detail.detail;\n        return keyStringConverter(context);\n    }\n\n    const onChange = (e: any) => {\n        const { name, value } = e.target;\n        const stateFields = state?.fields;\n        const iter = (fieldName: string) => { return stateFields?.find((f: IFormField) => f.name === fieldName); }\n        const pw_value = iter('password')?.value;\n        const confirm_pw_value = iter('confirm_password')?.value;\n        // Create a new fields array with updated values and errors\n        const updatedFields = stateFields?.map((field: IFormField) => {\n            if (field.name === name) {\n                const updatedField = { ...field, value };\n                const is_p = name === 'password'\n                const is_c = name === 'confirm_password'\n                if (Boolean(is_c && pw_value !== value && pw_value !== '')\n                    || Boolean(is_p && confirm_pw_value !== value && confirm_pw_value !== '')) {\n                    updatedField.error = 'Not Same as Password';\n                }\n                else if (updatedField.error) {\n\n                    delete updatedField.error;\n                }\n                return updatedField;\n            }\n            return field;\n        });\n        setState({ ...state, fields: updatedFields });\n    };\n    const onSubmit = async () => {\n        const newPassword = state?.fields?.find((f: IFormField) => f.name == 'password')?.value;\n        let customer = state.customer;\n        customer.metadata.user.password = newPassword;\n        // console.log('CUSTOMER', customer)\n        const updateMember = await MemberService.modifyCustomer( customer);\n        if (updateMember){\n            handleLoginModal();\n            onSuccess(updateMember.email);\n        }\n    }\n    const handleLoginModal = () =>{\n       openModal(<Login email={state.customer.email} />)\n    }\n    useEffect(() => {\n        handleVerify()\n    }, [token]);\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='verify-email'>\n                <div className={`verify-email__content${state.status === 'verification_success'?' verify-email__content--success':'' }`}>\n                    <div className='verify-email__content--loader'>\n                        <UiLoader position='relative' text={loadingText()} dots={state?.status != undefined && ['verifying_email'].includes(state?.status)} />\n                    </div>\n                    {JSON.stringify(state.fields)}\n                    {state.status == 'incomplete' && state?.fields &&\n                        <UiForm\n                            title={String(state?.detail) || undefined}\n                            onChange={onChange}\n                            fields={state.fields}\n                            onSubmit={onSubmit}\n                        />\n                    }\n\n                    {state.status === 'verification_success' && state.customer.email && <div className='verify-email__content__sign-in'>\n                    <UiButton onClick={handleLoginModal}>Login</UiButton>\n\n                    </div>}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default VerifyPassword;","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyPayment/VerifyPayment.tsx",["1473","1474"],"import React, { useEffect, useState } from 'react';\nimport styles from './VerifyPayment.scss';\nimport { getService } from '@webstack/common';\nimport IMemberService from '~/src/core/services/MemberService/IMemberService';\nimport IProductService from '~/src/core/services/ProductService/IProductService';\nimport useCart from '~/src/modules/ecommerce/cart/hooks/useCart';\nimport ContactForm from '@shared/components/ContactForm/ContactForm';\nimport CartList from '~/src/modules/ecommerce/cart/views/CartList/CartList';\n\ninterface IVerifyPayment {\n    token?: string;\n}\ninterface ICartItem {\n    \n}\nconst VerifyPayment: React.FC<IVerifyPayment> = ({ token }) => {\n    const mockToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiSm9obiBEb2UiLCJlbWFpbCI6InBvb0BuYW5pLmNvbSIsIml0ZW1zIjpbeyJwcm9kdWN0X2lkIjoicHJvZF9QNWxJMzVyMkVXVEF4aSIsInByaWNlX2lkIjoicHJpY2VfMU9IWm1KSW9kZUtaUkxEVlVlU2xZNk03In1dfQ.Zju6uFgG1L6xI26i8CQGVub-PnCoqP2Q-93qtnD1Yvo\"\n    const [tokenData, setTokenData] = useState<any | undefined>();\n    const { addCartItem, cart } = useCart();\n    const MemberService = getService<IMemberService>('IMemberService');\n    const ProductService = getService<IProductService>('IProductService');\n    const [_cart, setCart]=useState<ICartItem | undefined>();\n    const isTokenComplete = () => {\n        console.log(\"[ ITEM ]\", {\n            tokenData\n        })\n        if (!tokenData || !tokenData.items) {\n            setTokenData({ error: \"Token is invalid\" });\n            return false;\n        }\n\n        // Check each item for valid price_id and product_id\n        const isValid = tokenData.items.every((item: any) =>\n            item.price_id && item.product_id &&\n            String(item.price_id).startsWith('price_') &&\n            String(item.product_id).startsWith('prod_')\n        );\n\n        if (!isValid) {\n            setTokenData({ error: \"Token is invalid\" });\n        }\n\n        return isValid;\n    };\n\n    const transformProductToCartItem = (product: any) => {\n        // Transform logic here\n        const transformedData = {\n            ...product,\n            price: {\n                ...product.price,\n                qty: 1\n            }\n        }\n        // console.log('[transformedData]',transformedData)\n          return transformedData; // Add other necessary properties\n    };\n\n    const getProducts = async () => {\n        try {\n            const productsResponse = await ProductService.getProducts({\n                price_ids: tokenData.items.map((i: any) => i.price_id)\n            });\n            // Loop through productsResponse and add items to cart\n            Object.values(productsResponse.data).forEach((product: any) => {\n                const cartItem = transformProductToCartItem(product);\n\n                // console.log('[cartItem ]',cartItem)\n                addCartItem(cartItem);\n            });\n        } catch (error: any) {\n            console.error('[ getProducts ( error )]', error);\n        }\n    };\n\n    const decryptToken = async () => {\n        if (token) {\n            try {\n                const response = await MemberService.decryptJWT({\n                    token: token,\n                    secret: 'secretKey',\n                    algorithm: 'HS256'\n                });\n                if (response?.decoded) {\n                    // console.log('[ JWT DECODE (SUCCESS) ]', response.decoded);\n                    setTokenData(response.decoded);\n                }\n            } catch (error: any) {\n                setTokenData({ error: error?.detail?.detail });\n                console.error('[ JWT DECODE (ERROR) ]', error?.detail?.detail);\n            }\n        }\n    };\n\n    useEffect(() => {\n        console.log(\"[ USE EFFECT ]\",tokenData, token)\n\n        if (token && tokenData === undefined) {\n            decryptToken();\n        }\n    }, [token]);\n\n    useEffect(() => {\n        cart && setCart(cart);\n        if (tokenData?.items && isTokenComplete()) {\n            getProducts();\n        }\n    }, [setTokenData]);\n\n\n\n    if (!token || tokenData?.error || !Boolean(isTokenComplete())) return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='verify-payment__token-needed'>\n                <div>{String(tokenData?.error) || 'No token is present, assure you clicked the right link.'}</div>\n            </div>\n        </>\n    );\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='verify-payment'>\n                <div className='verify-payment--header'>\n\n                    {/* verify payment */}\n                </div>\n                <div className='verify-payment--content'>\n                    {tokenData.items && <CartList />}\n                    <div className='verify-payment--content__contact-form'>\n                        <ContactForm\n                            user={{\n                                email: tokenData.email,\n                                name: tokenData.name,\n                                phone: tokenData.phone,\n                            }}\n                            onSubmit={(form) => {console.log(\"[ ON SUBMIT ]\", form)}}\n                            submit={{text:'payment info'}}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default VerifyPayment;\n","/home/web/servers/frontend/Deepturn/app/src/modules/verify/views/VerifyShare/VerifyShare.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/404/[loc].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/404/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/_app.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/_document.tsx",["1475","1476","1477"],"import Document, { Html, Head, Main, NextScript } from \"next/document\";\nimport createBuildDate from \"@webstack/helpers/createBuildDate\";\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html>\n        <Head>\n          <link rel=\"stylesheet\" href=\"./styles/global.css\" />\n          <link rel=\"stylesheet\" href=\"./styles/theme.css\" />\n{/* \n          <link rel=\"stylesheet\" href=\"./styles/map.css\" /> */}\n          <link rel=\"stylesheet\" href=\"./styles/mapbox-gl.css\" />\n       \n\n        </Head>\n        <body id=\"app-body\">\n          <Main />\n          <NextScript />\n          <span style={{ display: 'none' }}>\n            {`☠☠☠☠☠☠☠☠☠☠☠☠☠ Property of MindBurner Corporation © ☠☠☠☠☠☠☠☠☠☠☠☠☠`}\n            {` ☠☠☠☠☠☠☠☠☠☠☠☠☠ Unauthorized use is prohibited ☠☠☠☠☠☠☠☠☠☠☠☠☠`}\n            {`BUILD DATE: ( ${createBuildDate()} )`}\n          </span>\n        </body>\n      </Html>\n    );\n  }\n}\n","/home/web/servers/frontend/Deepturn/app/src/pages/about/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/admin/[slug].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/admin/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/api/local-ip.js",[],"/home/web/servers/frontend/Deepturn/app/src/pages/authentication/[function].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/authentication/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/cart/[ref].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/cart/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/checkout/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/configure/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/dashboard/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/home/[vid].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/home/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/index/Index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/index/[cid].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/location/[slug].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/location/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/product/[id].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/product/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/profile/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/services/Index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/services/[cid].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/social/[platform].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/social/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/transaction/[slug].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/transaction/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/verify/[slug].tsx",[],"/home/web/servers/frontend/Deepturn/app/src/pages/verify/index.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/plugins/sass-plugin.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/common.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdapTableFooter/AdapTableFooter.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdapTableHeader/AdapTableHeader.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdapTableAlternateView/AdapTableAlternateView.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableCell/AdaptTableCell.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableCellHover/AdaptTableCellHover.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableLoader/AdaptTableLoader.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/hooks/useTable.ts",["1478","1479"],"import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { isTextOverflowing } from \"@webstack/helpers/isTextOverflowing\";\nimport useWindow from \"@webstack/hooks/useWindow\";\nexport type TableStateProps = \"show\" | \"hide\" | \"error\" | \"loading\" | \"empty\";\n\nconst useTable = ({ data, variant, rowClickable, options, loading }: any) => {\n  const tableRef = useRef<HTMLTableElement>(null);\n  const trsRef = useRef<NodeListOf<HTMLTableRowElement> | null>(null);\n  // const thsRef = useRef<NodeListOf<HTMLTableCellElement> | null>(null);\n  const tdsRef = useRef<NodeListOf<HTMLTableCellElement> | null>(null);\n  const [cellWidth, setCellWidth] = useState<number | null>(null);\n  const [status, setStatus] = useState<TableStateProps>(\"loading\");\n  const width = useWindow().width;\n\n  const adaptStyling = useCallback(() => {\n    const trs = trsRef.current;\n    // const ths = thsRef.current;\n    const tds = tdsRef.current;\n    let newStatus = status;\n    let newCellWidth = cellWidth;\n\n    // DOM read phase\n    // if (trs && ths && tds) {\n    if (trs && tds) {\n      newStatus = data && data.length ? \"show\" : \"empty\";\n      const tableWidth = tableRef.current?.clientWidth || 0; // set default to 0 to avoid undefined\n      let cellsInRow = 0;\n      if (data && data[0]) {\n        cellsInRow = options?.index ? Object.keys(data[0]).length - 1 : Object.keys(data[0]).length;\n      }\n      newCellWidth = (cellsInRow * 15 - tableWidth) / cellsInRow;\n    }\n\n    // DOM write phase\n    // if (trs && ths && tds) {\n    if (trs && tds) {\n      trs.forEach((tr) => {\n        if (rowClickable) {\n          tr.style.cursor = \"pointer\";\n        }\n      });\n\n      // ths.forEach((th) => {\n      //   if (variant?.includes(\"mini\")) {\n      //     th.style.borderBottom = \"none\";\n      //     th.style.borderRight = \"none\";\n      //   }\n      // });\n\n      tds.forEach((td) => {\n        if (isTextOverflowing(td) && tableRef.current) {\n          if (tableRef.current.style.tableLayout !== \"fixed\" && options?.position) {\n            tableRef.current.style.tableLayout = options?.position;\n          }\n          td.classList.add(\"hoverable\");\n        }\n        if (width >= 900) td.style.maxWidth = `${newCellWidth}px`;\n        if (width < 900) td.style.maxWidth = \"\";\n        if (options?.cellHeight) {\n          td.style.height = `${options.cellHeight}px`;\n        }\n        if (variant?.includes(\"mini\")) {\n          td.style.border = \"none\";\n        }\n      });\n    }\n\n    // Only update state if it has changed\n    if (newStatus !== status) {\n      setStatus(loading?\"loading\":newStatus);\n    }\n    if (newCellWidth !== cellWidth) {\n      setCellWidth(newCellWidth);\n    }\n  }, [data, width, status, cellWidth, variant, rowClickable, options]);\n\n  useEffect(() => {\n    const hasData = data && data[0];\n    if (variant === \"mini\" && hasData) {\n      setStatus(loading?\"loading\":\"show\");\n    } else if (hasData && data.length > 0) {\n      adaptStyling();\n      // }else if(data && data.length === 0)setStatus('empty');\n    } else if (!hasData) setStatus(loading?\"loading\":\"empty\");\n  }, [data, tdsRef.current]);\n  useEffect(() => {\n    const queryTrs = tableRef.current?.querySelectorAll(\"tr\");\n    const queryTds = tableRef.current?.querySelectorAll(\"td\");\n    // const queryThs = tableRef.current?.querySelectorAll(\"td\");\n    if (queryTrs) trsRef.current = queryTrs;\n    // if(queryThs)thsRef.current = queryThs;\n    if (queryTds) tdsRef.current = queryTds;\n    window.addEventListener(\"resize\", adaptStyling);\n    window.addEventListener(\"mouseup\", adaptStyling);\n\n    return () => {\n      window.removeEventListener(\"resize\", adaptStyling);\n      window.removeEventListener(\"mouseup\", adaptStyling);\n    };\n  }, [adaptStyling]);\n\n  return { tableRef, status };\n};\n\nexport default useTable;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/components/AdaptTableContent/views/AdapTableContent.tsx",["1480"],"\nimport React, { useEffect, useState, useRef } from \"react\";\nimport contentStyles from \"./AdapTableContent.scss\";\nimport tableStyles from \"./AdapTableElements.scss\";\nimport keyStringConverter from \"@webstack/helpers/keyStringConverter\";\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport AdapTableAlternateView from \"../components/AdapTableAlternateView/AdapTableAlternateView\";\nimport useScroll from \"@webstack/hooks/useScroll\";\nimport UiButton from \"@webstack/components/UiButton/UiButton\";\nimport { TableOptions } from \"@webstack/components/AdapTable/views/AdapTable\";\nimport { IFormControlVariant } from \"@webstack/components/AdapTable/models/IVariant\";\nimport useTable from \"../hooks/useTable\";\nimport AdaptTableCellHover from \"../components/AdaptTableCellHover/AdaptTableCellHover\";\nimport useDocument from \"@webstack/hooks/useDocument\";\nimport Image from \"next/image\";\nimport environment from \"~/src/core/environment\";\n\nexport type TableStateProps = \"show\" | \"hide\" | \"error\" | \"loading\" | \"empty\";\nexport interface TableContentProps extends TableFunctionProps {\n  loading?: boolean;\n  search?: string | null | undefined;\n  data?: any;\n  startIndex?: any;\n  options?: TableOptions;\n  variant?: IFormControlVariant;\n  onRowClick?: (e: any) => void;\n  hideHeader?: boolean;\n}\nexport interface TableFunctionProps {\n  data?: any;\n  search?: string | null | undefined;\n  setSearch?: (e: string) => void;\n  setSort?: (key: string, isAscend: boolean) => void;\n  filterBy?: string[];\n  filters?: any;\n  setFilter?: (e: any) => void;\n}\ntype ItemType = {\n  [key: string]: string;\n};\n\nexport const AdapTableContent = ({\n  loading,\n  search,\n  data,\n  startIndex,\n  variant,\n  onRowClick,\n  hideHeader,\n  options,\n}: TableContentProps) => {\n  const index = options?.index ? options.index + 1 : 0;\n\n  const { tableRef, status } = useTable({\n    data,\n    variant,\n    rowClickable: Boolean(onRowClick),\n    options,\n    loading,\n  });\n\n  const [scroll, scrollToPosition] = useScroll();\n  const viewportHeight = useDocument()?.viewport.height;\n  const tableHeight = Boolean(tableRef?.current && tableRef.current?.clientHeight > viewportHeight && scroll > viewportHeight);\n  const [view, setView] = useState<TableStateProps>(\"loading\");\n\n  // Column resizing state and functions\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeColumnIndex, setResizeColumnIndex] = useState(-1);\n  const [resizeStartX, setResizeStartX] = useState(0);\n  const [columnWidths, setColumnWidths] = useState<any>({});\n  const handleResizeStart = (e: any, columnIndex: number) => {\n    e.preventDefault();\n    setIsResizing(true);\n    setResizeColumnIndex(columnIndex);\n    setResizeStartX(e.clientX);\n  };\n  const rowRefs = useRef<any>([]);\n\n  const handleResize = (e: any) => {\n    if (isResizing && resizeColumnIndex >= 0) {\n      const deltaX = e.clientX - resizeStartX;\n      const newColumnWidths: any = { ...columnWidths };\n      const currentColumnKey = Object.keys(data[0])[resizeColumnIndex];\n      const currentColumnWidth = newColumnWidths[currentColumnKey] || 0;\n      newColumnWidths[currentColumnKey] = Math.max(currentColumnWidth + deltaX, 30); // Adjust the minimum width as needed\n      setColumnWidths(newColumnWidths);\n      setResizeStartX(e.clientX);\n    }\n  };\n\n  const handleResizeEnd = () => {\n    setIsResizing(false);\n  };\n\n  const handleDoubleClick = (columnIndex: number) => {\n    let maxWidth = 0;\n    rowRefs.current.forEach((row: any) => {\n      if (row && row.children[columnIndex]) {\n        // console.log('[width]: ',row.children[columnIndex])\n        maxWidth = Math.max(maxWidth, row.children[columnIndex].offsetWidth);\n      }\n    });\n    const newColumnWidths = { ...columnWidths, [Object.keys(data[0])[columnIndex]]: maxWidth + \"px\" };\n    setColumnWidths(newColumnWidths);\n  };\n  useEffect(() => {\n    status && setView(status);\n  }, [status]);\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleResize);\n    window.addEventListener(\"mouseup\", handleResizeEnd);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleResize);\n      window.removeEventListener(\"mouseup\", handleResizeEnd);\n    };\n  }, [isResizing]);\n\n  const handleRowClick = (e: any, item: any) => {\n    if (![\"svg\", \"path\"].includes(e.target.tagName)) {\n      onRowClick?.(item);\n    }\n  };\n  const internalHiddenKeys = (key: string) => ['image', 'keywords'].includes(key);\n  const handleScrollToTop = () => {\n    scrollToPosition(undefined, 0, 'top');\n  };\n  return (\n    <>\n      <style jsx>{tableStyles}</style>\n      <style jsx>{contentStyles}</style>\n      <div className={`table-container ${variant ? \"table-container-\" + variant : \"\"}`}>\n        <table\n          ref={tableRef}\n          className={\n            `${variant ? \"table-\" + variant : \"\"} ${view === \"show\" && \"table-show\"} ${hideHeader && 'hide-header' || ''}`\n          }\n        >{!options?.hide?.includes('header') &&\n          <thead className={hideHeader && 'hide-header' || ''}>\n            <tr >\n              {index !== 0 && <th className=\"index\">#</th>}\n              {data &&\n                data[0] &&\n                Object.keys(data[0]).map((key, columnIndex) => {\n                  const columnKey = keyStringConverter(key);\n                  return (\n                    key !== \"keywords\" &&\n                    !options?.hideColumns?.includes(key) && (\n                      <th\n                        key={key}\n                        onDoubleClick={() => handleDoubleClick(columnIndex)}\n                        style={{ width: columnWidths[key] || \"auto\" }}\n                        className={`resizeable ${resizeColumnIndex === columnIndex ? \"resizing\" : \"\"\n                          }`}\n                      >\n                        <div\n                          className={`th-content ${variant ? variant : \"\"}`}\n                          onMouseDown={(e) => handleResizeStart(e, columnIndex)}\n                        >\n                          {columnKey}\n                        </div>\n                      </th>\n                    )\n                  );\n                })}\n            </tr>\n          </thead>}\n          <tbody>\n            {data &&\n              data[0] &&\n              data.map((item: ItemType, i_: number) => {\n                if (item) return <tr\n                  className={`${variant ? variant : \"\"}`}\n                  key={startIndex + i_}\n                  onClick={(e) => handleRowClick(e, item)}\n                  ref={(el) => {\n                    rowRefs.current[i_] = el\n                  }}\n                >\n                  {index !== 0 && (\n                    <td data-key=\"#\" className=\"index\">\n                      {index + i_}\n                    </td>\n                  )}\n                  {Object.entries(item).map(\n                    ([key, value], index) =>\n\n                      !options?.hideColumns?.includes(key) && (\n                        <td key={index} data-key={keyStringConverter(key)}>\n                          {options?.hoverable && (\n                            <div className=\"td-hover\"> {AdaptTableCellHover(value)}</div>\n                          )}\n                          {\n                            (<div\n                              className={`${options?.hoverable && \"td-content\" || \"\"\n                                }${key == 'image' && ` td-content--${key}` || ''}`}\n                            >{!['image', 'keywords'].includes(key) ? (\n                              value\n                            ) :\n                              (internalHiddenKeys(key) && (\n                                value?.length ?\n                                  (<Image src={value[0]} fill alt={key}  />) :\n                                  (<UiIcon icon={`${environment.merchant.name}-logo`} />)\n                              )\n                              )}</div>)\n                          }\n                        </td>\n                      )\n                  )}\n                </tr>\n              }\n              )}\n          </tbody>\n        </table>\n        {[\"error\", \"empty\", \"loading\"].includes(view) && (\n          <AdapTableAlternateView view={view} search={search} title={options?.title} variant={variant} />\n        )}\n      </div>\n      {tableHeight && (\n        <div className=\"adapt-table-content__scroll-to-top\">\n          <UiButton\n            variant=\"icon\"\n            onClick={handleScrollToTop}\n          >\n            <UiIcon icon=\"fa-chevron-up\" />\n          </UiButton>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AdapTableContent;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/hooks/useScrollTo.ts",["1481"],"import { useState, useEffect } from 'react';\nimport useWindow from '@webstack/hooks/useWindow';\n\n\ninterface UseScrollToProps {\n    min?: number;\n    max?: number;\n    offsetY?: number;\n  }\n  \n  interface OScrollTo {\n    scrollTo: string | null;\n    setScrollTo: (id: string) => void;\n  }\n  \n  const useScrollTo = ({ offsetY = 200, min, max }: UseScrollToProps = {}): OScrollTo => {\n    const width = useWindow()?.width;\n    const [scrollTo, setInternalScrollTo] = useState<string | null>(null);\n  \n    useEffect(() => {\n      if (scrollTo) {\n        const element = document.getElementById(scrollTo);\n        \n        if (element && !(min && width! < min) && !(max && width! > max)) {\n          const y = element.getBoundingClientRect().top + window.pageYOffset + Number(offsetY * -1);\n          window.scrollTo({ top: y, behavior: 'smooth' });\n        }\n        // else{\n        //     alert(`voided: width: ${width}; min: ${min}; max: ${max}`)\n        // }\n      }\n    }, [scrollTo]);\n  \n    const setScrollTo = (id: string) => {\n      setInternalScrollTo(null);\n      setTimeout(() => {\n        setInternalScrollTo(id);\n      }, 0);\n    };\n  \n    return { scrollTo, setScrollTo };\n  };\n  export default useScrollTo;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/hooks/useSearch.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/models/IVariant.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdapTable/views/AdapTable.tsx",["1482"],"import React, { Dispatch, SetStateAction, useCallback, useEffect, useState } from \"react\";\nimport styles from \"./AdapTable.scss\";\nimport AdapTableContent, { TableFunctionProps } from \"../components/AdaptTableContent/views/AdapTableContent\";\nimport AdapTableHeader from \"../components/AdapTableHeader/AdapTableHeader\";\nimport AdapTableFooter from \"../components/AdapTableFooter/AdapTableFooter\";\nimport { IFormControlVariant } from \"../models/IVariant\";\nimport { dateFormat } from \"@webstack/helpers/userExperienceFormats\";\n\nconst DEFAULT_LIMIT = 10;\n\nexport type TableOptions = {\n  hide?: \"footer\" | \"header\" | [ 'th', 'header'] | [\"header\"] | [\"footer\", \"header\"] | [\"header\", \"footer\"] | \"entries\" | 'th' ;\n  index?: number;\n  cellHeight?: number;\n  tableTitle?: string | React.ReactElement;\n  title?: string;\n  hideColumns?: string[];\n  hoverable?: boolean;\n  placeholder?: string;\n  position?: string;\n};\ninterface TableProps extends TableFunctionProps {\n  total?: number;\n  limit?: number;\n  loading?: boolean;\n  onRowClick?: (e: any) => void;\n  variant?: IFormControlVariant;\n  options?: TableOptions;\n  page?: number;\n  setPage?: (e: any) => void;\n  setLimit?: Dispatch<SetStateAction<number>>;\n  style?: { [key: string]: string }\n}\n\ntype SortProp = [key: string];\n\nconst AdapTable = ({\n  total,\n  data,\n  filters,\n  filterBy,\n  loading,\n  search,\n  variant,\n  limit,\n  options,\n  onRowClick,\n  setSearch,\n  setFilter,\n  setLimit,\n  page,\n  setPage,\n  style\n}: TableProps) => {\n  const [limit_, setLimit_] = useState<number>(DEFAULT_LIMIT);\n  const [visibleData, setVisibleData] = useState<any>([]);\n  const startIndex = page ? (page - 1) * limit_ : 1;\n  const totalPages: number = total !== undefined ? Math.ceil(Number(total) / Number(limit_)) : 0;\n  const endIndex = total ? startIndex + limit_ < total ? startIndex + limit_ : total : data?.length;\n  // const endIndex = data && Math.min(startIndex + limit_, data.length);\n  const hideHeader = options?.hide?.includes(\"header\") || options?.hide === \"header\";\n  function sortByKey(key: any, isAscend: boolean) {\n    // Sort the array by the specified key value in alphabetical order from A to Z\n    function sorter(keyA: any, keyB: any) {\n      function charFinder(key: any) {\n        if (typeof key === \"string\") {\n          // Extract only alphabetical characters and numbers from the string.\n          return key.replace(/[^a-zA-Z0-9]/g, \"\");\n        }\n        const cell = key.props.cell;\n        if (cell === \"member\") key = key.props.data.name;\n        if (cell === \"currency-crypto\") key = key.props.data.amount;\n        if (cell === \"date\") key = dateFormat(key.props.data);\n        return key;\n      }\n      keyA = charFinder(keyA);\n      keyB = charFinder(keyB);\n      try {\n        keyA.toLowerCase();\n        keyB.toLowerCase();\n        if (keyA < keyB) return -1;\n        if (keyA > keyB) return 1;\n      } catch {\n        return 0;\n      }\n    }\n    data.sort((a: SortProp, b: SortProp) => {\n      return isAscend ? sorter(a[key], b[key]) : sorter(b[key], a[key]);\n    });\n    setVisibleData(data.slice(startIndex, endIndex));\n  }\n  let wait = false;\n  const handlePageChange = async (newPage: number) => {\n    if (!setPage) return;\n    const lastNum = Number(String(newPage).charAt(1));\n    if (newPage === 0) wait = true;\n    // console.log({newPage, wait})\n    if (wait && newPage !== 0) setPage(parseInt(newPage.toString().slice(-1)));\n    // setPage(parseInt(newPage.toString().substring(1, 2)));\n    if (!wait && newPage <= totalPages && newPage >= 1) setPage(newPage);\n    // set last page if more than total;\n    if (!wait && totalPages < newPage && lastNum <= totalPages) setPage(lastNum !== 0 ? lastNum : 1);\n  };\n\n  const handleVisible = () => {\n    if (!data) return;\n    const visibleData = Object.entries(data).length > 0 && data?.slice(startIndex, endIndex);\n    setVisibleData(visibleData);\n  };\n  useEffect(() => {\n    handleVisible();\n    if (limit) {\n      setLimit_(limit);\n    }\n  }, [data, limit, options]);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div id='adaptable' style={style} className={`adaptable${variant && variant?.includes(\"mini\") ? \" adaptable-mini\" : \"\"}`}>\n        {!hideHeader && (\n          <AdapTableHeader\n            data={visibleData}\n            filters={filters}\n            filterBy={filterBy}\n            setFilter={setFilter}\n            search={search}\n            setSearch={setSearch}\n            loading={loading}\n            traits={options}\n          />\n        )}\n        <AdapTableContent\n          hideHeader={hideHeader}\n          data={data}\n          setSort={(key, isAscend) => sortByKey(key, isAscend)}\n          loading={loading}\n          onRowClick={onRowClick}\n          search={search}\n          startIndex={startIndex}\n          variant={variant}\n          options={options}\n        />\n        {setPage && page && setLimit && totalPages && (\n          <AdapTableFooter\n            handlePageChange={handlePageChange}\n            page={page}\n            limit={limit_}\n            setPage={setPage}\n            setLimit={setLimit}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            totalPages={totalPages}\n            visibleData={visibleData}\n            options={options}\n            total={total ? total : visibleData.length}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default AdapTable;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptContainer/AdaptContainer.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptGrid/AdaptGrid.tsx",["1483"],"import { useEffect, useRef } from \"react\";\nimport styles from \"./AdaptGrid.scss\";\nimport useWindow from \"@webstack/hooks/useWindow\";\n\ntype FindClosestProps = {\n  id: string;\n  breakpoint: number;\n  value?: number;\n};\ninterface GridProps {\n  xs?: number;\n  sm?: number;\n  md?: number;\n  lg?: number;\n  xl?: number;\n  gap?: number;\n  gapX?: number;\n  gapY?: number;\n  margin?: string;\n  padding?: string;\n  children?: any;\n  variant?: string;\n  scroll?: string;\n  responsive?: boolean;\n  reverse?: boolean;\n  focus?: any;\n  align?: \"center\";\n  backgroundColor?: string;\n}\n\nexport default function AdaptGrid({\n  focus,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  children,\n  variant,\n  gap,\n  gapX,\n  gapY,\n  margin,\n  padding,\n  responsive: dynamic,\n  scroll,\n  reverse,\n  align,\n  backgroundColor,\n}: GridProps) {\n  const {width} = useWindow();\n  const ref = useRef<any>(null);\n\n  function findClosestDictionary(target: number, data: FindClosestProps[]) {\n    const filteredData = data.filter((element) => element.value !== undefined);\n    const closestDict = filteredData.reduce((prev, curr) => {\n      const prevDiff = Math.abs(prev.breakpoint - target);\n      const currDiff = Math.abs(curr.breakpoint - target);\n      return currDiff < prevDiff ? curr : prev;\n    });\n    return closestDict.value;\n  }\n  function handleFocus() {\n    if (!focus) return;\n    const toFocus = ref.current?.querySelectorAll(focus[0]);\n    if (toFocus) toFocus[focus[1]]?.focus();\n  }\n  useEffect(() => {\n    const gridElement = ref.current;\n    if (!gridElement) return;\n\n    if (focus) handleFocus();\n    const style = {\n      gridTemplateColumns: `repeat(${findClosestDictionary(width, [\n        { id: \"xs\", breakpoint: 600, value: xs },\n        { id: \"sm\", breakpoint: 900, value: sm },\n        { id: \"md\", breakpoint: 1100, value: md },\n        { id: \"lg\", breakpoint: 1400, value: lg },\n        { id: \"xl\", breakpoint: 1600, value: xl },\n      ])}, 1fr)`,\n      gridColumnGap: `${gapX ? gapX : gap}px`,\n      gridRowGap: `${gapY ? gapY : gap}px`,\n      paddingTop: `${gap ? gap / 2 : 0}px`,\n      paddingBottom: `${gap ? gap / 2 : 0}px`,\n      margin: `${margin ? margin : \"0px\"}`,\n      padding: `${padding ? padding : \"0px\"}`,\n      direction: `${reverse ? \"rtl\" : \"ltr\"}`,\n    };\n\n    Object.assign(gridElement.style, style);\n  }, [\n    width,\n    gap,\n    gapX,\n    gapY,\n    margin,\n    padding,\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    ref,\n    focus,\n    reverse,\n    backgroundColor,\n  ]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div\n        ref={ref}\n        className={`adaptgrid ${align ? ` ${align}` : \"\"}${scroll ? ` ${scroll}` : \"\"}`}\n      >\n        {!variant && children && children}\n        {variant &&\n          children.length &&\n          children.map((child: any, key: number) => {\n            return (\n              <div\n                key={key}\n                style={\n                  backgroundColor ? { backgroundColor: backgroundColor } : {}\n                }\n                className={`adaptgrid__grid-item${variant?` adaptgrid_${variant}`:''}`}\n              >\n                {child}\n              </div>\n            );\n          })}\n        {!children.length && (\n          <div\n            style={backgroundColor ? { backgroundColor: backgroundColor } : {}}\n            className={`adaptgrid__grid-item${variant?` adaptgrid_${variant}`:''}`}\n          >\n            {children}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptToWindow/controller/AdaptToWindow.tsx",["1484"],"// Relative Path: ./AdaptToWindow.tsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './AdaptToWindow.scss';\nimport { IAdaptToWindow, windowLoc } from '../models/IAdaptToWindow';\nimport AdaptWindowBackground from '../views/AdaptWindowBackground/AdaptWindowBackground';\nimport useWindow from '@webstack/hooks/useWindow';\n\n// Remember to create a sibling SCSS file with the same name as this component\n\n\n\n\nconst AdaptToWindow: React.FC<IAdaptToWindow> = (props) => {\n    const {\n        children,\n        variant,\n        background,\n        sm,\n        md,\n        lg\n    }: IAdaptToWindow = props;\n    const window = useWindow();\n    const width = window.width;\n    const [elClass, setElClass] = useState<string | ''>('');\n    const elRef = useRef<any | null>(null);\n\n    const elClassStylesHandler = (cless: any) => {\n   \n        let variantClass; \n        if (variant)variantClass = `${cless}__${variant}`;\n        function styleDistributor(sZval: any){\n            // alert(`${JSON.stringify(sZval)}`)\n            if (sZval.style && elRef.current) {\n                for (let key in sZval.style) {\n                    if (key in elRef.current.style) {\n                        elRef.current.style[key] = sZval.style[key];\n                    }\n                }\n            }\n            \n        }\n        function classArrayDistributor(sZval: any){\n            let positionClass:string = ` ${cless}__${sZval}`;\n            const strArr = typeof sZval == 'string' ? sZval.split(' '):sZval;\n            function iT(val:any){\n                positionClass = '';\n                val.split(' ').forEach(\n                    (p:windowLoc | undefined)=>positionClass += ` ${cless}__${p}`\n                )\n            }\n            // (ex) SIZE = 'top'\n            if(typeof sZval == 'object')iT(sZval.value);\n\n            // (ex) SIZE = {value:'top', style:{padding: '10px}}\n            else if(sZval && strArr.length > 1)iT(sZval);\n\n            return positionClass;\n        }\n        switch (true) {\n            case width < 900 && !!sm:\n                styleDistributor(sm);\n                cless += classArrayDistributor(sm);\n                break;\n                case width <= 1100 && !!md:\n                styleDistributor(md);\n                cless += classArrayDistributor(md);\n                break;\n                case width > 1260 && !!lg:\n                styleDistributor(lg);\n                cless += classArrayDistributor(lg);\n                break;\n            default:\n                break;\n        }\n        return `${cless}${variantClass?' '+variantClass:''}`;\n    }\n    \n\n    useEffect(() => {\n       setElClass(elClassStylesHandler(\"adapt-to-window__element\"));\n    }, [width, elRef?.current]);\n    return (\n        <>\n            <style jsx>{styles}</style>\n            {/* <div className='dev' style={{padding: '1px'}}>\n          ele: {elClass}\n        </div> */}\n            <AdaptWindowBackground background={background} window={window} />\n            <div className='adapt-to-window'>\n            <div className='adapt-to-window-content'>\n                <div ref={elRef} className={elClass}>\n                    {children}\n                </div>\n            </div>\n            </div>\n        </>\n    );\n};\n\nexport default AdaptToWindow;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptToWindow/models/IAdaptToWindow.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/AdaptToWindow/views/AdaptWindowBackground/AdaptWindowBackground.tsx",["1485","1486"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { IAdaptToWindow, IAdaptWinBg } from \"../../models/IAdaptToWindow\";\nimport styles from './AdaptWindowBackground.scss';\nimport { IWindow } from \"@webstack/hooks/useWindow\";\n\ninterface IAdaptWindowBackground{\n  background: IAdaptWinBg;\n  window: IWindow\n}\nexport default function AdaptWindowBackground({ background, window }: IAdaptWindowBackground) {\n  const [visible, setVisible] = useState<boolean>(false);\n  const [sizeClass, setSizeClass] = useState<string>('');\n  const backgroundRef = useRef<null | any>(null);\n  const {width, height}=window;\n  setTimeout(() => {\n    setVisible(true)\n  }, 1000);\n\n  function classHandler() {\n    let context = 'landscape'; // Default to landscape\n\n    switch (true) {\n        case width <= 900:\n            context = background?.sm || 'portrait'; // Use background.sm if defined, otherwise default to 'portrait'\n            break;\n        case width <= 1100:\n            context = background?.md || 'landscape'; // Use background.md if defined, otherwise default to 'landscape'\n            break;\n        case width <= 1250:\n            context = background?.lg || 'landscape'; // Use background.lg if defined, otherwise default to 'landscape'\n            break;\n        default:\n            // default case if needed\n            break;\n    }\n\n    return ` adapt-to-window__video__${context}`;\n}\n\n\n  useEffect(() => {\n    if(window && background.type)setSizeClass(classHandler())\n  }, [window || background]);\n  if (background?.type == 'video') {\n    return (\n      <>\n        <style jsx>{styles}</style>\n        {/* <div className='dev' style={{top: '60px'}}>\n          background: {JSON.stringify(sizeClass)}\n        </div> */}\n        <video autoPlay loop muted playsInline \n          className={`adapt-to-window__video${visible ? ' adapt-to-window__video__visible' : ''}${sizeClass}`}\n        ref={backgroundRef}>\n          <source src={background.url} type=\"video/mp4\" />\n        </video>\n      </>\n    );\n  }\n  // Handle other background types here...\n\n  return null; // or return 'poop' or whatever you want as a default\n}","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/controller/Calendar.tsx",["1487"],"// Relative Path: ./Calendar.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './Calendar.scss';\nimport AdaptGrid from '@webstack/components/AdaptGrid/AdaptGrid';\nimport CalendarDate from '../views/CalendarDate/CalendarDate';\nimport { ICalendar } from '../models/ICalendar';\nimport { IDate } from '../models/IDate';\nimport { dowArray, monthArray } from '@webstack/helpers/userExperienceFormats';\nimport UiPill from '@webstack/components/UiForm/components/UiPill/UiPill';\nimport UiButton from '@webstack/components/UiButton/UiButton';\n\nconst Calendar: React.FC<ICalendar> = ({\n    events = [\n        { title: 'event test 1', description: 'desc 1', iso: '2023-11-01' },\n        { title: 'event test 2', description: 'desc 2', iso: '2023-11-01T12:00:00Z' }\n    ],\n    year = new Date().getFullYear(),\n    month = new Date().getMonth() + 1,\n    title\n}: ICalendar) => {\n    const [mmYY, setMmYy] = useState({ mm: month, yy: year });\n    const [days, setDays] = useState<IDate[]>([]);\n\n    const generateCalendarDays = (month: number, year: number): IDate[] => {\n        let days: IDate[] = [];\n        let currentDate = new Date(year, month - 1, 1);\n    \n        // Move back to the first day of the week\n        while (currentDate.getDay() !== 0) {\n            currentDate.setDate(currentDate.getDate() - 1);\n        }\n    \n        // Track the first iteration to allow entry into the loop\n        let isFirstIteration = true;\n    \n        do {\n            if (currentDate.getMonth() + 1 !== month) {\n                if (!isFirstIteration) {\n                    break; // Exit the loop when it's no longer the target month\n                }\n            } else {\n                isFirstIteration = false; // Clear the first iteration flag\n            }\n    \n            const isoDate = `${currentDate.getFullYear()}-${String(currentDate.getMonth() + 1).padStart(2, '0')}-${String(currentDate.getDate()).padStart(2, '0')}`;\n            const dayEvents = events.filter(event => event.iso.startsWith(isoDate));\n    \n            days.push({\n                month: currentDate.getMonth() + 1,\n                year: currentDate.getFullYear(),\n                day: currentDate.getDate(),\n                dow: currentDate.getDay(),\n                events: dayEvents\n            });\n    \n            currentDate.setDate(currentDate.getDate() + 1);\n        } while (true); // Use break statements to exit the loop\n    \n        return days;\n    };\n    const handleToday = () =>{\n        const currMonth =new Date().getMonth() + 1\n        const currYear = new Date().getFullYear()\n        setDays(generateCalendarDays(currMonth , currYear));\n        setMmYy({ mm: currMonth, yy: currYear });\n    }\n\n    \n    const handleAmount = (direction: string) => {\n        const dir = direction === 'plus' ? 1 : -1;\n        const newMonth = ((mmYY.mm - 1 + dir + 12) % 12) + 1;\n        const newYear = mmYY.mm === 1 && dir === -1 ? mmYY.yy - 1 : mmYY.mm === 12 && dir === 1 ? mmYY.yy + 1 : mmYY.yy;\n        setMmYy({ mm: newMonth, yy: newYear });\n    };\n    useEffect(() => {\n        setDays(generateCalendarDays(mmYY.mm, mmYY.yy));\n    }, [mmYY]);\n    return (\n        <>\n            <style jsx>{styles}</style>\n                        {/* {JSON.stringify({\n                            mmyy: mmYY\n                        })} */}\n            <div className='calendar'>\n            <div className='calendar__header'>\n                    <div className='calendar__header--title'>\n                        {title}\n                    </div>\n                    <div className='calendar__header--filters'>\n                        <UiButton variant='dark' onClick={handleToday}>Today</UiButton>\n                        <UiPill\n                            variant='center dark'\n                            amount={`${monthArray[mmYY.mm - 1]}, ${mmYY.yy}`}\n                            setAmount={console.log}\n                            traits={{\n                                beforeIcon: {\n                                    icon: \"fas-minus\",\n                                    onClick: () => handleAmount('minus')\n                                },\n                                afterIcon: {\n                                    icon: \"fas-plus\",\n                                    onClick: () => handleAmount('plus')\n                                },\n                            }} />\n                    </div>\n                </div>\n                <div className='calendar__dows'>\n                    <AdaptGrid xs={7}>\n                        {dowArray.map((d, index) => (\n                            <div key={index} className='calendar__dow'>{d}</div>\n                        ))}\n                    </AdaptGrid>\n\n                </div>\n                <AdaptGrid xs={7} responsive>\n                    {days && days.map((date: IDate, key: number) => (\n                        <div key={key} className='calendar__date-container'>\n                            <CalendarDate date={date} />\n                        </div>\n                    ))}\n                </AdaptGrid>\n            </div>\n        </>\n    );\n};\n\nexport default Calendar;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/models/ICalendar.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/models/IDate.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/models/IEvent.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/Calendar/views/CalendarDate/CalendarDate.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ColorPicker/ColorPicker.tsx",["1488","1489"],"// components/FixedColorPicker.js\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styles from './ColorPicker.scss'; // Importing the SCSS file\nimport { debounce } from 'lodash';\nimport UiInput from '../UiForm/components/UiInput/UiInput';\n\ninterface IColorPicker {\n  hex?: string;\n  onChange?: (color: string) => void;\n}\n\nconst ColorPicker = ({ hex, onChange }: IColorPicker) => {\n  const [color, setColor] = useState<string | undefined>();\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = canvas.offsetWidth; // Set the internal canvas width\n      canvas.height = canvas.offsetHeight; // Set the internal canvas height\n      const ctx = canvas.getContext('2d', { willReadFrequently: true })\n      if (ctx) {\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\n        gradient.addColorStop(0, 'red');\n        gradient.addColorStop(0.15, 'yellow');\n        gradient.addColorStop(0.33, 'green');\n        gradient.addColorStop(0.49, 'cyan');\n        gradient.addColorStop(0.67, 'blue');\n        gradient.addColorStop(0.84, 'magenta');\n        gradient.addColorStop(1, 'red');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n    }\n  }, []);\n\n  const debouncedOnChange = useCallback(\n    debounce((pickedColor) => {\n      if (onChange) {\n        onChange(pickedColor);\n      }\n    }, 1000),\n    [onChange]\n  );\n\n  const rgbaToHex = (r: number, g: number, b: number) => {\n    const rgb = (r << 16) | (g << 8) | (b << 0);\n    return '#' + (0x1000000 + rgb).toString(16).slice(1);\n  };\n  const pickColor = (event: any) => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d', { willReadFrequently: true });\n      if (ctx) {\n        const rect = canvas.getBoundingClientRect(); // Get canvas dimensions and position\n        const x = event.clientX - rect.left; // Adjust mouse position to canvas coordinates\n        const y = event.clientY - rect.top;\n        const pixel = ctx.getImageData(x, y, 1, 1).data;\n        const pickedColor = rgbaToHex(pixel[0], pixel[1], pixel[2]);\n        !hex && setColor(pickedColor);\n        debouncedOnChange(pickedColor); // Call the debounced onChange\n      }\n    }\n  };\nconst handleInput = (e: any)=>{\n  const {name, value}=e.target;\n  // console.log('[ handleInput ]',{name,value})\n  setColor(`#${value}`);\n  value.length === 6 && debouncedOnChange(value);\n};\n\nuseEffect(() => {\n  if(!color){\n    setColor(hex?hex:\"#fff\");\n  }\n}, [hex, setColor, handleInput]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='color-picker'>\n        <div className='color-picker__info'>\n        <div\n          className='preview-color'\n          style={{ backgroundColor: color }}\n        />\n        <div className='color-picker__info'>\n          #\n        <UiInput \n          value={color?.replaceAll('#','')}\n          name='hex'\n          onChange={handleInput}\n          size='sm'\n          />\n        </div>\n         </div>\n        <canvas ref={canvasRef} className='color-canvas' onClick={pickColor}></canvas>\n      </div>\n    </>\n  );\n};\n\nexport default ColorPicker;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/CreatePDF/controller/CreatePDF.tsx",["1490"],"import styles from './CreatePDF.scss'; // Corrected the import statement\nimport React, { FC, useState } from 'react';\nimport html2canvas from 'html2canvas';\nimport { jsPDF } from 'jspdf';\nimport { useModal } from '@webstack/components/modal/contexts/modalContext';\nimport UiInput from '@webstack/components/UiForm/components/UiInput/UiInput';\nimport UiSelect from '@webstack/components/UiForm/components/UiSelect/UiSelect';\nimport UiButton from '@webstack/components/UiButton/UiButton';\n\ninterface ICreatePDF {\n    pdfRef: React.RefObject<HTMLDivElement>;\n    preview?: boolean;\n    downloadable?: boolean;\n}\nconst CreatePDF: FC<ICreatePDF> = ({ pdfRef, preview, downloadable }) => {\n    const { openModal } = useModal();\n    const initialOutputSize = { width: 8.27, height: 11.69 };\n    const [previewImage, setPreviewImage] = useState<string | null>(null); // State for preview image\n    const PreviewContent = ({ imgData }: { imgData: string }) => {\n        const [unit, setUnit] = useState<'in' | 'px'>('in'); // Explicitly setting the type for unit\n        const [outputSize, setOutputSize] = useState(initialOutputSize); // Default A4 size in inches\n        const handleOutputSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n            const { value, name } = e.target;\n            console.log({\n                name: name, value: value\n            });\n\n            if (/^\\d*\\.?\\d*$/.test(value)) {\n                let newValue;\n                if (value === '' || value === '.') {\n                    // If the value is empty or just a decimal point, set it to 0\n                    newValue = 0;\n                } else if (value.endsWith('.')) {\n                    // If the value ends with a decimal point, keep it as a string\n                    newValue = value;\n                } else {\n                    // Otherwise, parse the value as a float\n                    newValue = parseFloat(value);\n                }\n\n                setOutputSize({\n                    ...outputSize,\n                    [name]: newValue\n                });\n            }\n        };\n        return (\n            <>\n                <style jsx>{styles}</style>\n                <div className='pdf-preview'>\n                    <img src={imgData} alt=\"PDF Preview\"\n                        className='pdf-preview--image'\n                    />\n                    <div className='pdf-preview__options'>\n                        <div className='pdf-preview__options--actions'>\n                            <div>\n                                {/* <UiSelect\n                                    options={['in', 'px']}\n                                    onSelect={(unit) => setUnit(unit)}\n                                    variant='lite'\n                                    label='units'\n                                    value={unit}\n                                /> */}\n                            </div>\n                            <div>\n                                <UiInput\n                                    label={`Width ( ${unit} ):`}\n                                    value={outputSize.width}\n                                    name='width'\n                                    type=\"tel\"\n                                    onChange={handleOutputSize}\n                          \n                                />\n                            </div>\n                            <div>\n                                <UiInput\n                                    label={`Height ( ${unit} ):`}\n                                    value={outputSize.height}\n                                    type=\"number\"\n                                    name='height'\n                                    onChange={handleOutputSize}\n                                />\n                            </div>\n                        </div>\n                        <UiButton onClick={() => downloadPdfWithSize(imgData)}>Download Resized PDF</UiButton>\n                    </div>\n                </div>\n            </>\n        )\n    };\n\n    const convertToPoints = (size: number, unit: string) => {\n        switch (unit) {\n            case 'in': // inches to points\n                return size * 72;\n            case 'px': // pixels to points (assuming 96 dpi)\n                return size * 0.75;\n            default:\n                return size; // already in points if mm\n        }\n    };\n    let { initHeight, initWidth }: { initHeight: number, initWidth: number } = { initHeight: 100, initWidth: 100 };\n    if (pdfRef.current) {\n        initHeight = pdfRef.current.offsetHeight;\n        initWidth = pdfRef.current.offsetWidth;\n    }\n    const renderPdf = async (download: boolean) => {\n        if (pdfRef.current) {\n            const canvas = await html2canvas(pdfRef.current);\n            const imgData = canvas.toDataURL('image/png');\n            const orientation = initWidth > initHeight ? 'l' : 'p'; // Determine orientation based on width and height\n\n            if (download) {\n                let unit = 'px';\n                const pdf = new jsPDF({\n                    orientation,\n                    unit: unit as 'in' | 'px', // Typecast to ensure correct type\n                    format: [\n                        convertToPoints(initWidth, unit),\n                        convertToPoints(initHeight, unit)\n                    ]\n                });\n                pdf.addImage(imgData, 'PNG', 0, 0, pdf.internal.pageSize.getWidth(), pdf.internal.pageSize.getHeight());\n                pdf.save('download.pdf');\n            } else {\n                setPreviewImage(imgData); // Set the preview image\n                openModal(<PreviewContent imgData={imgData} />);\n            }\n        }\n    };\n\n    const downloadPdfWithSize = (imgData: string) => {\n        const pdf = new jsPDF({\n            orientation: initWidth > initHeight ? 'l' : 'p',\n            unit: 'pt',\n            format: [\n                convertToPoints(initWidth, 'px'),\n                convertToPoints(initHeight, 'px')\n            ]\n        });\n        pdf.addImage(imgData, 'PNG', 0, 0, pdf.internal.pageSize.getWidth(), pdf.internal.pageSize.getHeight());\n        pdf.save('resized-download.pdf');\n    };\n\n    const downloadPdf = () => renderPdf(true);\n    const handlePreview = () => renderPdf(false);\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='create-pdf'>\n                {preview && (\n                    <div className={styles.preview}>\n                        <button onClick={handlePreview}>Preview Content</button>\n                    </div>\n                )}\n                {downloadable && <button onClick={downloadPdf}>Download as PDF</button>}\n            </div>\n\n        </>\n    );\n};\n\nexport default CreatePDF;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Graphs/UiBar/UiBar.tsx",["1491"],"import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./UiBar.scss\";\nimport { UiIcon } from \"../../UiIcon/UiIcon\";\nimport { dateFormat } from \"@webstack/helpers/userExperienceFormats\";\nimport keyStringConverter from \"@webstack/helpers/keyStringConverter\";\nimport { debounce } from \"lodash\";\n\ninterface BarProps {\n  barCount: number;\n  percentage: number;\n  icon?: string;\n  status?: string;\n  timestamp?: string;\n  header?: string | React.ReactElement[] | React.ReactElement | string[];\n  onChange?: (newPercentage: number | string) => void;\n}\n// Define helper functions outside of the UiBar component\n\nconst UiBar = ({\n  barCount,\n  percentage,\n  icon,\n  status,\n  timestamp,\n  header,\n  onChange\n}: BarProps) => {\n  const [localPercentage, setLocalPercentage] = useState(percentage);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const debouncedOnChange = useRef(\n    debounce((newPercentage) => {\n      if (onChange) {\n        onChange(newPercentage);\n      }\n    }, 1000)\n  ).current;\n\n\nconst handleMouseDrag = (e: React.MouseEvent) => {\n  // console.log('[ e ]',e )\n  if (!containerRef.current) return;\n  const bounds = containerRef.current.getBoundingClientRect();\n  const newPercentage = 100 - ((e.clientY - bounds.top) / bounds.height) * 100;\n  const clampedPercentage = Math.max(0, Math.min(newPercentage, 100));\n  setLocalPercentage(clampedPercentage);\n  debouncedOnChange(clampedPercentage.toFixed(0));\n};\n\n\n\n\n  const renderBars = () => {\n    const bars = [];\n    const style = {\n      filledBar: \"bar__bars-bar-filled\",\n      emptyBar: \"bar__bars-bar-empty\",\n      partialBar: \"bar__bars-bar-partial\",\n    };\n  \n    for (let i = 0; i < barCount; i++) {\n      let barClassName;\n      let barStyle: { backgroundColor?: string; height?: string } = {}; // Define barStyle with optional properties\n  \n\n      if (i < Math.floor((localPercentage * barCount) / 100)) {\n        barClassName = style.filledBar;\n      } else if (i === Math.floor((localPercentage * barCount) / 100)) {\n        barStyle.height = `${(localPercentage * barCount) % 100}%`;\n        barClassName = style.partialBar;\n      } else {\n        delete barStyle.height\n        barClassName = style.emptyBar;\n      }\n\n      bars.push(\n        <span key={i}>\n          <style jsx>{styles}</style>\n          <div className=\"bar__bars-content\">\n            <div\n              className={`bar__bars-bar ${barClassName}`}\n              style={barStyle}\n            ></div>\n          </div>\n        </span>\n      );\n    }\n    return bars;\n  };\n\n\n  useEffect(() => { \n    setLocalPercentage(percentage)\n}, []);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className='bar'>\n        {timestamp && <div className=\"bar__timestamp\">{dateFormat(timestamp, { time: true })}</div>}\n        <div className=\"bar__container\">\n          {header && <div className=\"bar__header\">\n            {header}\n            {icon && (\n              <div className=\"bars__icon\">\n                <UiIcon icon={icon} />\n              </div>\n            )}\n            {status && (\n              <div className=\"bars__status\">\n                {[\"STATUS_LOW\", 'low', 'high'].includes(status) && (\n                  <div className=\"bars__status-low\">\n                    <UiIcon color=\"#f90\" icon=\"fa-exclamation-triangle\" />\n                    {keyStringConverter(status)}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>}\n          <div\n            className='bar__bars-container'\n            ref={containerRef}\n            onMouseDown={(e) => handleMouseDrag(e)}\n            onMouseMove={(e) => e.buttons === 1 && handleMouseDrag(e)}\n          >\n            {renderBars()}\n            <div className=\"bar__percentage\">\n              <div>{localPercentage.toString().split('.')[0]}%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nUiBar.propTypes = {\n  barCount: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n  isColor: PropTypes.bool,\n  icon: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default UiBar;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Graphs/UiBarGraph/UiBarGraph.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/Header/components/BreadCrumbs/BreadCrumbs.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/Header/controller/Header.tsx",["1492","1493","1494"],"import React, { useState, useEffect, useContext, createContext, useCallback, useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Navbar from \"@shared/components/Navbar/controller/Navbar\";\nimport styles from \"./Header.scss\";\nimport useWindow from \"@webstack/hooks/useWindow\";\nimport environment from \"~/src/core/environment\";\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport { debounce, head } from \"lodash\";\nimport keyStringConverter from \"@webstack/helpers/keyStringConverter\";\nimport useRoute from \"~/src/core/authentication/hooks/useRoute\";\nimport UiHeader from \"../views/UiHeader/UiHeader\";\n\n\nexport type HeaderProps = {\n  title?: string;\n  right?: React.ReactElement | React.ReactFragment | string;\n  subheader?: React.ReactElement | React.ReactFragment | string;\n  onClick?: (e: any) => void;\n} | null\n\nconst HeaderContext = createContext<[HeaderProps | null, (header: HeaderProps) => any]>([\n  null,\n  () => { },\n]);\nexport const useHeader = () => useContext(HeaderContext);\nconst merchantName = environment.merchant.name;\nexport const HeaderProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { pathname: pathname } = useRouter();\n  const [headerState, setHeaderState] = useState<HeaderProps | null>(null);\n  const pathBase = pathname.replaceAll(\"/\", '');\n  const pathClass = pathBase?.length && pathBase.replaceAll(\"/\", '') || 'index';\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <HeaderContext.Provider value={[headerState, setHeaderState]}>\n        <div id=\"header-container\" className={`header__container ${merchantName}--${pathClass}`}\n        >\n          <Navbar />\n          <Header />\n        </div>\n        {children}\n      </HeaderContext.Provider>\n    </>\n  );\n};\nconst Header: React.FC = () => {\n  const merchantName = environment.merchant.name;\n  const [context, setContext] = useContext(HeaderContext);\n  const [headerState, setHeaderState] = useState<HeaderProps | null>(null);\n  const [route, setRoute] = useState<string | null>(null);\n  const router = useRouter();\n  const { selectedUser, pathname, explicitRouter, routeTitle } = useRoute();\n  const [show, setShow] = useState(false);\n  const width = useWindow()?.width;\n  const debounceShow = useCallback(\n    debounce(() => {\n      setShow(show ? false : true)\n    }, 1000),\n    [setShow]\n  );\n\n  const titleRef = useRef<any>();\n\n  const handleHeaderState = () => {\n    const currentRoute = context !== null ? context : { title: keyStringConverter(`${merchantName}`, { dashed: false }) }\n\n    setHeaderState(routeTitle && { title: routeTitle } || currentRoute);\n    setRoute(router.asPath);\n  }\n  const handleTitleSize = () => {\n    if (!titleRef?.current || !merchantName || width > 1100) return;\n\n    const headerTitleWidth = titleRef.current.offsetWidth;\n    const titleLength = headerState?.title && headerState?.title.length + 2 || false;\n    if (!titleLength) return;\n\n\n    const nfz = headerTitleWidth / titleLength;\n    const ratio = 1 / 5;\n    let fontNum = Number((nfz * Number(1 - ratio)).toFixed(2));\n    if (fontNum > 50) fontNum = 50;\n    const fontSize = `${fontNum}px`;\n    const spacingDim = Number((nfz * ratio).toFixed(2))\n    const spacing = `${spacingDim}px`;\n    const headTitleEl = titleRef?.current;\n    headTitleEl.style.fontSize = fontSize;\n    headTitleEl.style.letterSpacing = spacing;\n    headTitleEl.style.gap = `${spacingDim * .88}px`;\n    const brandLogo: HTMLElement = headTitleEl.children[0];\n    if (brandLogo) brandLogo.style.minWidth = fontSize;\n  };\n\n  useEffect(() => {\n    handleTitleSize();\n  }, [width]);\n\n  useEffect(() => {\n    handleHeaderState();\n    if (router.asPath !== route) {\n      setContext(null);\n      setRoute(router.asPath);\n    }\n  }, []);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <>\n        <div\n          onClick={debounceShow}\n          onMouseLeave={() => setShow(false)}\n          className={`header ${merchantName}`}\n        >\n          <div className={`header-content ${show ? ' header-content__show' : \"\"}`}>\n            <div className=\"header-left\">\n              <UiHeader \n                title={headerState?.title}\n                subTitle={headerState?.title}\n              />\n            </div>\n            {headerState?.right && (\n              <div className=\"header-right\">{headerState?.right}</div>\n            )}\n          </div>\n          {headerState?.subheader && (\n            <div className=\"subheader\">\n              <div className=\"subheader-content\">{headerState?.subheader}</div>\n            </div>\n          )}\n        </div>\n      </>\n      {/* } */}\n    </>\n  );\n};\n\nexport default Header;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Header/views/UiHeader/UiHeader.tsx",["1495"],"import React, { useEffect, useRef, useState } from 'react';\nimport styles from './UiHeader.scss';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\nimport environment from '~/src/core/environment';\nimport useWindow from '@webstack/hooks/useWindow';\n\ninterface IUiHeader {\n    title?: any;\n    subTitle?: string;\n}\nconst mobileNavSize = 50;\nconst UiHeader: React.FC<IUiHeader> = ({ title, subTitle }) => {\n    const hdRef = useRef<HTMLDivElement>(null);\n    const head = hdRef?.current;\n    const [set, setSet] = useState(false);\n    const {width}=useWindow();\n    \n    const initHeader = async () => {\n        // const titleRef:any = head?.querySelector('.header--title');\n        // const subRef:any = head?.querySelector('.header--sub-title');\n        // const isMobile = width < 1100;\n        // const w = {\n        //     window: width,\n        //     head: head?.offsetWidth,\n        //     title: titleRef?.offsetWidth,\n        //     sub: subRef?.offsetWidth\n        // };\n\n        // if (set == true || !head) return;\n        // if(!w?.title || set)return;\n        // setSet(true);\n        // if(isMobile){\n        //     const e = {\n        //         smallTitle: Boolean(w.title > width - mobileNavSize),\n        //         sm: width - mobileNavSize - w.title,\n        //     }\n        // }\n        // console.log({ow:head?.offsetWidth, width, sub, subWidth: sub?.offsetWidth})\n        // head.style.width = `${head.offsetWidth}px`;\n        // head.style.minHeight = `${Number(head.offsetHeight / 2)}px`;\n        // _title?.classList.add(\"header--title-set\");\n        // sub?.classList.add(\"header--sub-title-set\");\n    };\n\n\nuseEffect(() => {\n    !set && initHeader();\n    while (!set) {\n        setTimeout(initHeader, 500);\n        break;\n    }\n}, [hdRef?.current]);\n    return (\n        <>\n\n            <style jsx>{styles}</style>\n            <div className='header' ref={hdRef}>\n                <div className=\"header--title\">\n                    <UiIcon icon={`${environment.merchant.name}-logo`}/>\n                    {title}\n                </div>\n                {subTitle && (\n                    <div className=\"header--sub-title\">\n                        {subTitle}\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default UiHeader;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ImageControl/ImageControl.tsx",["1496"],"import React, { Children, cloneElement, useEffect, useRef, useState, isValidElement } from 'react';\nimport styles from './ImageControl.scss';\nimport UiLoader from '../UiLoader/view/UiLoader';\nimport useClass from '@webstack/hooks/useClass';\nimport { UiIcon } from '../UiIcon/UiIcon';\nimport { useModal } from '../modal/contexts/modalContext';\n\nexport type IImageVariant = 'center' | string;\nexport type IImageMediaType = 'image' | 'video';\n\n\ninterface IImageControl {\n  variant?: IImageVariant;\n  mediaType?: IImageMediaType;\n  children?: React.ReactNode;\n  refreshInterval?: number; // Interval in milliseconds to refresh the image\n  error?: string | React.ReactElement;\n  fixedLoad?: boolean;\n  loadingText?: string\n}\n\nconst ImageControl: React.FC<IImageControl> = ({ children, variant, mediaType = 'image', refreshInterval = 1000, error, loadingText, fixedLoad=false }) => {\n  const childRef = useRef<HTMLDivElement | null>(null); // Change to HTMLDivElement\n  const [loading, setLoading] = useState<boolean>(true);\n  // const clzz: string = useClass('image-control__element', mediaType, variant);\n  const clzz: string = useClass({cls:'image-control__element', type:mediaType, variant:variant});\n  const { openModal, closeModal, isModalOpen } = useModal();\n\n  const handleExpand = () => {\n    !isModalOpen ? openModal(\n      {\n        children: <ImageControl\n          fixedLoad\n          variant={variant}\n          mediaType={mediaType}\n          refreshInterval={refreshInterval}\n        \n          error={error}>\n          {children}\n        </ImageControl>,\n        variant: 'fullscreen',\n        // draggable: true\n      }\n    ): closeModal();\n  };\n\n  useEffect(() => {\n    // if (!loading || error) return;\n    const interval = setInterval(() => {\n      const mediaHeight = childRef?.current?.offsetHeight;\n      const hasSrc = Boolean(mediaHeight && mediaHeight > 30);\n      if (childRef.current && hasSrc) {\n        setLoading(false);\n      } else {\n        if (error && !loading) setLoading(true);\n      }\n    }, refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [refreshInterval, loading, childRef.current]); // Include 'loaded' and 'mediaHeight' in dependencies\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div \n        className={`image-control${loading?' image-control__loading':\"\"}`} \n      > {/* Attach the ref here */}\n        {loading == true && <UiLoader\n          position={!fixedLoad?'relative':undefined}\n          text={ error || loadingText  || undefined}\n          dots={['string','object'].includes(typeof error) ? false : undefined}\n        />}\n        <div id='image-control__element' className={`${clzz}`} ref={childRef}>\n          {Children.map(children, child =>\n            isValidElement(child) ? cloneElement(child) : child // Removed the ref here\n          )}\n        </div>\n        <div className='image-control__controls'>\n          <div className='image-control__controls__control'>\n            <UiIcon icon='fa-play-pause' />\n          </div>\n          <div className='image-control__controls__control'>\n            <UiIcon icon='fa-expand' onClick={handleExpand} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ImageControl;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Loader/Loader.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/Notification/Notification.tsx",["1497"],"import React, { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport styles from \"./Notification.scss\";\nimport { UiIcon } from \"../UiIcon/UiIcon\";\nimport UiMarkdown from \"../UiMarkDown/UiMarkDown\";\nimport { IConfirm } from \"../modal/contexts/modalContext\";\nimport UiButton from \"../UiButton/UiButton\";\n\nconst NO_SCROLL = \"no-scroll\";\n\ninterface INotificationListItem {\n  label?: string;\n  name?: string;\n  message?: any;\n  onClick?: (e: any) => void;\n  href?: string;\n}\ninterface INotificationApiError {\n  message: string;\n  status: number;\n  detail: string;\n  error:boolean;\n}\n\nexport type INotification = {\n  list?: INotificationListItem[];\n  apiError?: INotificationApiError;\n  confirm?: IConfirm;\n  active: boolean;\n  persistence?: number;\n  dismissable?: boolean;\n  transparent?: boolean;\n  onClick?: (e: any) => void;\n  zIndex?: number | string;\n  noScroll?: boolean;\n  children?: any;\n};\n\nconst INotificationContext = createContext<[INotification, (Notification: INotification) => any]>([{ active: false }, () => { }]);\n\nexport const useNotification = () => useContext(INotificationContext);\n\ntype INotificationProvider = {\n  children: React.ReactNode;\n};\n\nexport const NotificationProvider: React.FC<INotificationProvider> = ({ children }) => {\n  const notificationState = useState<INotification>({ active: false });\n\n  return (\n    <INotificationContext.Provider value={notificationState}>\n      <Notification />\n      {children}\n    </INotificationContext.Provider>\n  );\n};\n\nconst Notification: React.FC = () => {\n  const [context, setContext] = useContext<[INotification, (Notification: INotification) => any]>(INotificationContext);\n  const [notification, setNotification] = useState<INotification | null>(null);\n  const [show, setShow] = useState<boolean>(true);\n\n  const handleClose = () => {\n    setShow(false);\n    if (context?.persistence) {\n      setTimeout(() => {\n        setContext({ ...context, active: false });\n      }, 20000); // 20 seconds\n    } else {\n      setTimeout(() => {\n        setContext({ active: false });\n      }, 2000); // Default 2 seconds\n    }\n  };\n\n  const handleBodyScroll = useCallback(() => {\n    const body = document.getElementById(\"app-body\");\n    if (context?.noScroll) {\n      if (body?.classList.contains(NO_SCROLL)) {\n        body?.classList.remove(NO_SCROLL);\n      } else {\n        body?.classList.add(NO_SCROLL);\n      }\n    }\n  }, [context]);\n\n  const list = notification?.list;\n  const apiErrors:INotificationApiError | undefined = notification?.apiError;\n  const handleNotification = () => {\n    if (context?.dismissable === undefined) context.dismissable = true;\n    if (context?.persistence) {\n      setTimeout(() => {\n        handleClose();\n      }, context.persistence);\n    }\n    setNotification(context);\n  };\nconst handleClick = (e:any)=>{\n  context.onClick && context.onClick(e)\n}\n  useEffect(() => {\n    handleNotification();\n    handleBodyScroll();\n  }, [handleNotification]);\n\n  if (notification?.active) {\n    return (\n      <>\n        <style jsx>{styles}</style>\n        {/* <div className='dev'>\n                  {JSON.stringify(apiErrors)}\n                </div> */}\n        <div\n          id=\"app-notification\"\n          style={notification?.zIndex ? { zIndex: `${notification?.zIndex}` } : {}}\n          onClick={context?.onClick}\n          className={`notification ${!show ? ' notification-hide' : \"\"}`}\n        >\n          <div className='notification__content'>\n            {notification.dismissable &&\n              <div className='notification__close'><UiIcon icon='fa-xmark' onClick={handleClose} /></div>\n            }\n            {notification?.confirm?.title || notification?.children}\n            {notification?.confirm?.statements &&  notification.confirm.statements.length &&\n              <div className={`notification__confirm ${notification.confirm.statements.length > 2 ?\" notification__confirm-col\":\"\"}`}>\n                {notification.confirm.statements.map((statement: any, key: number) => {\n                  return (\n                    <div key={key} className='notification__confirm-btn'>\n                      <UiButton onClick={statement?.onClick} variant={statement.text === 'yes' ? 'primary' : statement?.variant}>\n                        {statement.text || statement.label} \n                      </UiButton>\n                    </div>\n                  );\n                })}\n              </div>\n            }\n            \n            { apiErrors && <div className='notification__api-errors'>\n                <div className='error-message'>\n                  {apiErrors?.message}\n                </div>\n                <div className='error-detail'>\n                  {apiErrors?.detail && Object.entries(apiErrors.detail).map(([d,i])=><div key={d}>{i}</div>)}\n                </div>\n              </div>\n            }\n            {\n              list && <div className='notification__list'>\n                {Object.entries(list).map(([field, value]: any, index: number) => {\n                  return <a key={index} className={`notification__list-item`} href={value.href} onClick={value.onClick}>\n                    <div  className='notification__list-item__label' >\n                      <UiMarkdown text={value.label || value?.name} />{JSON.stringify(value?.onClick)}\n                    </div>\n                    <div>\n                      <UiMarkdown text={value.message} />\n                    </div>\n                  </a>\n                })}\n              </div>\n\n            }\n          </div>\n        </div>\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport default Notification;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/Overlay/Overlay.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/PlaceGrid/PlaceGrid.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ServiceContainer/ServiceContainer.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSClouds/controller/TJSClouds.tsx",["1498"],"import { useRef, useMemo, useEffect } from 'react';\nimport { Canvas, useFrame, extend } from '@react-three/fiber';\nimport { Shape, ShapeGeometry, MeshBasicMaterial, Mesh, Vector2 } from 'three';\nimport { OrbitControls } from '@react-three/drei';\nimport useWindow from '@webstack/hooks/useWindow';\n\nextend({ OrbitControls });\n\nconst Cloud = ({ size = 500, speed = 5, amount = 10, width }: any) => {\n  const cloudRef = useRef<Mesh[]>([]);\n\n  const clouds = useMemo(() => {\n    const temp = [];\n    for (let i = 0; i < amount; i++) {\n      const shape = new Shape();\n      const x = Math.random() * width - width / 2;\n      const y = Math.random() * size - size / 2;\n\n      // Generate cloud-like shapes\n      const points = [];\n      const numPoints = 12; // More points for a smoother cloud\n      const baseRadius = 100 + Math.random() * 100; // Base radius for variability\n      for (let j = 0; j < numPoints; j++) {\n        const angle = (j / numPoints) * Math.PI * 2;\n        const radiusVariance = 0.6 + Math.random() * 0.7; // Radius variance for fluffy look\n        points.push(new Vector2(\n          x + Math.cos(angle) * baseRadius * radiusVariance,\n          y + Math.sin(angle) * baseRadius * radiusVariance * 0.6 // Elliptical shape\n        ));\n      }\n      shape.splineThru(points);\n      shape.closePath();\n\n      const geometry = new ShapeGeometry(shape);\n      const material = new MeshBasicMaterial({ color: '#ffffff', transparent: true, opacity: 0.6 + Math.random() * 0.4 });\n      const mesh = new Mesh(geometry, material);\n      mesh.position.set(\n        x,\n        y,\n        0 ,// Set z position to 0 for 2D\n      );\n      const scale = 0.5 + Math.random(); // Randomize scale for more natural look\n      mesh.scale.setScalar(scale);\n\n      temp.push(mesh);\n    }\n    return temp;\n  }, [size, width]);\n\n  useFrame(() => {\n    clouds.forEach((cloud, i) => {\n      if (cloudRef.current[i]) {\n        cloudRef.current[i].position.x += speed / cloud.scale.x;\n        // Respawn clouds when they move out of view\n        if (cloudRef.current[i].position.x - cloudRef.current[i].scale.x * 100 > width / 2) {\n          cloudRef.current[i].position.x = -width / 2 - cloudRef.current[i].scale.x * 100;\n        }\n      }\n    });\n  });\n\n  return (\n    <>\n      {/* {clouds.map((cloud, i) => (\n        <primitive key={i} \n        object={cloud}\n         ref={(el: any) => cloudRef.current[i] = el} />\n      ))} */}\n    </>\n  );\n};\n\nconst TJSClouds = () => {\n  const { width, height } = useWindow();\n\n  return (\n    <Canvas orthographic camera={{ position: [0, 0, 50], zoom: 1, left: width / -2, right: width / 2, top: height / 2, bottom: height / -2, near: 0.1, far: 100 }}>\n      <ambientLight \n      // intensity={1}\n      />\n      <Cloud {...{ width }} />\n    </Canvas>\n  );\n};\n\nexport default TJSClouds;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSClouds/models/ICube.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSClouds/useDrag.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/controller/TJSCube.tsx",["1499"],"import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { OrbitControls } from '@react-three/drei';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport IconHelper from \"@webstack/helpers/IconHelper\";\nimport styles from \"./TJSCube.scss\";\n\ninterface ITJSCubeBevel {\n  curveSegments?: number;\n  bevelEnabled?: boolean;\n  bevelThickness?: number;\n  bevelSize?: number;\n  bevelOffset?: number;\n  bevelSegments?: number;\n}\n\ninterface ITJSCubeIcon {\n  icon: string;\n  color?: string;\n  backgroundColor?: string;\n  size: { x: number, y: number, z: number };\n  animate?: { rotate: { y?: number, x?: number, z?: number, speed: number } };\n  metalness?: number;\n  roughness?: number;\n  texture?: string;\n  bevel?: ITJSCubeBevel;\n  opacity?: number;\n}\n\ninterface ITJSCubeContent {\n  icon: ITJSCubeIcon;\n}\n\nconst TJSCubeContent = ({ icon }: ITJSCubeContent) => {\n  const meshRef = useRef<any>(null);\n  const particlesRef = useRef<any>(null);\n  const { scene, camera } = useThree();\n  const { size } = icon;\n\n  const applyTexture = (material: any, texturePath: string) => {\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(texturePath, (texture) => {\n      texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n      texture.repeat.set(0.01, 0.01);\n      material.map = texture;\n      material.needsUpdate = true;\n    });\n  };\n\n  useEffect(() => {\n    const lightExists = scene.children.some(child => child instanceof THREE.AmbientLight);\n    if (!lightExists) {\n      const ambientLight = new THREE.AmbientLight(0xFFFFFF);\n      scene.add(ambientLight);\n      return () => {\n        scene.remove(ambientLight);\n      };\n    }\n  }, [scene, icon]);\n\n  useEffect(() => {\n    const materialOptions: THREE.MeshStandardMaterialParameters = {\n      color: icon.color || '#ffffff',\n      metalness: icon.metalness || 0,\n      roughness: icon.roughness || 0,\n      opacity: icon.opacity || 1,\n      transparent: Boolean(icon?.opacity && icon.opacity < 1) || false,\n    };\n\n    if (!meshRef.current) {\n      const iconObj = IconHelper.getIcon(icon.icon);\n      if (!iconObj || !iconObj.html) return;\n\n      const svgMarkup = iconObj.html.replace(/currentColor/g, icon.color || '#000000');\n      const loader = new SVGLoader();\n      const svgResult = loader.parse(svgMarkup);\n      const paths = svgResult.paths.flatMap(path => path.toShapes(true));\n\n      const geometry = new THREE.ExtrudeGeometry(paths, {\n        depth: icon.size.z,\n        bevelEnabled: icon.bevel?.bevelEnabled || false,\n        bevelThickness: icon.bevel?.bevelThickness || 0,\n        bevelSize: icon.bevel?.bevelSize || 0,\n        bevelOffset: icon.bevel?.bevelOffset || 0,\n        bevelSegments: icon.bevel?.bevelSegments || 0,\n      });\n\n      geometry.computeBoundingBox();\n      const center = new THREE.Vector3();\n      geometry.boundingBox?.getCenter(center);\n      geometry.translate(-center.x, -center.y, -center.z);\n\n      const material = new THREE.MeshStandardMaterial(materialOptions);\n      if (icon.texture) applyTexture(material, icon.texture);\n\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.rotation.x = -Math.PI;\n      scene.add(mesh);\n      meshRef.current = mesh;\n      const maxDimension = Math.max(size?.x || 0, size?.y || 0, size?.z || 0);\n      camera.position.set(0, 0, maxDimension);\n\n      // Add particles\n      const particleMaterial = new THREE.PointsMaterial({\n        color: 0x888888,\n        size: 0.1,\n      });\n\n      const particleGeometry = new THREE.BufferGeometry();\n      const particles = [];\n      for (let i = 0; i < 1000; i++) {\n        particles.push(\n          (Math.random() - 0.5) * 2 * size.x,\n          (Math.random() - 0.5) * 2 * size.y,\n          (Math.random() - 0.5) * 2 * size.z\n        );\n      }\n      particleGeometry.setAttribute('position', new THREE.Float32BufferAttribute(particles, 3));\n      const particleSystem = new THREE.Points(particleGeometry, particleMaterial);\n      scene.add(particleSystem);\n      particlesRef.current = particleSystem;\n    } else {\n      const material = meshRef.current.material as THREE.MeshStandardMaterial;\n      if (icon.texture) applyTexture(material, icon.texture);\n      Object.assign(material, materialOptions);\n    }\n  }, [icon, scene]);\n\n  useFrame(() => {\n    if (icon.animate?.rotate && meshRef.current) {\n      const { x = 0, y = 0, z = 0, speed } = icon.animate.rotate;\n      meshRef.current.rotation.x += x * speed;\n      meshRef.current.rotation.y += y * speed;\n      meshRef.current.rotation.z += z * speed;\n    }\n\n    // Animate particles\n    if (particlesRef.current) {\n      particlesRef.current.rotation.y += 0.001;\n    }\n  });\n\n  return null;\n};\n\nexport const TJSCube: any = (props: ITJSCubeContent) => {\n  const instanceRef: any = useRef();\n  const bg = String(props?.icon?.backgroundColor) || undefined;\n  useEffect(() => {\n    if (instanceRef?.current && bg) instanceRef.current.style.backgroundColor = bg;\n  }, [instanceRef, bg]);\n  return <>\n    <style jsx>{styles}</style>\n    <div className='tjscube' ref={instanceRef}>\n      <Canvas className='tjscube--content'>\n        <OrbitControls />\n        <TJSCubeContent icon={props.icon} />\n      </Canvas>\n    </div>\n  </>;\n}\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/controller/test.tsx",["1500","1501"],"import React, { useRef, useEffect } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { OrbitControls } from '@react-three/drei';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader';\nimport IconHelper from \"@webstack/helpers/IconHelper\";\n\ninterface ITJSCubeBevel {\n  curveSegments?: number;\n  bevelEnabled?: boolean;\n  bevelThickness?: number;\n  bevelSize?: number;\n  bevelOffset?: number;\n  bevelSegments?: number;\n}\n\ninterface ITJSCubeIcon {\n  icon: string;\n  color?: string;\n  size: { x: number, y: number, z: number };\n  animate?: { rotate: { y?: number, x?: number, z?: number, speed: number } };\n  metalness?: number;\n  roughness?: number;\n  texture?: string;\n  bevel?: ITJSCubeBevel;\n  opacity?: number;\n}\n\ninterface ITJSCubeContent {\n  icon: ITJSCubeIcon;\n}\nconst TJSCubeContent = ({ icon }: ITJSCubeContent) => {\n  const meshRef = useRef<any>(null);\n  const { scene, camera } = useThree();\n    const {size }=icon;\n  const applyTexture = (material:any, texturePath:string) => {\n    const textureLoader = new THREE.TextureLoader();\n    textureLoader.load(texturePath, (texture) => {\n      texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n      texture.repeat.set(0.01, 0.01);\n      material.map = texture;\n      material.needsUpdate = true;\n    });\n  };\n\n  useEffect(() => {\n    const materialOptions: THREE.MeshStandardMaterialParameters = {\n      color: icon.color || '#ffffff',\n      metalness: icon.metalness || 0,\n      roughness: icon.roughness || 0,\n      opacity: icon.opacity || 1,\n      transparent: Boolean(icon?.opacity && icon.opacity < 1) || false,\n    };\n\n    if (!meshRef.current) {\n      const iconObj = IconHelper.getIcon(icon.icon);\n      if (!iconObj || !iconObj.html) return;\n\n      const svgMarkup = iconObj.html.replace(/currentColor/g, icon.color || '#000000');\n      const loader = new SVGLoader();\n      const svgResult = loader.parse(svgMarkup);\n      const paths = svgResult.paths.flatMap(path => path.toShapes(true));\n\n      const geometry = new THREE.ExtrudeGeometry(paths, {\n        depth: icon.size.z,\n        bevelEnabled: icon.bevel?.bevelEnabled || false,\n        bevelThickness: icon.bevel?.bevelThickness || 0,\n        bevelSize: icon.bevel?.bevelSize || 0,\n        bevelOffset: icon.bevel?.bevelOffset || 0,\n        bevelSegments: icon.bevel?.bevelSegments || 0,\n      });\n\n      geometry.computeBoundingBox();\n      const center = new THREE.Vector3();\n      geometry.boundingBox?.getCenter(center);\n      geometry.translate(-center.x, -center.y, -center.z);\n\n      const material = new THREE.MeshStandardMaterial(materialOptions);\n      if (icon.texture) applyTexture(material, icon.texture);\n\n      const mesh = new THREE.Mesh(geometry, material);\n      mesh.rotation.x = -Math.PI;\n      scene.add(mesh);\n      meshRef.current = mesh;\n    } else {\n      const material = meshRef.current.material as THREE.MeshStandardMaterial;\n      Object.assign(material, materialOptions);\n      if (icon.texture) applyTexture(material, icon.texture);\n    }\n  }, [icon.metalness, scene, icon.color]);\n  useEffect(() => {\n    // Add lighting\n    const ambientLight = new THREE.AmbientLight(0xe0e0e0, 1); // soft white light\n    scene.add(ambientLight);\n\n    // const directionalLight = new THREE.DirectionalLight(0xffffff, .5);\n    // directionalLight.position.set(maxDimension, maxDimension, maxDimension);\n    // scene.add(directionalLight);\n    const maxDimension = Math.max(size?.x || 0, size?.y || 0, size?.z || 0);\n\n    camera.position.set(0,0,maxDimension);\n    return () => {\n      // Cleanup\n      scene.remove(ambientLight);\n      // scene.remove(directionalLight);\n    };\n  }, [scene, icon]);\n  useFrame(() => {\n    if (icon.animate?.rotate && meshRef.current) {\n      const { x = 0, y = 0, z = 0, speed } = icon.animate.rotate;\n      meshRef.current.rotation.x += x * speed;\n      meshRef.current.rotation.y += y * speed;\n      meshRef.current.rotation.z += z * speed;\n    }\n  });\n\n  return null;\n};\n\nexport const TJSCube = (props: ITJSCubeContent) => (\n  <div style={{ width: '100%', height: '100%' }}>\n    <Canvas>\n      <OrbitControls />\n      <TJSCubeContent icon={props.icon} />\n    </Canvas>\n  </div>\n);\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/models/ICube.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/TJSCube/useDrag.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/controller/UiMap.tsx",["1502","1503"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport mapboxgl, { Map as MapboxMap } from \"mapbox-gl\";\nimport styles from \"./UiMap.scss\";\nimport token from \"../data/token\";\nimport useWindow from \"@webstack/hooks/useWindow\";\nimport { useLoader } from \"@webstack/components/Loader/Loader\";\nimport { IVessel, IVesselActions } from \"../models/IMapVessel\";\nimport useProfile from \"~/src/core/authentication/hooks/useProfile\";\nimport { useRouter } from \"next/router\";\nimport { flyToView } from \"../functions/mapControls\";\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport MapVesselDetails, { IVesselType } from \"../views/MapVessel/views/MapVesselDetails/MapVesselDetails\";\nimport MapSearch from \"../views/MapSearch/MapSearch\";\nimport useMapSearch from \"../hooks/useMapSearch\";\nimport initializeMap from \"../functions/initializeMap\";\nimport handleResize from \"../functions/handleResize\";\n\nmapboxgl.accessToken = token;\n\ninterface MapOptions {\n    center?: [number, number];\n    zoom?: number;\n    rpm?: number;\n    loadingDelay?: number;\n}\n\ninterface ICustomMapOptions extends mapboxgl.MapboxOptions {\n    rpm?: number;\n}\n\ninterface UiMapProps {\n    hideHover?: boolean;\n    options?: MapOptions;\n    vessels?: IVessel[];\n    onVesselClick?: (vessel: IVessel) => void;\n    require?: \"user\" | \"location\" | \"both\";\n}\n\nconst UiMap: React.FC<UiMapProps> = ({ options, vessels, onVesselClick, require, hideHover }) => {\n    const mapContainerRef = useRef<HTMLDivElement>(null);\n    const mapRef = useRef<MapboxMap | null>(null);\n    const initialStyleID = \"clw76pwt4003o01q120rh1mkk\";\n\n    const [loader, setLoader] = useLoader();\n    const profile = useProfile({ require: require });\n    const router = useRouter();\n    const [selectedVessel, setSelectedVessel] = useState<IVessel | null | false>(null);\n    const [styleId, setStyleId] = useState(initialStyleID);\n    const [mapPath, setMapPath] = useState<string | undefined>();\n    const { width: windowWidth, height: windowHeight } = useWindow();\n\n    const calculateZoomLevel = (width: number) => {\n        const minZoom = 0.6;\n        const maxZoom = 2;\n        const minWidth = 900;\n        const maxWidth = 1400;\n        if (width < minWidth) return minZoom;\n        if (width > maxWidth) return maxZoom;\n        return ((width - minWidth) / (maxWidth - minWidth)) * (maxZoom - minZoom) + minZoom;\n    };\n\n    const MAP_CONFIG = {\n        globeZoom: calculateZoomLevel(windowWidth),\n        mapZoom: 7,\n        isGlobe: 5\n    };\n\n    const mapOptions: ICustomMapOptions = {\n        container: mapContainerRef.current!,\n        center: options?.center || profile?.lngLat || [0, 10],\n        zoom: options?.zoom || MAP_CONFIG.globeZoom,\n        style: `mapbox://styles/landolabrum/${styleId}`,\n        projection: { name: \"globe\" } as any,\n        antialias: true,\n        rpm: options?.rpm\n    };\n\n    const [zoomLevel, setZoomLevel] = useState(mapOptions.zoom || 8);\n    const [centerCoordinates, setCenterCoordinates] = useState(mapOptions.center || [0, 0]);\n    const { searched, handleSearch } = useMapSearch({ lngLat: centerCoordinates, setLngLat: setCenterCoordinates, map: mapRef.current });\n\n    const userVesselConfig: IVessel = {\n        name: profile?.name ? `${profile.name}` : 'You are here',\n        className: \"user\",\n        images: [\n            \"https://a0.muscache.com/im/pictures/hosting/Hosting-U3RheVN1cHBseUxpc3Rpbmc6MTEyNDAxNzM1NTk1NjgzMjg4Mw%3D%3D/original/e1573119-8f57-4e97-9d4f-9ed4be4de8b4.jpeg?im_w=1200\",\n            \"https://a0.muscache.com/im/pictures/hosting/Hosting-U3RheVN1cHBseUxpc3Rpbmc6MTEyNDAxNzM1NTk1NjgzMjg4Mw%3D%3D/original/a6f2bd88-0ef0-455b-8f00-433eee5b13c2.jpeg?im_w=720\"\n        ],\n        lngLat: profile?.lngLat || [0, 0]\n    };\n\n    const handleVesselClick = (vessel: IVessel) => {\n        const map = mapRef?.current;\n        if (!map || !vessel) return;\n        setSelectedVessel(vessel);\n        onVesselClick && onVesselClick(vessel);\n        flyToView(map, { lngLat: vessel.lngLat, zoom: 15 });\n    };\n\n    const handleVesselEnter = (vessel: IVessel) => {};\n\n    const handleVesselLeave = () => {};\n\n    const vesselActions: IVesselActions = {\n        onClick: handleVesselClick,\n        onMouseEnter: handleVesselEnter,\n        onMouseLeave: handleVesselLeave,\n    };\n\n    const stopLoader = () => {\n        if (!options?.loadingDelay) {\n            setLoader({ active: false });\n        } else if (options.loadingDelay) {\n            setTimeout(() => {\n                setLoader({ active: false });\n            }, options.loadingDelay);\n        }\n    };\n\n    const { width } = useWindow();\n\n    useEffect(() => {\n        const isMapInParent = mapPath && mapPath === router.asPath;\n        const isReadyToLoadMap = (\n            Boolean(profile?.lngLat || !require) && mapContainerRef.current && isMapInParent\n        );\n\n        if (!mapPath) setMapPath(router.asPath);\n        if (!mapRef.current && isMapInParent && !loader.active) {\n            setLoader({\n                active: true,\n                body: \" \",\n                iconSize: width <= 1100 ? \"70vw\" : \"350px\"\n            });\n        } else if (!isMapInParent && loader.active) {\n            stopLoader();\n        }\n        if (isReadyToLoadMap) {\n            const map = new mapboxgl.Map({\n                ...mapOptions,\n            });\n            initializeMap({\n                map,\n                profile,\n                vessels,\n                userVesselConfig,\n                vesselActions,\n                mapOptions,\n                stopLoader,\n                setLngLat: setCenterCoordinates,\n                setZoom: setZoomLevel,\n                hideHover: hideHover\n            });\n            mapRef.current = map;\n            return () => {\n                map.remove();\n                mapRef.current = null;\n            };\n        }\n    }, [mapContainerRef.current, setStyleId, require, profile, windowWidth, router.asPath, styleId]);\n\n    useEffect(() => {\n        if (mapContainerRef?.current) {\n            mapContainerRef.current.style.height = '100vh';\n            mapContainerRef.current.style.width = '100%';\n            if (mapRef.current) mapRef.current.resize();\n        }\n    }, [selectedVessel == false]);\n\n    const handleResizeCallback = useCallback(\n        (newSize: any) => handleResize(\n            mapContainerRef,\n            mapRef,\n            windowWidth,\n            windowHeight,\n            selectedVessel !== null,\n            newSize,\n            setSelectedVessel,\n            selectedVessel,\n            zoomLevel\n        ), [windowWidth, windowHeight, selectedVessel, zoomLevel]);\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='map-container'>\n                <div className='map-content'>\n                    <div className=\"map\" ref={mapContainerRef} onDoubleClick={() => selectedVessel && setSelectedVessel(false)} />\n                    {selectedVessel && (\n                        <MapVesselDetails\n                            vessel={selectedVessel}\n                            setVessel={setSelectedVessel as (vessel: IVesselType) => void}\n                            onResize={handleResizeCallback}\n                        />\n                    )}\n                    {!loader.active && (\n                        <div className='map-tools'>\n                            <div className='map-tools--layer'>\n                                <UiIcon icon=\"fa-xmark\" onClick={() => setStyleId(\"clwvqyuxe01bl01q11d6m8nh7\")} />\n                            </div>\n                            <MapSearch searched={searched} handleSearch={handleSearch} />\n                            <UiIcon onClick={() => { flyToView(mapRef?.current, { zoom: zoomLevel > 6 ? 10 : 6 }) }} icon={zoomLevel > 6 ? 'fa-globe' : 'fa-map'} />\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UiMap;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/data/mapVessels.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/data/token.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/handleResize.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/initializeMap.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/mapControls.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/mapRotate.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/functions/mapVessels.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/hooks/useMapSearch.ts",["1504"],"import { useEffect, useState } from \"react\"\nimport { flyToView } from \"../functions/mapControls\";\n\nconst useMapSearch = ({lngLat, setLngLat, map}:any)=>{\n    const [searched, setSearched] = useState<number[] | undefined>();\n\n    const handleSearch = (e: any) => {\n        const value = e.target.value;\n        const searchedLngLat: number[] = [value?.lng, value?.lat];\n        if (searchedLngLat) {\n            setSearched(value);\n            setLngLat(searchedLngLat);\n            flyToView(map, { lngLat: searchedLngLat, zoom: 14 });\n        }\n    };\n\n    useEffect(()=>{},[handleSearch])\n    return {searched, handleSearch}\n};\nexport default useMapSearch;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/models/IMapVessel.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/models/IUiMap.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/views/MapSearch/MapSearch.tsx",["1505"],"// Relative Path: ./MapSearch.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './MapSearch.scss';\nimport UiInput from '@webstack/components/UiForm/components/UiInput/UiInput';\n\n// Remember to create a sibling SCSS file with the same name as this component\n\nconst MapSearch: React.FC<any> = ({handleSearch, searched}:any) => {\n    const [searchPlaceholder, setSearchPlaceholder] = useState<string>(\"where to?\");\n    let placeholderInterval: NodeJS.Timeout;\n    const cityNames = [\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\"];\n\n    useEffect(() => {\n        const handleSearchIntervals = () => {\n            let index = 0;\n            placeholderInterval = setInterval(() => {\n                setSearchPlaceholder(cityNames[index]);\n                index = (index + 1) % cityNames.length;\n            }, 5000);\n\n            return () => {\n                clearInterval(placeholderInterval);\n            };\n        };\n\n        setTimeout(() => {\n            handleSearchIntervals();\n        }, 5000);\n    }, []);\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='map-search'>\n                <UiInput  name='address' size='xl' variant='transparent round' placeholder={searchPlaceholder} value={searched} onChange={handleSearch} />\n            </div>\n        </>\n    );\n};\n\nexport default MapSearch;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/views/MapVessel/views/MapVesselDetails/MapVesselDetails.tsx",["1506","1507","1508","1509"],"import styles from './MapVesselDetails.scss';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport useWindow from '@webstack/hooks/useWindow';\nimport { IVessel } from '@webstack/components/ThreeComponents/UiMap/models/IMapVessel';\nimport UiHeader from '@webstack/components/Header/views/UiHeader/UiHeader';\n\nexport type IVesselType = IVessel | false | undefined;\n\ninterface IVesselDetailsProps {\n  vessel?: IVessel;\n  setVessel: (vessel: IVesselType) => void;\n  onResize?: (newSize: any) => void;\n}\n\nconst CLOSE_BRK = 200;\n\nconst MapVesselDetails: React.FC<IVesselDetailsProps> = ({ vessel, setVessel, onResize }) => {\n  const { width, height } = useWindow();\n  const isDesktop = width >= 1100;\n  const [isDragging, setIsDragging] = useState(false);\n  const [swipedDown, setSwipedDown] = useState(false);\n  const initialDimensions = isDesktop ? { width: 400, height: height } : { width: width - 30, height: 300 };\n  const [dimensions, setDimensions] = useState<any>(initialDimensions);\n  const vesselDetailsRef = useRef<any>(null);\n  const vesselDetails = vesselDetailsRef?.current;\n\n  const startY = useRef<number | null>(null);\n  const currentY = useRef<number | null>(null);\n  const translateY = useRef<number>(0);\n\n  const closeVessel = useCallback(() => {\n    if (vesselDetailsRef?.current?.style) vesselDetails.style = undefined;\n    setDimensions(initialDimensions);\n    setVessel(false);\n  }, [setVessel, initialDimensions]);\n\n  useEffect(() => {\n    if (swipedDown) closeVessel();\n  }, [swipedDown, closeVessel]);\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    startY.current = e.touches[0].clientY;\n    setIsDragging(true);\n  };\n\n  const handleTouchMove = (e: React.TouchEvent) => {\n    if (startY.current !== null) {\n      currentY.current = e.touches[0].clientY;\n      const isMobileDetailsArea = (Number(translateY.current) * -1) + (vesselDetails.offsetHeight / 2) < height / 2;\n      translateY.current = currentY.current - startY.current;\n      if (vesselDetails && isMobileDetailsArea) {\n        vesselDetails.style.transform = `translateY(${translateY.current}px)`;\n      }\n    }\n  };\n\n  const handleTouchEnd = () => {\n    setIsDragging(false);\n    if (startY.current !== null && currentY.current !== null) {\n      const deltaY = currentY.current - startY.current;\n      if (deltaY > 50) {\n        setSwipedDown(true);\n      } else {\n        if (vesselDetails) {\n          vesselDetails.style.transform = 'translateY(0)';\n        }\n      }\n    }\n    startY.current = null;\n    currentY.current = null;\n    translateY.current = 0;\n  };\n\n  const handleMouseDown = () => setIsDragging(true);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n    const newSize = isDesktop ? dimensions.width : dimensions.height;\n    if (vesselDetails) {\n      onResize?.(newSize);\n      if (isDesktop) {\n        vesselDetails.style.width = `${newSize}px`;\n      } else {\n        vesselDetails.style.height = `${newSize}px`;\n      }\n      if (newSize < CLOSE_BRK) closeVessel();\n    }\n  }, [dimensions, isDesktop, onResize, closeVessel]);\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (vesselDetails.style) vesselDetails.style = undefined;\n    if (isDragging && vesselDetails) {\n      if (isDesktop) {\n        const newWidth = (width - 30) - e.clientX;\n        if (newWidth > width / 2) return;\n        setDimensions((prev: any) => ({ ...prev, width: newWidth }));\n        vesselDetails.style.width = `${newWidth}px`;\n        onResize?.(newWidth);\n        if (newWidth < CLOSE_BRK) closeVessel();\n        return;\n      } else {\n        const newHeight = height - e.clientY;\n        if (newHeight > height / 2) return;\n        setDimensions((prev: any) => ({ ...prev, height: newHeight }));\n        vesselDetails.style.height = `${newHeight}px`;\n        onResize?.(newHeight);\n        if (newHeight < CLOSE_BRK) closeVessel();\n      }\n    }\n  }, [isDragging, isDesktop, width, height, onResize, closeVessel]);\n\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n\n  if (!vessel) return null;\n\n  const headerContext = (vesselName: string) => {\n    const [title, subTitle] = vesselName.split(' ', 2);\n    return {\n      title,\n      subTitle\n    };\n  };\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div\n        className={`vessel-details--container ${vessel ? 'show' : 'hide'}`}\n        onTouchStart={handleTouchStart}\n        onTouchMove={handleTouchMove}\n        onTouchEnd={handleTouchEnd}\n        style={\n          isDesktop ? \n          { width: dimensions.width, height: height }:\n          { width: width == 0 ? 400 : undefined, height: dimensions.height }}\n      >\n        <div className=\"vessel-details\" ref={vesselDetailsRef}>\n          <div\n            className={`vessel-details-sliver ${isDragging ? 'dragging' : ''}`}\n            onMouseDown={handleMouseDown}\n          />\n          {vessel?.name && (\n            <div className={`vessel-details-content ${isDragging ? 'dragging' : ''}`}>\n              <div className='vessel-details-content--header'>\n                <UiHeader {...headerContext(vessel.name)} />\n              </div>\n              <div className='vessel-details-content--body'>\n                <div className='vessel-details--images'>\n                  {vessel.images && vessel.images.map((src: string, index: number) => (\n                    <img src={src} key={index} alt='main' className={`vessel-details--image${index === 0 ? '-main' : ''}`} />\n                  ))}\n                </div>\n                {vessel.description && <div className='vessel-details-content--body-description'>{vessel.description}</div>}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MapVesselDetails;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiMap/views/MapVessel/views/MapVesselMarker/MapVesselMarker.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiTerrain/controller/UiTerrain.tsx",["1510"],"import { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport IUITerrain from '../models/IuITerrain';\n\nconst UiTerrain = ({\n  flyTo,\n  disableBelowTerrain = false,\n  cameraPosition = [2.6520046469315024, 0.47112981322851, -1.080838656327484],\n  lights = {\n    ambient: { color: 0xffffff, intensity: 1 },\n    directional: { color: 0xffffff, intensity: 1, position: [1, 1, 1] },\n  },\n  colors = { background: 0x1c9df6 },\n  terrainOverlay,\n  animation = [\n    [10.3376482188985, 0.36890421841098925, -6.194272964246333],\n    [9.976378566994422, 0.15518100680619346, -6.545817610608842],\n    [8.942772475117179, 0.21527020849510325, -5.760161412007365],\n    [9.285526562984671, 0.1480317810843473, -2.3367612794322135],\n    [4.217541312568285, 0.6271942882641335, -3.8873331110420266],\n  ],\n}:IUITerrain) => {\n  const router = useRouter();\n  const mountRef = useRef<HTMLDivElement | null>(null);\n  const [currentAnimationIndex, setCurrentAnimationIndex] = useState(0);\n  const [cameraPos, setCameraPos] = useState(cameraPosition);\n  const [isAnimating, setIsAnimating] = useState(true);\n\n  const stopAnimation = useCallback(() => {\n    setIsAnimating(false);\n  }, []);\n\n  useEffect(() => {\n    if (router.pathname !== '/') return;\n\n    const mount = mountRef.current;\n    if (!mount) return;\n\n    // Scene setup\n    const scene:any = new THREE.Scene();\n    if (colors.background) {\n      scene.background = new THREE.Color(colors.background);\n    }\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(cameraPos[0], cameraPos[1], cameraPos[2]);\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mount.appendChild(renderer.domElement);\n\n    // Controls setup\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.25;\n    controls.enableZoom = true;\n\n    if (disableBelowTerrain) {\n      controls.maxPolarAngle = Math.PI / 2;\n    }\n\n    // Lighting\n    if (lights.ambient) {\n      const ambientLight = new THREE.AmbientLight(lights.ambient.color, lights.ambient.intensity);\n      scene.add(ambientLight);\n    }\n\n    if (lights.directional) {\n      const directionalLight = new THREE.DirectionalLight(lights.directional.color, lights.directional.intensity);\n      const [x = 0, y = 0, z = 0] = lights.directional.position || [];\n      directionalLight.position.set(x, y, z).normalize();\n      scene.add(directionalLight);\n    }\n\n    // Load GLB model\n    const loader = new GLTFLoader();\n    loader.load(\n      '/assets/threeModels/red_sand_desert_canyon4K.glb',\n      (gltf) => {\n        const model = gltf.scene;\n        scene.add(model);\n\n        if (terrainOverlay?.img) {\n          const textureLoader = new THREE.TextureLoader();\n          textureLoader.load(terrainOverlay.img, (texture) => {\n            if (terrainOverlay.repeat) {\n              texture.wrapS = THREE.RepeatWrapping;\n              texture.wrapT = THREE.RepeatWrapping;\n            }\n            model.traverse((child) => {\n              if (child instanceof THREE.Mesh) {\n                const material = child.material as THREE.MeshStandardMaterial;\n                material.map = texture;\n                if (terrainOverlay.opacity !== undefined) {\n                  material.opacity = terrainOverlay.opacity;\n                  material.transparent = true;\n                }\n                material.needsUpdate = true;\n              }\n            });\n          });\n        }\n      },\n      undefined,\n      (error) => {\n        console.error('An error happened during GLTF loading:', error);\n      }\n    );\n\n    const onWindowResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      try {\n        renderer.render(scene, camera);\n      } catch (error) {\n        console.error(\"Renderer error:\", error);\n        return;\n      }\n\n      if (isAnimating && animation.length > 0) {\n        const targetPosition = animation[currentAnimationIndex];\n        const delta = 0.001;\n        const targetVector = new THREE.Vector3(targetPosition[0], targetPosition[1], targetPosition[2]);\n        camera.position.lerp(targetVector, delta);\n        if (camera.position.distanceTo(targetVector) < 0.1) {\n          setCurrentAnimationIndex((prevIndex) => (prevIndex + 1) % animation.length);\n        }\n        setCameraPos([camera.position.x, camera.position.y, camera.position.z]);\n      }\n    };\n\n    const disposeScene = () => {\n      scene.traverse((object: any) => {\n        if (!object.isMesh) return;\n\n        if (object.geometry) object.geometry.dispose();\n\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            object.material.forEach((material: any) => material.dispose());\n          } else {\n            object.material.dispose();\n          }\n        }\n      });\n    };\n\n    window.addEventListener('resize', onWindowResize, false);\n    window.addEventListener('mousedown', stopAnimation, false);\n    window.addEventListener('touchstart', stopAnimation, false);\n\n    if (flyTo) {\n      camera.position.set(flyTo[0], flyTo[1], flyTo[2]);\n      controls.target.set(flyTo[0], flyTo[1], flyTo[2]);\n    }\n\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      window.removeEventListener('mousedown', stopAnimation);\n      window.removeEventListener('touchstart', stopAnimation);\n      if (renderer) {\n        renderer.dispose();\n        if (mount.contains(renderer.domElement)) {\n          mount.removeChild(renderer.domElement);\n        }\n        if (renderer.forceContextLoss) {\n          renderer.forceContextLoss(); // Optional: Force WebGL context loss to release resources\n        }\n      }\n      disposeScene();\n    };\n  }, [\n    // animation,\n    // cameraPos,\n    colors.background,\n    currentAnimationIndex,\n    // disableBelowTerrain,\n    // flyTo,\n    // isAnimating,\n    // lights.ambient,\n    // lights.directional,\n    // stopAnimation,\n    // terrainOverlay?.img,\n    // terrainOverlay?.opacity,\n    // terrainOverlay?.repeat,\n    router.pathname,\n  ]);\n\n  if (router.pathname !== '/') return <>Sorry, not Index</>;\n\n  return (\n    <>\n      <div className=\"dev\" style={{ fontSize: '10px' }}>\n        Dev\n        {cameraPos.map((pos:[number, number, number], index:number) => (\n          <div key={index}>{`pos[${index}]: ${pos}`}</div>\n        ))}\n      </div>\n      <div ref={mountRef} style={{ width: '100vw', height: '100vh' }} />\n    </>\n  );\n};\n\nexport default UiTerrain;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/ThreeComponents/UiTerrain/models/IuITerrain.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/Title/Title.tsx",["1511"],"// Title.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport environment from '~/src/core/environment';\nimport capitalize, { capitalizeAll } from '@webstack/helpers/Capitalize';\nimport useDarkMode from \"@webstack/hooks/useDarkMode\";\n\nconst Title: React.FC = () => {\n  const router = useRouter();\n  const merchantName = capitalizeAll(String(environment.merchant.name).replaceAll('-',' '));\n  const path = capitalize(router.pathname.replace('/',''));\n\n  const [title, setTitle] = useState<string>(merchantName);\n  \n  useEffect(() => {\n    setTitle(`${merchantName}${path?.length? ' | ' + path: ''}`);\n  }, [path]);\n  \n  return (\n    <Head>\n      <title>{title}</title>\n      {useDarkMode() ? (\n        // servers/Deepturn/public/merchant/nirv1/favicon-lite.ico\n        <link rel=\"shortcut icon\" href={`/merchant/${environment.merchant.mid}/favicon-lite.ico`} />\n      ) : <link rel=\"shortcut icon\" href={`/merchant/${environment.merchant.mid}/favicon-dark.ico`} />}\n    </Head>\n  );\n};\n\nexport default Title;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiButton/UiButton.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiCheckbox/UiCheckBox.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiCollapse/UiCollapse.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiDev/UiDev.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiDiv/UiDiv.tsx",["1512","1513"],"import React, { FC, useEffect, useRef, useState } from \"react\";\nimport styles from \"./UiDiv.scss\";\nimport useWindow from \"@webstack/hooks/useWindow\";\n\n// Define specific types for props\ninterface IDiv {\n  children?: React.ReactElement | string | Iterable<React.ReactNode>;\n  variant?: string;\n  style?: React.CSSProperties;\n  jsx?: string;\n  id?: string;\n  minWidth?: number;\n  maxWidth?: number;\n}\n\nconst UiDiv: FC<IDiv> = ({ children, variant, style, jsx = ``, id, minWidth, maxWidth }) => {\n  const jsxRef = useRef<any>(null);\n  const width = useWindow()?.width;\n  const [show, setShow]=useState<boolean>(true);\n  // Function to generate class name from variant\n  const variantToClass = (variant?: string): string => {\n    const baseClass = 'div ui-div';\n    if (!variant) return baseClass;\n\n    return `${baseClass} ${variant.split(' ')\n      .map(vari => `${baseClass}__${vari}`)\n      .join(' ')}`\n  }\n  const className = variantToClass(variant);\n\n  const minMet = minWidth && minWidth < width;\n  const maxMet = maxWidth && maxWidth > width;\n  useEffect(() => {\n    if(show && minMet){\n      setShow(false);\n    }else if(show && maxMet){\n      setShow(false);\n    }else if(!show){\n      setShow(true);\n    }\n  },[minMet, maxMet]);\n  useEffect(() => {\n    if(jsxRef?.current && id && jsxRef.current.previousSibling?.tagName != 'STYLE') {\n      const styleJsx = document.createElement('style');\n      styleJsx.setAttribute('jsx', '');\n      styleJsx.innerText = `#${id}`+ jsx;\n      // Insert the new sibling before the target element\n      jsxRef.current.parentNode.insertBefore(styleJsx, jsxRef.current);\n    }\n  }, [jsxRef.current]);\n  if(Boolean(!id && jsx)) return <h1 style={{color:\"var(--orange\"}}>JSX FOR UIDIV NEEDS ID PROP</h1>;\n  if(show && Boolean(id && jsx) || show && Boolean(!jsx && !id))return (\n    <>\n      <style jsx>{styles}</style>\n        <div\n          ref={jsxRef}\n          style={style}\n          className={className}\n          id={id}\n        >\n          {children}\n        </div>\n    </>\n  );\n  return <></>;\n};\n\nexport default UiDiv;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/FormControl/FormControl.tsx",["1514"],"import type { NextComponentType, NextPageContext } from \"next\";\nimport styles from \"./styles/FormControl.scss\";\nimport elStyles from \"./styles/FormControlElement.scss\";\nimport iStyles from \"./styles/FormControlIcon.scss\";\nimport { IFormControlVariant } from \"@webstack/components/AdapTable/models/IVariant\";\nimport React, { Children, cloneElement, useEffect, useRef, ReactElement as RE } from \"react\";\nimport { IOverlay, useOverlay } from \"@webstack/components/Overlay/Overlay\";\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport UiMarkdown from \"@webstack/components/UiMarkDown/UiMarkDown\";\n\ntype FormIconProps = {\n  icon: string;\n  onClick?: (e: any) => void;\n  color?: string;\n} | string;\n\nexport type ITraits = {\n  beforeIcon?: FormIconProps;\n  afterIcon?: FormIconProps;\n  width?: number | string;\n  height?: number | string;\n  badge?: any;\n  responsive?: boolean;\n  backgroundColor?: string;\n  outline?: string;\n  disabled?: boolean;\n  [key: string]: any;\n} | undefined;\n\nexport type IFormControlSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n\nexport interface IFormControl {\n  label?: string | RE | { text?: string; color?: string };\n  variant?: IFormControlVariant;\n  size?: IFormControlSize;\n  overlay?: boolean;\n  setOverlay?: (e: IOverlay) => void;\n  children?: string | RE | React.ReactFragment | number;\n  traits?: ITraits;\n  error?: string | null;\n  type?: string;\n}\n\n// Type guard to check if an object is a ReactElement\nfunction isReactElement(element: any): element is RE {\n  return React.isValidElement(element);\n}\n\n// FormControl component for rendering form controls with label, icons, and overlay support\nconst FormControl: NextComponentType<NextPageContext, {}, IFormControl> = ({\n  label,\n  children,\n  variant,\n  overlay,\n  size,\n  setOverlay,\n  traits,\n  type,\n  error\n}: IFormControl) => {\n  const ref = useRef<any>(null);\n  const [overlayState, setOverlayState] = useOverlay();\n\n  useEffect(() => {\n    if (!traits) return;\n    let formElement = ref.current.querySelector('.form-control__element');\n    if (formElement) {\n      Object.keys(traits).forEach(key => {\n        if (key in formElement.style) {\n          formElement.style[key] = traits[key];\n        }\n      });\n      // Apply outline, disabled and responsive styles\n      if (typeof traits.outline === \"string\") formElement.style.outline = traits.outline;\n\n      if (traits.disabled) formElement.classList.add('form-control__element--disabled');\n      if (traits.responsive) formElement.classList.add('form-control__element-responsive');\n      if (error) formElement.classList.add('form-control__element--error');\n      // Special handling for USABLE elements\n      const hasDataElem: any = Object.values(formElement.children)\n        .find((e: any) => e.getAttribute('data-element') && ['button', 'input', 'select', 'textarea'].includes(e.getAttribute('data-element')));\n      if (hasDataElem) {\n        const dataElemStr = hasDataElem.getAttribute('data-element');\n        ref.current.classList.add(`form-control--${dataElemStr}`);\n        formElement.classList.add(\n          `form-control__element--${dataElemStr}${type && type === 'color' ? '-color' : ''}`\n        );\n      }\n    }\n\n    // Overlay management\n    if (overlay) {\n      setOverlayState({\n        active: true,\n        transparent: true,\n        onClick: setOverlay || (() => setOverlayState({ active: false })),\n      });\n    } else if (overlayState.active) {\n      setOverlayState({ active: false });\n    }\n  }, [overlay, traits, variant, setOverlay, setOverlayState]);\n\n  const propClasses = (className: string) => {\n    const createIconClass = () => {\n      if (traits?.beforeIcon) return ` ${className}--before-icon`;\n      else if (traits?.afterIcon) return ` ${className}--after-icon`;\n      return '';\n    };\n\n    const createVariantClass = () => {\n      return variant && variant.split(' ').reduce((acc, val) => {\n        const variantClass = `${className}--${val}`;\n        return acc.includes(variantClass) ? acc : `${acc} ${variantClass}`.trim();\n      }, className);\n    };\n\n    const createSizeClass = () => {\n      if (!size) return '';\n      return ` ${className}-${size}`;\n    };\n\n    const isColor = () => {\n      if (type !== 'color') return '';\n      return className === 'form-control' ? ' form-control--maxY' : ` ${className}-input-color`;\n    };\n\n    if (!variant) return `${className}${createIconClass()}${createSizeClass()}${isColor()}`;\n    return `${createVariantClass()}${createIconClass()}${createSizeClass()}${isColor()}`;\n  };\n  const formControlLabel: any = typeof label === 'string' ? (\n    <UiMarkdown text={label} />\n  ) : !isReactElement(label) && label?.text ? (\n    <UiMarkdown text={label.text} color={label.color} />\n  ) : label;\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <style jsx>{elStyles}</style>\n      <div \n        className={propClasses('form-control')}\n        ref={ref}\n      >\n        {label && (\n          <div className='form-control__header'>\n            <label>{formControlLabel}</label>\n          </div>\n        )}\n        <div className={propClasses('form-control__element')}>\n          {renderIcon(traits?.beforeIcon, 'before', size, variant)}\n          {Children.map(children, (child: any) => cloneElement(child))}\n          {traits?.badge && (\n            <div className=\"form-control__badge\">\n              <div className=\"form-control__badge-content\">{traits.badge}</div>\n            </div>\n          )}\n          {renderIcon(traits?.afterIcon, 'after', size, variant)}\n          {error && (\n            <div className='form-control__invalid'>\n              <UiMarkdown text={error} />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nfunction renderIcon(iconProps: FormIconProps | undefined, position: string, size?: string, variant?: IFormControlVariant) {\n  if (!iconProps) return null;\n  const icon = typeof iconProps === 'string' ? iconProps : iconProps.icon;\n  const onClick = typeof iconProps === 'object' ? iconProps.onClick : undefined;\n  const color = typeof iconProps === 'object' ? iconProps.color : undefined;\n  const iCls = 'form-control-icon';\n  \n  return (\n    <>\n      <style jsx>{iStyles}</style>\n      <div className={`${iCls} ${iCls}__${position} ${variant ? ` ${iCls}-${variant}` : \"\"} ${size ? ` ${iCls}-${size}` : \"\"}`}>\n        <UiIcon\n          icon={icon}\n          onClick={onClick}\n          color={color}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default FormControl;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/UiInput.tsx",["1515"],"import styles from \"./UiInput.scss\";\nimport type { NextComponentType, NextPageContext } from \"next\";\nimport FormControl from \"../FormControl/FormControl\";\nimport { useCallback, useState } from \"react\";\nimport { IInput } from \"@webstack/models/input\";\nimport { validateInput } from \"./helpers/validateInput\";\nimport maskInput from \"./helpers/maskInput\";\nimport AutocompleteAddressInput from \"./views/AddressInput\";\nimport { debounce } from \"lodash\";\n\nconst UiInput: NextComponentType<NextPageContext, {}, IInput> = (props: IInput) => {\n  const { name, type, value, onChange, onKeyDown, onKeyUp, message, required, size, onDelete, onClick } = props;\n  const [show, setShow] = useState<boolean>(false);\n\n  const handleChange = (e: any) => {\n    // console.log('[handleChange]',e)\n    if (props?.max && props.max < e.target.value.length) return;\n    let _e: any = {\n      target: {\n        value: e?.target?.value || \"\",\n        name: e?.target?.name || \"\"\n      }\n    };\n    let [newV, extra] = maskInput(e, type);\n    _e.target.value = extra !== undefined ? [newV, extra] : newV;\n    if (onChange) onChange(_e);\n  };\n  const debouncedChangeHandler = useCallback(debounce(handleChange, 1000), []);\n\n  const inputClasses = [\n    props.variant || \"\",\n    validateInput(value, type) ? \"\" : \"invalid\",\n    props.disabled ? \"input-disabled\" : \"\",\n    props.traits?.beforeIcon ? \"input__has-icons\" : \"\"\n  ].join(\" \");\n  if (props.variant == 'invalid' && value?.length == 0) props.variant == undefined;\n  const elType = show && type === \"password\" ? \"text\" : type;\n  const isTextArea = String(value).length > 100 || type == 'textarea';\n  const inputValue = value !== undefined && value !== null ? value : '';\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    if (onDelete && (e.key === 'Backspace' || e.key === 'Delete')) {\n      let { name, value } = e.currentTarget;\n      onDelete({ name: name, value: value });\n    }\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n  };\n  return (\n    <>\n      <style jsx>{styles}</style>\n      {props.name != 'address' &&\n        <FormControl\n          {...props}\n          traits={{\n            ...props.traits,\n            disabled: props.disabled,\n            afterIcon: type === \"password\" ? {\n              icon: show ? \"fa-eye\" : \"fa-eye-slash\",\n              onClick: () => setShow(!show)\n            } : props.traits?.afterIcon,\n          }}>\n          {!isTextArea ? <input\n            onClick={type == 'button' && onClick && onClick || undefined}\n            data-element={props['data-element'] || 'input'}\n            disabled={props?.disabled || undefined}\n            id={props?.id}\n            className={inputClasses}\n            name={name}\n            type={elType}\n            placeholder={props.placeholder}\n            min={props.min}\n            max={props.max}\n            value={inputValue}\n            onChange={elType != 'color' ? handleChange : debouncedChangeHandler}\n            autoComplete={props.autoComplete}\n            onKeyDown={handleKeyDown}\n            onKeyUp={onKeyUp}\n            onPaste={props.onPaste}\n            required={Boolean(required)}\n          /> : <textarea\n            data-element={props['data-element'] || 'textarea'}\n            disabled={props?.disabled || undefined}\n            id={props?.id}\n            className={inputClasses}\n            name={name}\n            placeholder={props.placeholder}\n            value={inputValue}\n            onChange={handleChange}\n            autoComplete={props.autoComplete}\n            onKeyDown={handleKeyDown}\n            onKeyUp={onKeyUp}\n            onPaste={props.onPaste}\n            required={Boolean(required)}\n          />}\n\n\n        </FormControl>\n      }\n\n      {props.name == 'address' && (\n        <AutocompleteAddressInput\n          label={props.label}\n          placeholder={props.placeholder}\n          inputClasses={inputClasses}\n          traits={{\n            ...props.traits\n          }}\n          error={props.error}\n          size={size}\n          address={value}\n          variant={props.variant}\n          setAddress={handleChange}\n        />)}\n      <div className={`input__message ${message ? 'input__message-show' : ''}${props?.variant ? ' input__message-' + props.variant : ''}`}>\n        {message && message}\n      </div>\n    </>\n  );\n};\n\nexport default UiInput;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/helpers/maskInput.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/helpers/useFocus.ts",["1516"],"import React, { useEffect, useState } from \"react\";\n\nconst useFocus = (ref: React.MutableRefObject<HTMLElement | null>, defaultState: boolean = false) => {\n    const [focused, setFocusedState] = useState<boolean>(defaultState);\n\n    useEffect(() => {\n        if (!ref.current) return;\n\n        const onFocus = () => setFocusedState(true);\n        const onBlur = () => setFocusedState(false);\n\n        ref.current.addEventListener(\"focus\", onFocus);\n        ref.current.addEventListener(\"blur\", onBlur);\n\n        return () => {\n            if (ref.current) {\n                ref.current.removeEventListener(\"focus\", onFocus);\n                ref.current.removeEventListener(\"blur\", onBlur);\n            }\n        };\n    }, [ref]);\n\n    const setFocused = (shouldFocus: boolean = true) => {\n        // alert(`SH F: ${shouldFocus.toString()}`)\n        if (shouldFocus && ref.current) {\n            ref.current.focus();\n        } else if (!shouldFocus && ref.current) {\n            ref.current.blur();\n        }\n    };\n\n    return [focused, setFocused];\n};\n\nexport default useFocus;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/helpers/validateInput.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiInput/views/AddressInput.tsx",["1517"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styles from '../UiInput.scss';\nimport aStyles from './AddressInput.scss';\nimport { Loader } from '@googlemaps/js-api-loader';\nimport FormControl, { ITraits } from \"@webstack/components/UiForm/components/FormControl/FormControl\";\nimport { IFormControlVariant } from '@webstack/components/AdapTable/models/IVariant';\nimport UiMenu from '@webstack/components/UiMenu/UiMenu';\n\ninterface IAddressInput {\n  address?: any;\n  setAddress: (e: any) => void;\n  traits?: ITraits;\n  variant?: IFormControlVariant;\n  inputClasses?: string;\n  label?: string;\n  error?: string | null;\n  size?: any;\n  placeholder?:string;\n}\n\nconst AutocompleteAddressInput = ({ address, placeholder, size, setAddress, variant, traits, inputClasses, label, error }: IAddressInput) => {\n  const inputRef = useRef<any>();\n  const [suggestions, setSuggestions] = useState<any[]>([]);\n  const [display, setDisplay] = useState<string | undefined>(\"\");\n\n  const [autocompleteService, setAutocompleteService] = useState<any>(null);\n  const GOOGLE_API_KEY = process.env.NEXT_PUBLIC_GAPI_KEY?.trim() || \"\";\n\n  const initAutocomplete = async () => {\n    const loader = new Loader({\n      apiKey: GOOGLE_API_KEY,\n      libraries: ['places'],\n    });\n    const google = await loader.load();\n    const service = new google.maps.places.AutocompleteService();\n    setAutocompleteService(service);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    setDisplay(query);  // Update display state with input value\n    if (query.length > 2 && autocompleteService) {\n      autocompleteService.getPlacePredictions({ input: query }, (predictions: any) => {\n        setSuggestions(predictions || []);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleDisplay = useCallback(() => {\n    const addressDisplay = address ?\n      `${address?.line1 ? address?.line1 + ', ' : ''\n      }${address?.line2 ? address?.line2 + ' ' : ''\n      }${address?.city ? address?.city + ' ' : ''\n      }${address?.state ? address?.state + ', ' : ''\n      }${address?.postal_code ? address?.postal_code + ', ' : ''\n      }${address?.country ? address?.country : ''}` : \"\";\n    setDisplay(addressDisplay);\n  }, [address]);\n\n  const handleSuggestionSelect = (option: any) => {\n    const placeId = option.value;\n    const loader = new Loader({\n      apiKey: GOOGLE_API_KEY,\n      libraries: ['places'],\n    });\n    loader.load().then((google) => {\n      const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n      placesService.getDetails({ placeId }, (place: any) => {\n        if (place && place.address_components) {\n          const addressComponents = place.address_components.reduce((acc: any, component: any) => {\n            const type = component.types[0];\n            acc[type] = component.short_name;\n            return acc;\n          }, {});\n\n          const formattedAddress = {\n            line1: `${addressComponents.street_number || ''} ${addressComponents.route || ''}`,\n            line2: addressComponents.sublocality || '',\n            city: addressComponents.locality || '',\n            state: addressComponents.administrative_area_level_1 || '',\n            postal_code: addressComponents.postal_code || '',\n            country: addressComponents.country || '',\n            lat: place.geometry?.location?.lat() || 0,\n            lng: place.geometry?.location?.lng() || 0\n          };\n          const addressValue = { target: { name: \"address\", value: formattedAddress } };\n          setAddress(addressValue);\n          setSuggestions([]);\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    initAutocomplete();\n  }, []);\n\n  useEffect(() => {\n    handleDisplay();\n  }, [address, handleDisplay]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <style jsx>{aStyles}</style>\n      <div className='address-input'>\n      <FormControl\n        size={size}\n        error={error}\n        label={label}\n        traits={{ ...traits, variant: \"address\" }}\n        variant={variant}\n      >\n        <input\n          data-element='input'\n          className={inputClasses+ \" address-input\"}\n          id=\"autocomplete-address\"\n          type=\"text\"\n          ref={inputRef}\n          placeholder={placeholder || \"Enter address\"} \n          value={display}\n          name=\"address\"\n          onChange={handleInputChange}\n        />\n      </FormControl>\n      {suggestions.length > 0 && (\n        <div className='address-input--suggestions'>\n          <UiMenu\n            options={suggestions.map(suggestion => ({\n              label: suggestion.structured_formatting.main_text,\n              value: suggestion.place_id,\n              secondary: suggestion.structured_formatting.secondary_text\n            }))}\n            onSelect={handleSuggestionSelect}\n          />\n        </div>\n      )}\n      </div>\n    </>\n  );\n};\n\nexport default AutocompleteAddressInput;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiJoyStick/UiJoyStick.tsx",["1518","1519"],"import React, { useState, useEffect, useRef } from 'react';\nimport styles from './UiJoyStick.scss'; // Adjust the import according to your actual stylesheet path\nimport UiButton from '@webstack/components/UiButton/UiButton';\n\nconst UiJoyStick: React.FC = () => {\n  const [pos, setPos] = useState<[number, number]>([0, 0]);\n  const joystickRef = useRef<any>(null);\n  const thumbRef = useRef<HTMLDivElement>(null);\n  const unscrollable = () =>{\n    if(!joystickRef.current)return;\n    let nxt = document.getElementById(\"__next\")?.style;\n    if(nxt && nxt.overflow){\n      nxt = undefined;\n    }\n    if(!nxt)return;\n    nxt.overflow = 'hidden';\n    nxt.height = \"100vh\";\n  }\n  const getXy = (e:any) =>{\n    const { left, top, width, height } = joystickRef.current.getBoundingClientRect();\n    const [x,y] = [\n      Number((e.clientX - left - width / 2)),\n      Number((e.clientY - top - height / 2))\n    ];\n    return {x,y, left, top, width, height } ;\n  }\n  useEffect(() => {\n    const transition = 500;\n\n    const smoothTransition = (from: [number, number], to: [number, number], duration: number) => {\n      const startTime = performance.now();\n\n      const animate = (currentTime: number) => {\n        const elapsedTime = currentTime - startTime;\n        const progress = Math.min(elapsedTime / duration, 1);\n\n        const newX = from[0] + (to[0] - from[0]) * progress;\n        const newY = from[1] + (to[1] - from[1]) * progress;\n        setPos([newX, newY]);\n\n        if (progress < 1) {\n          requestAnimationFrame(animate);\n        }\n      };\n\n      requestAnimationFrame(animate);\n    };\n\n    const handleMouseMove = (e: MouseEvent) => {\n      unscrollable();\n      const {x,y, width, height}=getXy(e);\n\n      if (!joystickRef.current || !thumbRef.current) return;\n  \n      if (x > width / 2 || y > height / 2 || x < -width / 2 || y < -height / 2) {\n        return;\n        // smoothTransition([x,y], [0, 0], transition); // Move back to center\n      } else {\n        setPos([\n          Math.max(Math.min(x, width / 2), -width / 2),\n          Math.max(Math.min(y, height / 2), -height / 2),\n        ]);\n      }\n    };\n\n    const handleMouseUp = (pos:any) => {\n      unscrollable()\n      smoothTransition(pos, [0, 0], transition); // Move back to center\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', ()=>handleMouseUp(pos));\n    };\n\n    const handleMouseDown = (e: MouseEvent) => {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', ()=>handleMouseUp(pos));\n    };\n\n    const handleTouchMove = (e: TouchEvent) => {\n      unscrollable()\n\n      if (!joystickRef.current || !thumbRef.current) return;\n      const rect = joystickRef.current.getBoundingClientRect();\n      const touch = e.touches[0];\n      const x = touch.clientX - rect.left - rect.width / 2;\n      const y = touch.clientY - rect.top - rect.height / 2;\n      \n      if (x > rect.width / 2 || y > rect.height / 2 || x < -rect.width / 2 || y < -rect.height / 2) {\n        smoothTransition([x,y], [0, 0], transition); // Move back to center\n      } else {\n        setPos([\n          Math.max(Math.min(x, rect.width / 2), -rect.width / 2),\n          Math.max(Math.min(y, rect.height / 2), -rect.height / 2),\n        ]);\n      }\n    };\n\n    const handleTouchEnd = () => {\n      // smoothTransition(pos, [0, 0], transition); // Move back to center\n      document.removeEventListener('touchmove', handleTouchMove);\n      document.removeEventListener('touchend', handleTouchEnd);\n    };\n\n    const handleTouchStart = (e: TouchEvent) => {\n      document.addEventListener('touchmove', handleTouchMove);\n      document.addEventListener('touchend', handleTouchEnd);\n    };\n\n    if (thumbRef.current) {\n      thumbRef.current.addEventListener('mousedown', handleMouseDown as EventListener);\n      thumbRef.current.addEventListener('touchstart', handleTouchStart as EventListener);\n    }\n\n    return () => {\n      if (thumbRef.current) {\n        thumbRef.current.removeEventListener('mousedown', handleMouseDown as EventListener);\n        thumbRef.current.removeEventListener('touchstart', handleTouchStart as EventListener);\n      }\n    };\n  }, [ unscrollable,setPos]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      {/* <UiButton onClick={unscrollable}>Click</UiButton> */}\n      {/* <div className='dev'>{JSON.stringify({pos})}</div> */}\n      <div className='joystick__container'>\n        <div ref={joystickRef} className='joystick'>\n          <div\n            ref={thumbRef}\n            className='joystick-thumb'\n            style={{ transform: `translate(${pos[0]}px, ${pos[1]}px)` }}\n          ></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UiJoyStick;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiKnob/UiKnob.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiPill/UiPill.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiSelect/UiSelect.tsx",["1520","1521"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"./UiSelect.scss\";\nimport UiMenu, { IMenuOption } from \"../../../UiMenu/UiMenu\";\nimport UiInput from \"../UiInput/UiInput\";\nimport { capitalize } from \"lodash\";\nimport { useModal } from \"../../../modal/contexts/modalContext\";\nimport { ITraits } from \"@webstack/components/UiForm/components/FormControl/FormControl\";\nimport { IFormControlVariant } from \"../../../AdapTable/models/IVariant\";\ntype TitleProps = { text?: string | number; preIcon?: string; postIcon?: string } | string | React.ReactElement;\n\nexport interface ISelect  {\n  label?: string;\n  options?: any,\n  onSelect?: (value: any) => void;\n  openDirection?: \"up\" | \"down\" | \"left\" | \"right\";\n  onToggle?: (isOpen: boolean) => void;\n  title?: TitleProps;\n  openState?: string;\n  search?: boolean;\n  setSearch?: (value: string) => void;\n  overlay?: boolean | {zIndex : number};\n  value?: string;\n  traits?: ITraits;\n  variant?: IFormControlVariant\n  size?: any;\n}\n\nconst UiSelect: React.FC<ISelect> = ({\n  options,\n  size,\n  onSelect,\n  openDirection = \"down\",\n  onToggle,\n  title,\n  variant,\n  openState,\n  value,\n  label,\n  traits,\n  search,\n  setSearch,\n  overlay\n}) => {\n  const [isOpen, setIsOpen] = useState<string>(\"closed\");\n  const [title_, setTitle] = useState<string | number>(\"\");\n  const {isModalOpen, openModal, closeModal}=useModal();\n  const typesBypass: any = options;\n  const hasOptions = Boolean(typesBypass?.every((element: any) => element !== undefined));\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n  const isMobileNavOpen = Boolean(isOpen === 'open');\n  const handleSelect = (value: any) => {\n    setSelectedOption(value);\n    onSelect && onSelect(value);\n    variant !== 'disabled' && setIsOpen(\"closed\");\n  }\n  const handleOpen = () => {\n    if(hasOptions)setIsOpen(isOpen === \"closed\" ? \"open\" : \"closed\");\n    if(overlay){\n      if(isOpen == 'closed')typeof overlay == \"object\" && overlay?.zIndex?openModal({zIndex: overlay?.zIndex}):openModal(null);\n      else closeModal();\n    }\n  };\n  const isTitleObject = (\n    title?: TitleProps\n  ): title is { text?: string | number; preIcon?: string; postIcon?: string } => {\n    return typeof title === \"object\" && !React.isValidElement(title);\n  };\n\n  const postIconHandler = (title: any, variant: any) => {\n    if (variant?.includes('nav-item')) {\n      if (!isMobileNavOpen) return traits?.afterIcon;\n      else return \"fa-xmark\";\n    }\n    if (isMobileNavOpen) {\n      return \"fa-xmark\";\n    } else {\n      return `fa-chevron-${openDirection}`\n    }\n  }\n\n\n  useEffect(() => {\n    if (openState !== undefined) {\n      setIsOpen(openState);\n    }\n  }, [openState]);\n\n  useEffect(() => {\n    if (title_ !== title) {\n      if (typeof title === \"string\") setTitle(title);\n      if (typeof title === \"object\" && \"text\" in title && title.text !== undefined) setTitle(title.text);\n    }\n  }, [title, onSelect]);\n  useEffect(() => {\n    if (isMobileNavOpen && onToggle) onToggle(isMobileNavOpen);\n\n  }, [isOpen, isModalOpen]);\n\n  return (\n    <>\n      <style jsx>{styles}</style>\n\n      <div\n        className={`select ${openDirection} ${size?` select-${size}`:''}`}\n        style={traits?.width ? { width: `${traits.width}px` } : {}}\n        onClick={handleOpen}\n      >\n        {/* t: {title_} | s: {selectedOption} */}\n        <UiInput\n          data-element='select'\n          type=\"button\"\n          label={label}\n          size={size}\n          variant={hasOptions && variant !== 'disabled' ? variant : \"select__disabled\"}\n          value={typeof value === 'string' ? capitalize(value) : title_ || selectedOption || \"Select\"}\n          traits={{\n            beforeIcon: isTitleObject(title) && title.preIcon ? title.preIcon : undefined,\n            afterIcon: postIconHandler(traits, variant)\n          }}\n        />\n        {isMobileNavOpen && variant !== 'disabled' && (\n          <div\n            className={`select__options ${openDirection} ${variant ? \" \" + variant : \"\"}`}>\n            <UiMenu\n            size={size}\n              traits={traits}\n              search={search}\n              setSearch={setSearch}\n              options={options}\n              onSelect={handleSelect}\n              variant={hasOptions ? variant : \"disabled\"}\n              value={value}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default UiSelect;","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/components/UiToggle/UiToggle.tsx",["1522"],"import React, { useEffect, useRef } from \"react\";\nimport styles from \"./UiToggle.scss\";\nimport FormControl from \"../FormControl/FormControl\";\n\ninterface IToggle {\n  name: string;\n  disabled?: boolean;\n  label?: string;\n  value?: boolean | 'true' | 'false';\n  onChange?: (checked: any) => void;\n}\n\nconst ToggleSwitch = ({ value, onChange, name, label, disabled }: IToggle) => {\n  const togRef = useRef<any>(null)\n  const handleToggle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newE = {\n      target:{\n        name: name,\n        value: e.target.checked\n      }\n    }\n    // // Call the provided onChange handler with the new checked state\n    !disabled && onChange && onChange(newE);\n  };\n  \n  useEffect(() => {\n    if(togRef.current && value == true){\n      togRef.current.setAttribute('checked','');\n    }else{\n      togRef.current.removeAttribute(\"checked\");\n    }\n  }, [value, togRef?.current]);\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <FormControl variant='checkbox' label={label}>\n        <label className=\"toggle-switch\">\n          <input \n            disabled={disabled}\n            ref={togRef}\n            name={name} \n            type=\"checkbox\" \n            // {value == 'true' && 'checked': undefined}\n            onChange={handleToggle} \n          />\n          <span className={`slider ${disabled && ' slider--disabled' || ''}`} />\n        </label>\n      </FormControl>\n    </>\n  );\n};\n\nexport default ToggleSwitch;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/controller/UiForm.tsx",["1523"],"import React, { useEffect, useState } from 'react';\nimport UiInput from '../components/UiInput/UiInput';\nimport styles from './UiForm.scss';\nimport UiButton from '../../UiButton/UiButton';\nimport { IForm, IFormField } from '../models/IFormModel';\nimport UiSelect from '../components/UiSelect/UiSelect';\nimport UiLoader from '../../UiLoader/view/UiLoader';\nimport ToggleSwitch from '../components/UiToggle/UiToggle';\nimport FormControl from '../components/FormControl/FormControl';\nimport AddFieldForm from '../views/AddFieldForm/AddFieldForm';\nimport AutocompleteAddressInput from '@webstack/components/UiForm/components/UiInput/views/AddressInput';\nimport { getFieldType } from '../functions/formFieldFunctions';\n\nconst UiForm = ({\n    variant,\n    fields,\n    onSubmit,\n    onError: onLocalErrors,\n    title, \n    submitText,\n    submitIcon,\n    onChange,\n    loading,\n    disabled,\n    onAddField,\n}: IForm): React.JSX.Element => {\n    const [complete, setComplete] = useState<boolean>(false);\n    const [localErrors, setLocalErrors] = useState<any>({});\n    \n    const handleComplete = () => {\n        if (!fields) return;\n        fields.forEach((f: any) => f.required && ![undefined, '', null].includes(f.value) && setComplete(true));\n        const noneRequired = fields.filter(f => f.required)?.length == 0;\n        if (noneRequired && !complete) setComplete(true);\n    };\n\n    const handleInputChange = (e: any, constraints?: IFormField['constraints']) => {\n        if (onChange) return onChange(e);\n    };\n\n    const handleSubmit = () => {\n        if (!fields || !onSubmit) return;\n\n        let newErrors = { ...localErrors };\n\n        fields.forEach((f: any) => {\n            if (f.constraints) {\n                const min = f.constraints?.min;\n                const max = f.constraints?.max;\n                const valueLen = String(f.value).replaceAll(' ', '').length;\n                if (min != undefined && valueLen) {\n                    if (localErrors[f.name] !== undefined) { delete newErrors[f.name]; }\n                    else if (valueLen < min) { newErrors[f.name] = `*${f.name} is not long enough`; }\n                }\n                if (max != undefined) {\n                    if (localErrors[f.name] !== undefined) { delete newErrors[f.name]; }\n                    else if (valueLen > max) { newErrors[f.name] = `*${f.name} is too long`; }\n                }\n            }\n        });\n        setLocalErrors(newErrors);\n\n        if (Object.keys(newErrors).length == 0) {\n            onSubmit(fields);\n        } else if (onLocalErrors) {\n            onLocalErrors(newErrors);\n        }\n    };\n\n    const handlePill = (e: any, field: IFormField, direction?: string) => {\n        if (direction && onChange) {\n            const val = () => {\n                let newPillVal = Number(field.value);\n                if (direction == 'minus') {\n                    if (field.min && newPillVal <= field.min) newPillVal = field.min;\n                    else newPillVal = newPillVal - 1;\n                } else {\n                    if (field.max && newPillVal >= field.max) newPillVal = field.max;\n                    else newPillVal += 1;\n                }\n                return newPillVal;\n            };\n            const target = { target: { name: field.name, value: val() } };\n            return onChange(target);\n        }\n        let { name, value } = e.target;\n        if (value && String(value).charAt(0) == '0') value = value.slice(1, value.length);\n        if (field?.min && Number(value) <= field?.min) value = String(field.min);\n        if (field?.max && Number(value) >= field?.max) value = String(field.max);\n        return handleInputChange({ target: { name: name, value: value } });\n    };\n    \n    const fieldsCanPopulate = Array(fields)?.length;\n    useEffect(() => {\n        handleComplete();\n    }, [fields, disabled, loading, title]);\n\n    if (!fields) return <div className='error'>No form fields</div>;\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            {title && <div className='form__title'>{title}</div>}\n            <div className={`form${variant && ` form--${variant}` || ''}`}>\n                {fieldsCanPopulate &&\n                    fields.map((field, index) => field.name && field?.readonly && (\n                        <div key={index} className={`form-field__readonly ${field.error && \"error\"}`} style={field?.width ? { width: `calc(${field.width} - 8px)` } : {}}>\n                            <div className='form-field__readonly--label'>{field?.label}</div>\n                            <div className='form-field__readonly--value'>{\n                                typeof field.value !== 'object' && `${field?.value}` || \n                                field.value && <div className='object-list'>{Object.entries(field.value).map(([chK, chV]: any) => {\n                                    return <span className='object-item' key={chK}>\n                                        <span className='object-item--key'>{chK}:</span>\n                                        <span className='object-item--value'>{JSON.stringify(chV).replaceAll('\"', '')}</span>\n                                    </span>\n                                })}</div>\n                            }</div>\n                        </div>\n                    ))}\n    \n                {fieldsCanPopulate && fields.map((field, index) => field.name && !field.readonly && (\n                    <div\n                        key={index}\n                        className={`form-field`}\n                        style={typeof field?.width == 'string' ? { width: `calc(${field.width} - 6px)` } : {}}\n                    >\n                        {field.name == 'address' && (\n                            <div className='s-w-100'>\n                                <AutocompleteAddressInput\n                                    variant={\n                                        Boolean(field?.error) ? 'invalid' : variant || field?.variant\n                                    }\n                                    label='address'\n                                    address={field.value}\n                                    error={field?.error}\n                                    setAddress={e => handleInputChange(e, field.constraints)}\n                                />\n                            </div>\n                        )}\n                        {getFieldType(field?.value) == 'text' && field.name !== 'address' && <>\n                            <UiInput\n                                autoComplete={field.autoComplete}\n                                label={field.label}\n                                variant={\n                                    Boolean(field?.error) ? 'invalid' : variant || field?.variant\n                                }\n                                disabled={field?.disabled}\n                                error={field.error}\n                                type={field.type}\n                                required={field.required}\n                                traits={field.traits}\n                                name={field.name}\n                                placeholder={field.placeholder}\n                                value={field?.value}\n                                onChange={e => handleInputChange(e, field.constraints)}\n                            />\n                        </>}\n                        {getFieldType(field?.value) == 'checkbox' && (\n                            <ToggleSwitch\n                                label={field.label}\n                                name={field.name}\n                                disabled={field?.disabled}\n                                onChange={e => handleInputChange(e, field?.constraints)}\n                                value={Boolean(field?.value)} />\n                        )}\n                        {field?.type == 'select' && field?.options !== undefined && (\n                            <UiSelect\n                                variant={field?.variant}\n                                traits={field.traits}\n                                options={field?.options}\n                                label={field.name}\n                                value={String(field?.value)}\n                                onSelect={e => handleInputChange({ target: { name: field.name, value: e } }, field.constraints)}\n                            />\n                        )}\n                        {field.type == 'pill' && (\n                            <FormControl\n                                label={field?.error ? `${field.label} *${field.error}*` : field.label}\n                                variant={field.error && 'invalid' || Boolean(field?.min && field.value == field.min || field.max && field.value == field.max) && 'bump pill' || 'pill'}\n                                traits={{\n                                    beforeIcon: { icon: 'fas-minus', onClick: () => handlePill(undefined, field, 'minus') },\n                                    afterIcon: { icon: 'fas-plus', onClick: () => handlePill(undefined, field, 'plus') },\n                                }}\n                            >\n                                <input\n                                    name={field.name}\n                                    type='tel'\n                                    min={field?.min}\n                                    max={field?.max}\n                                    value={isNaN(Number(field.value)) ? '0' : String(field.value)}\n                                    placeholder={field?.placeholder}\n                                    onChange={(e) => handlePill(e, field, undefined)}\n                                />\n                            </FormControl>\n                        )}\n                    </div>\n                ))}\n                {!fieldsCanPopulate && (<UiLoader position='relative' />)}\n    \n                {onAddField && <AddFieldForm onAddField={onAddField} />}\n                <div className={`form__submit ${variant && ` form__submit--${variant}` || ''}`}>\n                    {onSubmit && <UiButton onClick={handleSubmit} traits={{ afterIcon: submitIcon }} disabled={disabled || !complete} variant={!disabled && complete && 'glow'} type='submit' busy={loading == true} >\n                        {submitText ? submitText : 'Submit'}\n                    </UiButton>}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default UiForm;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/defaults/useCustomerAddForm.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/functions/FormConstraints.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/functions/formFieldFunctions.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/functions/useFormState.ts",["1524"],"import { useEffect, useState } from \"react\";\nimport { IFormField } from \"../models/IFormModel\";\n\n\n\ntype OFormState = [\n    fields: IFormField[],\n    setField: (e: any) => void\n]\nexport const useFormState = (\n    startFields : IFormField[]): OFormState => {\n    const [fields, setFieldState] = useState(startFields);\n\n    const [disabled, setDisabledState] = useState<boolean>(true);\n    const setDisabled = (state: boolean) => {\n        state !== undefined && setDisabledState(state);\n    }\n    const setFields = (fields: IFormField[]) => {\n        fields !== undefined && setFieldState(fields);\n    }\n    const setField = (e: any) => {\n        const { name, value } = e.target;\n        const updateFields = fields.map((field: IFormField) => {\n            let f = field;\n            if (field.name == name) {\n                if (field.name == 'value' && String(field.value).length >= 3) f.error = 'too long';\n                else if (field.error) delete f.error;\n                f.value = value;\n            }\n            return f;\n        });\n        setDisabled(Boolean(updateFields.find((field: IFormField) => { return field.value == undefined || field.value == 0 })));\n        setFields(updateFields);\n    };\n    useEffect(()=>{\n        \n    },[setField]);\n    return [fields, setField];\n};\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/models/IFormModel.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiForm/views/AddFieldForm/AddFieldForm.tsx",["1525"],"import React, { useEffect, useState } from 'react';\nimport styles from './AddFieldForm.scss';\nimport UiButton from '@webstack/components/UiButton/UiButton';\nimport UiForm from '../../controller/UiForm';\nimport { useModal } from '@webstack/components/modal/contexts/modalContext';\n\nconst AddFieldForm = ({ onAddField }: any) => {\n    const [isBtn, setIsBtn] = useState<boolean>(true);\n    const { openModal, closeModal } = useModal();\n    const [newField, setNewField] = useState<any>();\n    const onChange = (e: any) => {\n        // Update the name and value properties in parallel within the target object\n        const updatedField = {\n            target: {\n                name: e.target.value ? e.target.value.replaceAll(' ', '_') : 'add-field',\n                value: e.target.value,\n            },\n        };\n        setNewField(updatedField);\n    }\n    useEffect(() => { }, [onChange]);\n    const AddFieldComponent = () =>{\n        return <>\n        <style jsx>{styles}</style>\n        <div className='add-field-form'>\n        <UiForm\n            variant='mini'\n            onChange={onChange}\n            onSubmit={onSubmit}\n            fields={[\n                {\n                    name: newField?.target?.name || 'add-field',\n                    value: newField?.target?.value || '',\n                    label: newField?.target?.value || \"new field name\"\n                }\n            ]}\n        />\n        </div>\n    </>\n    }\n    const onSubmit = (e: any) => {\n        if (isBtn) {\n            openModal(<AddFieldComponent/>)\n            setIsBtn(!isBtn);\n        }\n        if (!isBtn) onAddField(newField);\n    }\n\n\n    return (\n        <>\n            <style jsx>{styles}</style>\n            <div className='add-field'>\n                <UiButton variant='link' traits={{ afterIcon: 'fas-plus' }} onClick={onSubmit}>add field</UiButton>\n            </div>\n        </>\n    );\n};\n\nexport default AddFieldForm;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiIcon/UiIcon.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiLoader/view/UiLoader.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMarkDown/UiMarkDown.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMedia/controller/UiMedia.tsx",["1526","1527"],"import { useEffect, useRef, useState } from 'react';\nimport styles from './UiMedia.scss';\nimport ImageControl, { IImageMediaType, IImageVariant } from '@webstack/components/ImageControl/ImageControl';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\n\nexport interface IMedia {\n  src: string;\n  alt?: string;\n  variant?: IImageVariant;\n  type?: IImageMediaType;\n  loadingText?: string;\n  rotate?: number; // Added rotate prop for rotation degree\n}\n\nconst UiMedia: React.FC<IMedia> = ({ src, variant, type, alt, loadingText, rotate }: IMedia) => {\n  const [imageControlProps, setImageControlProps] = useState<any>({ variant, type });\n  const [reloadTrigger, setReloadTrigger] = useState(0); // state to trigger reload\n  const imgRef = useRef<any>();\n  const handleReload = () => {\n    setImageControlProps({ ...imageControlProps, error: null }); // Reset error state\n    setReloadTrigger(prev => prev + 1); // Increment reload trigger to re-render the image\n  };\n\n  const RefreshLoadingText = () => {\n    return <>\n        <div style={{color: \"#f90\"}}>{loadingText}, Failed</div>\n        <div>\n          <UiIcon icon='fa-arrows-rotate' onClick={handleReload} />\n        </div>\n    </>\n  }\n\n  const handleError = (event: any) => {\n    event.preventDefault();\n    // console.log('[ ERROR ]', event)\n    if (!imageControlProps.error) {\n      setImageControlProps({ ...imageControlProps, error: <RefreshLoadingText />});\n    }\n  };\n\n  // Apply rotation if the rotate prop is provided\n  const imageStyle = {\n    transform: `rotate(${rotate}deg)`\n  };\n\n  imageControlProps.loadingText = loadingText;\n  useEffect(() => {\n    // Effect logic here if needed\n    if(rotate && imgRef?.current){\n      imgRef.current.style.transform = `rotate(${rotate}deg)`\n    }else if(!rotate && imgRef?.current?.style.transform)delete imgRef.current.style\n\n  }, [handleError, imageControlProps,handleReload,  imgRef?.current]); // \n\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <ImageControl {...imageControlProps}>\n        {!imageControlProps.error &&\n          <img ref={imgRef} src={src} alt={alt} onError={handleError} key={reloadTrigger} /> // Apply rotation style here\n        }\n      </ImageControl>\n    </>\n  );\n};\n\nexport default UiMedia;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMedia/views/UiMediaSlider/UiMediaSlider.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMenu/UiMenu.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiMenuFan/UiMenuFan.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/UiRightClick/UiRightClick.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/components/modal/contexts/modalContext.tsx",["1528"],"import React, { createContext, ReactNode, useContext, useEffect, useState } from 'react';\nimport { IFormControlVariant } from '@webstack/components/AdapTable/models/IVariant';\n\nexport type IConfirm = {\n  title?: string | React.ReactElement;\n  statements?: {\n    label?: string,\n    onClick?: (e: any) => void,\n    href?: string,\n    variant?: IFormControlVariant\n  }[] | undefined;\n  body?: any;\n} | undefined;\n\nexport interface IModal {\n  title?: string | ReactNode;\n  children?: ReactNode | null | string;\n  footer?: ReactNode;\n  variant?: \"popup\" | 'fullscreen' | 'container';\n  dismissable?: boolean;\n  confirm?: IConfirm;\n  zIndex?: number;\n}\n\nexport type IModalContent = IModal | ReactNode | null;\n\nexport interface ModalContextType {\n  confirm?: IConfirm;\n  isModalOpen: boolean;\n  openModal: (content: IModalContent) => void;\n  closeModal: () => void;\n  modalContent: IModalContent;\n  replaceModal: (content: IModalContent) => void;\n}\n\nexport const ModalContext = createContext<ModalContextType | undefined>(undefined);\n\ninterface Props {\n  children: any;\n}\n\nexport const ModalProvider: React.FC<Props> = ({ children }) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [modalContent, setModalContent] = useState<IModalContent>(null);\n\n  const openModal = (content: IModalContent) => {\n    setIsModalOpen(true);\n    setModalContent(content);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalContent(null);\n  };\n\n  const replaceModal = (content: IModalContent) => {\n    if (isModalOpen) {\n      setModalContent(content);\n    } else {\n      openModal(content);\n    }\n  };\n\n  return (\n    <ModalContext.Provider value={{ isModalOpen, openModal, closeModal, modalContent, replaceModal }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport const useModal = () => {\n  const context = useContext(ModalContext);\n  \n  useEffect(() => {}, [ModalContext]);\n  if (context === undefined) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n\n  return context;\n};\n","/home/web/servers/frontend/Deepturn/app/src/webstack/components/modal/views/modalOverlay.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Capitalize.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/CookieHelper.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Dictionary.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Encryption.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/EventEmitter.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/IconHelper.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/InlineBuilders.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/MockData.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/ServiceProvider.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/Strings/reverseString.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/checkString.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/createBuildDate.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/createTestId.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/isTextOverflowing.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/keyStringConverter.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/stringNumber.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/timeStamp.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/underScoreLess.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/helpers/userExperienceFormats.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/interfaces/useContextMenu.tsx",["1529"],"// useContextMenu.js\nimport React, { useState, useCallback, JSXElementConstructor, useEffect } from 'react';\nimport useMouse from './useMouse/useMouse';\ninterface IuseContextMenu{\n  content: React.ReactElement<any, string | JSXElementConstructor<any>> | null,\n  visible: boolean\n}\nconst useContextMenu = () => {\n  const {position} = useMouse();\n  const [pos, setPos]=useState({x:0, y: 0});\n  const [contextMenu, setContextMenu] = useState<IuseContextMenu>({ content: null, visible: false });\n\n  const openContextMenu = useCallback((content:React.ReactElement<any, string | JSXElementConstructor<any>> ) => {\n    setContextMenu({ content, visible: true });\n  }, []);\n  \n  useEffect(() => {\n    if(pos.x == 0 && pos.y === 0)setPos(position);\n  }, [position]);\n  const closeContextMenu = useCallback(() => {\n    setContextMenu({ content: null, visible: false });\n  }, []);\n  const isContextMenuOpen = contextMenu.visible;\n  const ContextMenuComponent = contextMenu.visible ? (\n    <div\n      id='custom-context-menu'\n      style={{\n        position: 'fixed',\n        top: '0', // These should be updated to the mouse position\n        left: '0', // These should be updated to the mouse position\n        transform: `translate(${pos.x}px, ${pos.y}px)`,\n        zIndex: 1000, // Make sure this is above everything else\n      }}\n    >\n      {contextMenu.content}\n    </div>\n  ) : null;\n\n  return { openContextMenu, closeContextMenu, ContextMenuComponent, isContextMenuOpen };\n};\n\nexport default useContextMenu;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/interfaces/useKeyBoard/useKeyBoard.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/interfaces/useMouse/useMouse.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useCampaign.ts",["1530"],"import { useEffect, useState } from 'react';\nimport useUserAgent from './useUserAgent';\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\nimport { useRouter } from 'next/router';\n\nconst useCampaign = () => {\n  const router = useRouter();\n  const user_agent_data = useUserAgent();\n  const user = useUser();\n  const id = router?.query?.cid;\n  const [campaignData, setCampaignData]=useState<any>();\n  useEffect(()=>{\n    if(id && user_agent_data)setCampaignData({\n      user, user_agent_data, id\n    });\n  },[router, user, user_agent_data]);\n  if(!id)return;\n  return campaignData;\n};\n\n\nexport default useCampaign;","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useClass.ts",["1531"],"import React, { useEffect, useState } from \"react\";\nimport useWindow from \"./useWindow\";\nimport { IFormControlVariant } from \"@webstack/components/AdapTable/models/IVariant\";\n\ninterface IuseClassWidths {\n    width: number | string,\n    classList: string | string[]\n}\n\ninterface IuseClass {\n    cls: string;\n    type?: string;\n    variant?: any;\n    extras?: string[] | undefined;\n    standalones?: string[] | undefined;\n    minWidths?: IuseClassWidths[];\n    maxWidths?: IuseClassWidths[];\n    width?: number;\n}\n\nconst useClass = (props: IuseClass) => {\n\n    const { cls, type, variant, extras, minWidths, maxWidths, width, standalones } = props;\n    const widthReady = Boolean(!width && maxWidths) || Boolean(!width && minWidths);\n    const [classState, setClassState] = useState<string>(cls);\n\n    useEffect(() => {\n        let newClass = cls;\n        \n        // Function to append modifiers\n        const appendModifier = (modifier: string | undefined) => {\n            if (modifier) {\n                newClass += ` ${cls}__${modifier}`;\n            }\n        };\n        \n        appendModifier(variant);\n        appendModifier(type);\n        \n        if (extras) {\n            extras.forEach(extra => {\n                if (extra?.length) {\n                    newClass += ` ${cls}__${extra}`;\n                }\n            });\n        }\n        if (standalones) {\n            standalones.forEach(extra => {\n                if (extra?.length) {\n                    newClass += ` ${extra}`;\n                }\n            });\n        }\n\n        const handleWidths = (widths: IuseClassWidths[], isMinWidth: boolean) => {\n            if(!width)return;\n            widths.forEach(w => {\n                const widthCondition = typeof w.width === 'number' ? w.width :\n                    (typeof w.width === 'string' && w.width.endsWith('px') ? parseInt(w.width) : 0);\n                \n                if (isMinWidth ? widthCondition > width : widthCondition < width) {\n                    if (Array.isArray(w.classList)) {\n                        w.classList.forEach(c => {\n                            newClass += ` ${cls}__${c}`;\n                        });\n                    } else {\n                        newClass += ` ${cls}${w.classList}`;\n                    }\n                }\n            });\n        };\n        \n        if (minWidths) {\n            handleWidths(minWidths, true);\n        }\n        \n        if (maxWidths) {\n            handleWidths(maxWidths, false);\n        }\n\n        setClassState(newClass);\n    }, [props]);\n\n    return classState;\n};\n\nexport default useClass;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useDarkMode.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useDocument.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useElement.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useReferrer.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useScroll.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useUserAgent.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/useWindow.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/hooks/user/useLocation.ts",["1532"],"import { useCallback, useState, useRef, useEffect } from \"react\";\nimport { useModal } from \"@webstack/components/modal/contexts/modalContext\";\n\nconst useLocation = () => {\n  const { openModal, closeModal, isModalOpen } = useModal();\n  const [lngLat, setLocation] = useState<[number, number] | undefined>();\n  const [permissionDenied, setPermissionDenied] = useState<boolean>(false);\n  const permissionStatusRef = useRef<PermissionStatus | null>(null);\n\n  const success = useCallback((position: GeolocationPosition) => {\n    setLocation([\n      Number(position.coords.longitude.toFixed(2)),\n      Number(position.coords.latitude.toFixed(2)),\n    ]);\n  }, []);\n\n  const error = useCallback(() => {\n    console.error(\"Unable to retrieve your location\");\n    setPermissionDenied(true);\n  }, []);\n\n  const handlePermissionChange = useCallback(() => {\n    const permissionStatus = permissionStatusRef.current;\n    if (permissionStatus && permissionStatus.state === 'granted') {\n      closeModal();\n      navigator.geolocation.getCurrentPosition(success, error);\n    } else {\n      setPermissionDenied(true);\n    }\n  }, [closeModal, error, success]);\n\n  const requestLocation = useCallback(() => {\n    if (navigator.permissions) {\n      navigator.permissions.query({ name: 'geolocation' }).then((permissionStatus: PermissionStatus) => {\n        permissionStatusRef.current = permissionStatus;\n        permissionStatus.addEventListener('change', handlePermissionChange);\n\n        if (permissionStatus.state === 'granted') {\n          navigator.geolocation.getCurrentPosition(success, error);\n        } else if (permissionStatus.state === 'prompt' && !isModalOpen) {\n          !isModalOpen && openModal({\n            // dismissable: false,\n            title: \"Know Your Location\",\n            confirm: {\n              title: \"Enable Location\",\n              body: \"To use this feature, please enable location access.\",\n              statements: [\n                {\n                  label: 'Allow',\n                  onClick: () => {\n                    permissionStatusRef.current?.addEventListener('change', handlePermissionChange);\n                    navigator.geolocation.getCurrentPosition(success, error);\n                  }\n                },\n                {\n                  label: \"Deny\",\n                  onClick: () => {\n                    closeModal();\n                    setPermissionDenied(true);\n                  }\n                }\n              ]\n            }\n          });\n        } else {\n          setPermissionDenied(true);\n        }\n      }).catch(error => {\n        console.error(\"Error querying permissions\", error);\n        setPermissionDenied(true);\n      });\n    } else {\n      console.error(\"Permission API not supported\");\n      setPermissionDenied(true);\n    }\n    // openModal, closeModal, success, error, handlePermissionChange, isModalOpen\n  }, [handlePermissionChange, error, success, isModalOpen]);\n\n  useEffect(() => {\n    return () => {\n      const permissionStatus = permissionStatusRef.current;\n      if (permissionStatus) {\n        permissionStatus.removeEventListener('change', handlePermissionChange);\n      }\n    };\n  }, [handlePermissionChange]);\n\n  return {\n    lngLat,\n    requestLocation, // This function can be triggered by a user action\n    permissionDenied,\n  };\n};\n\nexport default useLocation;\n","/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/brand_icons.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/custom_icons.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/fontAwesome/FontAwesome.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/fontAwesome/FontAwesomeLight.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/fontAwesome/FontAwesomeSolid.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/method_icons.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/categories/social_icons.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/html/ecommerce/empty-cart.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/html/ecommerce/products/box.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/html/theme.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/icons/icons.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/index.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiOverLayoutr/controller/UiOverLayout.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiSettingsLayout/controller/UiSettingsLayout.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiTabsLayout/UiTabsLayout.tsx",["1533"],"// Relative Path: ./SettingsView.tsx\nimport React, { useEffect, useState } from 'react';\nimport styles from './UiTabsLayout.scss';\nimport { useUser } from '~/src/core/authentication/hooks/useUser';\nimport UiLoader from '../../components/UiLoader/view/UiLoader';\nimport { UiIcon } from '@webstack/components/UiIcon/UiIcon';\n\n// Remember to create a sibling SCSS file with the same name as this component\ninterface iTabsLayout {\n  views: any;\n  setViewCallback?: (e: any) => void;\n  variant?: string;\n  name: string;\n  defaultView?: string\n}\nconst UiTabsLayout: React.FC<iTabsLayout> = ({\n  views,\n  setViewCallback,\n  variant,\n  name,\n  defaultView\n}: iTabsLayout) => {\n  const [loaded, setLoaded] = useState(false);\n  const [view, setView] = useState<string>();\n  const handleView = (view: string) => {\n    setView(view);\n    setViewCallback && setViewCallback(view);\n  }\n  const user = useUser();\n\n  useEffect(() => {\n    if (views) {\n      const firstView = defaultView || Object.keys(views)[0];\n      setView(firstView);\n    }\n  }, []);\n  if (!view) return <UiLoader />;\n  return (\n    <>\n      <style jsx>{styles}</style>\n      <div className={`tabs ${variant ? ` tabs__${variant}` : ''}`}>\n        <div className={`tabs__content ${variant ? ` tabs__content__${variant}` : ''}`}>\n          <div className=\"tabs__tabs\" >\n            {Object.keys(views).map((viewI, i) => {\n              return <div\n                className={`tabs-layout__tab ${view == viewI ? 'tabs-layout__tab__active' : ''}`}\n                onClick={() => handleView(viewI)}\n                key={i}>\n                <div className='tabs-layout__tab--icon'>\n                  <UiIcon icon='c-race-lines' />\n                </div>\n                {viewI}\n                <div className='tabs-layout__tab--icon'>\n                  <UiIcon icon='c-race-lines' />\n                </div>\n              </div>\n            })}\n          </div>\n          <div className='tabs__view'>\n            <div className='tabs__view__title'>\n              {view}\n            </div>\n            {views[view]}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UiTabsLayout;","/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiViewLayout/controller/UiViewLayout.tsx",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/layouts/UiViewLayout/hooks/useViewState.ts",["1534"],"import React, { useEffect, useState } from \"react\";\n\nexport const useViewState = (views?: any, initialKey?: string | number) => {\n    const [history, setHistory] = useState<string[]>([]);\n    const [view, setViewState] = useState<React.ReactElement | string>();\n\n    const setView = (viewKey: number | string): void => {\n        const keyAsString = String(viewKey);\n        if (views && views[keyAsString]) {\n            setViewState(views[keyAsString]);\n            setHistory((prevHistory) => [...prevHistory, keyAsString]);\n        }\n    };\n\n    const goBack = () => {\n        setHistory((prevHistory) => {\n            if (prevHistory.length > 1) {\n                const newHistory = prevHistory.slice(0, -1);\n                const previousView = newHistory[newHistory.length - 1];\n                setViewState(views[previousView]);\n                return newHistory;\n            }\n            return prevHistory;\n        });\n    };\n\n    useEffect(() => {\n        if (initialKey && views?.[initialKey] && history[history.length - 1] !== initialKey)setView(initialKey);\n    }, [views, initialKey, ]);\n\n    return { view, setView, last: history[history.length - 1], goBack };\n};\n","/home/web/servers/frontend/Deepturn/app/src/webstack/models/input.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/models/location.ts",[],"/home/web/servers/frontend/Deepturn/app/src/webstack/types/icons.ts",[],"/home/web/servers/frontend/Deepturn/app/src/modules/admin/views/AdminCustomers/views/AdminCustomerList/hooks/useAdminCustomers.tsx",["1535"],"import { getService } from \"@webstack/common\";\nimport { useEffect, useState } from \"react\";\nimport IAdminService from \"~/src/core/services/AdminService/IAdminService\";\nimport { ICustomer } from \"~/src/models/ICustomer\";\nimport AdaptTableCell from \"@webstack/components/AdapTable/components/AdaptTableContent/components/AdaptTableCell/AdaptTableCell\";\nimport styles from './../AdminCustomerList.scss';\nimport { UiIcon } from \"@webstack/components/UiIcon/UiIcon\";\nimport canViewCustomer from \"../../../functions/canViewCustomer\";\nimport keyStringConverter from \"@webstack/helpers/keyStringConverter\";\nimport { getUserClearance, useUser } from \"~/src/core/authentication/hooks/useUser\";\nimport environment from \"~/src/core/environment\";\n\nconst useAdminCustomers = () => {\n  const adminService = getService<IAdminService>('IAdminService');\n  const [hasMore, setHasMore] = useState(false);\n  const user = useUser();  \n\n  const [customers, setCustomers] = useState<ICustomer[] | undefined>();\n  const refresh = () =>{\n    setCustomers(undefined)\n    // getCustomerList()\n  }\n  const getCustomerList = async () => {\n    let customerList = await adminService.listCustomers();\n    if (customerList?.object === 'list') {\n      setHasMore(customerList.has_more)\n      customerList = customerList.data;\n      const transformedCustomerList = customerList.map((customer: any) => {\n        if (!customer?.id) return;\n        const viewableCustomer = canViewCustomer(customer, user);\n        const notUser = customer.email !== user?.email;\n      \n        const extras = {\n          ...customer.metadata,\n          ...customer.invoice_settings,\n          description: customer.description,\n          discount: customer.discount,\n          currency: customer.currency,\n          invoice_prefix: customer.invoice_prefix,\n          next_invoice_sequence: customer.next_invoice_sequence,\n        };\n      \n        if (viewableCustomer) return {\n          customer: <AdaptTableCell cell='member' data={{\n            id: customer.id as string,  // Type assertion here\n            name: customer.name,\n            email: customer.email,\n          }} />,\n          id: customer.id,\n          balance: customer.balance,\n          created: <AdaptTableCell cell='date' data={customer.created} />,\n          default_source: <AdaptTableCell cell='check' data={Boolean(customer.default_source)} />,\n          merchant: <>\n            <style jsx>{styles}</style>\n            <div className={`d-flex ${notUser ? '' : \"user\"}`}>\n              <UiIcon icon={notUser ? `${customer?.metadata?.merchant?.name}-logo` : 'fa-star'} />\n            </div>\n          </>,\n          tax_exempt: <AdaptTableCell cell='check' data={Boolean(customer.tax_exempt === 'exempt')} />,\n          clearance: <AdaptTableCell cell='id' data={keyStringConverter(getUserClearance(Number(customer?.metadata?.user?.clearance))?.user.type, { textTransform: \"capitalize\" })} />,\n          extras: extras,\n          quote: customer.metadata && <AdaptTableCell cell='check' data={Boolean(Object.entries(customer.metadata).find((f: any) => String(f).includes(String(environment.merchant.mid))))} />,\n        };\n      });\n      \n      // Set the transformed customer list in state\n      setCustomers(transformedCustomerList);\n    }\n  };\n\n  useEffect(() => {\n    if (!customers) getCustomerList();\n  }, [refresh]);\n\n  return {\n    customers,\n    hasMore,\n    refresh,\n  };\n};\n\nexport default useAdminCustomers;\n",{"ruleId":"1536","severity":1,"message":"1537","line":186,"column":6,"nodeType":"1538","endLine":186,"endColumn":50,"suggestions":"1539"},{"ruleId":"1536","severity":1,"message":"1540","line":72,"column":6,"nodeType":"1538","endLine":72,"endColumn":25,"suggestions":"1541"},{"ruleId":"1536","severity":1,"message":"1542","line":72,"column":7,"nodeType":"1543","endLine":72,"endColumn":24},{"ruleId":"1536","severity":1,"message":"1544","line":24,"column":7,"nodeType":"1538","endLine":24,"endColumn":30,"suggestions":"1545"},{"ruleId":"1536","severity":1,"message":"1546","line":38,"column":6,"nodeType":"1538","endLine":38,"endColumn":8,"suggestions":"1547"},{"ruleId":"1536","severity":1,"message":"1548","line":18,"column":6,"nodeType":"1538","endLine":18,"endColumn":8,"suggestions":"1549"},{"ruleId":"1536","severity":1,"message":"1550","line":52,"column":6,"nodeType":"1538","endLine":52,"endColumn":8,"suggestions":"1551"},{"ruleId":"1536","severity":1,"message":"1552","line":64,"column":6,"nodeType":"1538","endLine":64,"endColumn":8,"suggestions":"1553"},{"ruleId":"1536","severity":1,"message":"1554","line":22,"column":8,"nodeType":"1538","endLine":22,"endColumn":19,"suggestions":"1555"},{"ruleId":"1536","severity":1,"message":"1556","line":122,"column":6,"nodeType":"1538","endLine":122,"endColumn":25,"suggestions":"1557"},{"ruleId":"1536","severity":1,"message":"1558","line":28,"column":9,"nodeType":"1559","endLine":40,"endColumn":6,"suggestions":"1560"},{"ruleId":"1536","severity":1,"message":"1561","line":40,"column":6,"nodeType":"1538","endLine":40,"endColumn":77,"suggestions":"1562"},{"ruleId":"1536","severity":1,"message":"1563","line":100,"column":8,"nodeType":"1538","endLine":100,"endColumn":28,"suggestions":"1564"},{"ruleId":"1536","severity":1,"message":"1565","line":36,"column":1,"nodeType":"1566","endLine":58,"endColumn":2},{"ruleId":"1536","severity":1,"message":"1567","line":31,"column":9,"nodeType":"1559","endLine":55,"endColumn":4},{"ruleId":"1536","severity":1,"message":"1568","line":67,"column":6,"nodeType":"1538","endLine":67,"endColumn":21,"suggestions":"1569"},{"ruleId":"1536","severity":1,"message":"1570","line":103,"column":6,"nodeType":"1538","endLine":103,"endColumn":35,"suggestions":"1571"},{"ruleId":"1536","severity":1,"message":"1572","line":156,"column":6,"nodeType":"1538","endLine":156,"endColumn":8,"suggestions":"1573"},{"ruleId":"1536","severity":1,"message":"1574","line":15,"column":9,"nodeType":"1559","endLine":19,"endColumn":4,"suggestions":"1575"},{"ruleId":"1536","severity":1,"message":"1576","line":73,"column":11,"nodeType":"1559","endLine":82,"endColumn":6,"suggestions":"1577"},{"ruleId":"1536","severity":1,"message":"1578","line":83,"column":11,"nodeType":"1559","endLine":86,"endColumn":6},{"ruleId":"1536","severity":1,"message":"1579","line":65,"column":8,"nodeType":"1538","endLine":65,"endColumn":10,"suggestions":"1580"},{"ruleId":"1536","severity":1,"message":"1581","line":51,"column":8,"nodeType":"1538","endLine":51,"endColumn":17,"suggestions":"1582"},{"ruleId":"1536","severity":1,"message":"1581","line":51,"column":8,"nodeType":"1538","endLine":51,"endColumn":17,"suggestions":"1583"},{"ruleId":"1536","severity":1,"message":"1584","line":11,"column":8,"nodeType":"1538","endLine":11,"endColumn":10,"suggestions":"1585"},{"ruleId":"1586","severity":1,"message":"1587","line":17,"column":25,"nodeType":"1588","endLine":22,"endColumn":27},{"ruleId":"1536","severity":1,"message":"1589","line":81,"column":6,"nodeType":"1538","endLine":81,"endColumn":15,"suggestions":"1590"},{"ruleId":"1536","severity":1,"message":"1591","line":54,"column":6,"nodeType":"1538","endLine":54,"endColumn":16,"suggestions":"1592"},{"ruleId":"1536","severity":1,"message":"1591","line":67,"column":6,"nodeType":"1538","endLine":67,"endColumn":20,"suggestions":"1593"},{"ruleId":"1536","severity":1,"message":"1581","line":32,"column":8,"nodeType":"1538","endLine":32,"endColumn":10,"suggestions":"1594"},{"ruleId":"1536","severity":1,"message":"1595","line":50,"column":9,"nodeType":"1559","endLine":53,"endColumn":4},{"ruleId":"1536","severity":1,"message":"1596","line":59,"column":6,"nodeType":"1538","endLine":59,"endColumn":22,"suggestions":"1597"},{"ruleId":"1536","severity":1,"message":"1598","line":154,"column":6,"nodeType":"1538","endLine":154,"endColumn":8,"suggestions":"1599"},{"ruleId":"1536","severity":1,"message":"1600","line":23,"column":4,"nodeType":"1538","endLine":23,"endColumn":6,"suggestions":"1601"},{"ruleId":"1536","severity":1,"message":"1602","line":43,"column":6,"nodeType":"1538","endLine":43,"endColumn":8,"suggestions":"1603"},{"ruleId":"1586","severity":1,"message":"1587","line":117,"column":11,"nodeType":"1588","endLine":117,"endColumn":84},{"ruleId":"1604","severity":1,"message":"1605","line":117,"column":11,"nodeType":"1588","endLine":117,"endColumn":84},{"ruleId":"1536","severity":1,"message":"1606","line":156,"column":6,"nodeType":"1538","endLine":156,"endColumn":15,"suggestions":"1607"},{"ruleId":"1536","severity":1,"message":"1608","line":74,"column":6,"nodeType":"1538","endLine":74,"endColumn":20,"suggestions":"1609"},{"ruleId":"1536","severity":1,"message":"1610","line":75,"column":8,"nodeType":"1538","endLine":75,"endColumn":19,"suggestions":"1611"},{"ruleId":"1536","severity":1,"message":"1612","line":84,"column":8,"nodeType":"1538","endLine":84,"endColumn":36,"suggestions":"1613"},{"ruleId":"1536","severity":1,"message":"1614","line":74,"column":8,"nodeType":"1538","endLine":74,"endColumn":27,"suggestions":"1615"},{"ruleId":"1536","severity":1,"message":"1616","line":27,"column":8,"nodeType":"1538","endLine":27,"endColumn":14,"suggestions":"1617"},{"ruleId":"1536","severity":1,"message":"1618","line":94,"column":6,"nodeType":"1538","endLine":94,"endColumn":23,"suggestions":"1619"},{"ruleId":"1536","severity":1,"message":"1620","line":115,"column":6,"nodeType":"1538","endLine":115,"endColumn":19,"suggestions":"1621"},{"ruleId":"1536","severity":1,"message":"1622","line":127,"column":6,"nodeType":"1538","endLine":127,"endColumn":24,"suggestions":"1623"},{"ruleId":"1536","severity":1,"message":"1624","line":115,"column":6,"nodeType":"1538","endLine":115,"endColumn":31,"suggestions":"1625"},{"ruleId":"1536","severity":1,"message":"1624","line":126,"column":6,"nodeType":"1538","endLine":126,"endColumn":43,"suggestions":"1626"},{"ruleId":"1536","severity":1,"message":"1627","line":33,"column":73,"nodeType":"1538","endLine":33,"endColumn":83,"suggestions":"1628"},{"ruleId":"1536","severity":1,"message":"1629","line":39,"column":7,"nodeType":"1538","endLine":39,"endColumn":9,"suggestions":"1630"},{"ruleId":"1536","severity":1,"message":"1631","line":118,"column":6,"nodeType":"1538","endLine":118,"endColumn":17,"suggestions":"1632"},{"ruleId":"1536","severity":1,"message":"1633","line":121,"column":6,"nodeType":"1538","endLine":121,"endColumn":32,"suggestions":"1634"},{"ruleId":"1536","severity":1,"message":"1633","line":99,"column":8,"nodeType":"1538","endLine":99,"endColumn":15,"suggestions":"1635"},{"ruleId":"1536","severity":1,"message":"1636","line":101,"column":8,"nodeType":"1538","endLine":101,"endColumn":15,"suggestions":"1637"},{"ruleId":"1536","severity":1,"message":"1638","line":108,"column":8,"nodeType":"1538","endLine":108,"endColumn":22,"suggestions":"1639"},{"ruleId":"1640","severity":1,"message":"1641","line":9,"column":11,"nodeType":"1588","endLine":9,"endColumn":63},{"ruleId":"1640","severity":1,"message":"1641","line":10,"column":11,"nodeType":"1588","endLine":10,"endColumn":62},{"ruleId":"1640","severity":1,"message":"1641","line":13,"column":11,"nodeType":"1588","endLine":13,"endColumn":66},{"ruleId":"1536","severity":1,"message":"1642","line":75,"column":6,"nodeType":"1538","endLine":75,"endColumn":70,"suggestions":"1643"},{"ruleId":"1536","severity":1,"message":"1644","line":85,"column":6,"nodeType":"1538","endLine":85,"endColumn":28,"suggestions":"1645"},{"ruleId":"1536","severity":1,"message":"1646","line":118,"column":6,"nodeType":"1538","endLine":118,"endColumn":18,"suggestions":"1647"},{"ruleId":"1536","severity":1,"message":"1648","line":32,"column":8,"nodeType":"1538","endLine":32,"endColumn":18,"suggestions":"1649"},{"ruleId":"1536","severity":1,"message":"1650","line":115,"column":6,"nodeType":"1538","endLine":115,"endColumn":28,"suggestions":"1651"},{"ruleId":"1536","severity":1,"message":"1652","line":91,"column":6,"nodeType":"1538","endLine":107,"endColumn":4,"suggestions":"1653"},{"ruleId":"1536","severity":1,"message":"1654","line":81,"column":8,"nodeType":"1538","endLine":81,"endColumn":31,"suggestions":"1655"},{"ruleId":"1536","severity":1,"message":"1656","line":43,"column":6,"nodeType":"1538","endLine":43,"endColumn":28,"suggestions":"1657"},{"ruleId":"1536","severity":1,"message":"1658","line":43,"column":7,"nodeType":"1659","endLine":43,"endColumn":27},{"ruleId":"1536","severity":1,"message":"1660","line":77,"column":8,"nodeType":"1538","endLine":77,"endColumn":14,"suggestions":"1661"},{"ruleId":"1536","severity":1,"message":"1662","line":37,"column":29,"nodeType":"1663","endLine":37,"endColumn":40},{"ruleId":"1536","severity":1,"message":"1664","line":76,"column":4,"nodeType":"1538","endLine":76,"endColumn":32,"suggestions":"1665"},{"ruleId":"1586","severity":1,"message":"1587","line":51,"column":21,"nodeType":"1588","endLine":53,"endColumn":23},{"ruleId":"1536","severity":1,"message":"1666","line":95,"column":4,"nodeType":"1538","endLine":95,"endColumn":6,"suggestions":"1667"},{"ruleId":"1536","severity":1,"message":"1662","line":55,"column":24,"nodeType":"1663","endLine":55,"endColumn":35},{"ruleId":"1536","severity":1,"message":"1668","line":95,"column":6,"nodeType":"1538","endLine":95,"endColumn":13,"suggestions":"1669"},{"ruleId":"1536","severity":1,"message":"1670","line":103,"column":6,"nodeType":"1538","endLine":103,"endColumn":8,"suggestions":"1671"},{"ruleId":"1536","severity":1,"message":"1672","line":52,"column":4,"nodeType":"1538","endLine":52,"endColumn":20,"suggestions":"1673"},{"ruleId":"1536","severity":1,"message":"1674","line":60,"column":6,"nodeType":"1538","endLine":60,"endColumn":50,"suggestions":"1675"},{"ruleId":"1536","severity":1,"message":"1676","line":103,"column":6,"nodeType":"1538","endLine":103,"endColumn":26,"suggestions":"1677"},{"ruleId":"1536","severity":1,"message":"1678","line":48,"column":6,"nodeType":"1538","endLine":48,"endColumn":19,"suggestions":"1679"},{"ruleId":"1536","severity":1,"message":"1680","line":128,"column":6,"nodeType":"1538","endLine":128,"endColumn":19,"suggestions":"1681"},{"ruleId":"1536","severity":1,"message":"1682","line":90,"column":6,"nodeType":"1538","endLine":90,"endColumn":41,"suggestions":"1683"},{"ruleId":"1536","severity":1,"message":"1684","line":107,"column":6,"nodeType":"1538","endLine":107,"endColumn":19,"suggestions":"1685"},{"ruleId":"1536","severity":1,"message":"1686","line":160,"column":8,"nodeType":"1538","endLine":160,"endColumn":100,"suggestions":"1687"},{"ruleId":"1536","severity":1,"message":"1658","line":168,"column":9,"nodeType":"1688","endLine":168,"endColumn":32},{"ruleId":"1536","severity":1,"message":"1689","line":7,"column":11,"nodeType":"1559","endLine":15,"endColumn":6,"suggestions":"1690"},{"ruleId":"1536","severity":1,"message":"1691","line":16,"column":35,"nodeType":"1692","endLine":19,"endColumn":21},{"ruleId":"1536","severity":1,"message":"1693","line":35,"column":6,"nodeType":"1538","endLine":35,"endColumn":36,"suggestions":"1694"},{"ruleId":"1536","severity":1,"message":"1693","line":88,"column":6,"nodeType":"1538","endLine":88,"endColumn":52,"suggestions":"1695"},{"ruleId":"1536","severity":1,"message":"1693","line":110,"column":6,"nodeType":"1538","endLine":110,"endColumn":67,"suggestions":"1696"},{"ruleId":"1586","severity":1,"message":"1587","line":162,"column":21,"nodeType":"1588","endLine":162,"endColumn":126},{"ruleId":"1536","severity":1,"message":"1697","line":185,"column":6,"nodeType":"1538","endLine":200,"endColumn":4,"suggestions":"1698"},{"ruleId":"1536","severity":1,"message":"1699","line":19,"column":6,"nodeType":"1538","endLine":19,"endColumn":12,"suggestions":"1700"},{"ruleId":"1536","severity":1,"message":"1701","line":41,"column":5,"nodeType":"1538","endLine":41,"endColumn":21,"suggestions":"1702"},{"ruleId":"1536","severity":1,"message":"1703","line":50,"column":6,"nodeType":"1538","endLine":50,"endColumn":22,"suggestions":"1704"},{"ruleId":"1536","severity":1,"message":"1705","line":101,"column":6,"nodeType":"1538","endLine":101,"endColumn":61,"suggestions":"1706"},{"ruleId":"1536","severity":1,"message":"1662","line":28,"column":34,"nodeType":"1663","endLine":28,"endColumn":45},{"ruleId":"1536","severity":1,"message":"1707","line":18,"column":21,"nodeType":"1663","endLine":18,"endColumn":28},{"ruleId":"1536","severity":1,"message":"1708","line":98,"column":6,"nodeType":"1538","endLine":98,"endColumn":8,"suggestions":"1709"},{"ruleId":"1536","severity":1,"message":"1710","line":116,"column":18,"nodeType":"1663","endLine":116,"endColumn":25},{"ruleId":"1536","severity":1,"message":"1711","line":119,"column":6,"nodeType":"1538","endLine":119,"endColumn":28,"suggestions":"1712"},{"ruleId":"1536","severity":1,"message":"1713","line":93,"column":6,"nodeType":"1538","endLine":93,"endColumn":23,"suggestions":"1714"},{"ruleId":"1536","severity":1,"message":"1715","line":97,"column":6,"nodeType":"1538","endLine":97,"endColumn":27,"suggestions":"1716"},{"ruleId":"1536","severity":1,"message":"1717","line":32,"column":6,"nodeType":"1538","endLine":32,"endColumn":30,"suggestions":"1718"},{"ruleId":"1536","severity":1,"message":"1719","line":96,"column":8,"nodeType":"1538","endLine":96,"endColumn":42,"suggestions":"1720"},{"ruleId":"1536","severity":1,"message":"1721","line":21,"column":11,"nodeType":"1559","endLine":34,"endColumn":6,"suggestions":"1722"},{"ruleId":"1536","severity":1,"message":"1723","line":11,"column":11,"nodeType":"1559","endLine":20,"endColumn":6,"suggestions":"1724"},{"ruleId":"1536","severity":1,"message":"1725","line":53,"column":6,"nodeType":"1538","endLine":53,"endColumn":69,"suggestions":"1726"},{"ruleId":"1586","severity":1,"message":"1587","line":60,"column":11,"nodeType":"1588","endLine":60,"endColumn":93},{"ruleId":"1536","severity":1,"message":"1727","line":74,"column":23,"nodeType":"1538","endLine":74,"endColumn":37,"suggestions":"1728"},{"ruleId":"1536","severity":1,"message":"1729","line":19,"column":6,"nodeType":"1538","endLine":19,"endColumn":16,"suggestions":"1730"},{"ruleId":"1536","severity":1,"message":"1731","line":16,"column":5,"nodeType":"1538","endLine":16,"endColumn":36,"suggestions":"1732"},{"ruleId":"1536","severity":1,"message":"1733","line":82,"column":8,"nodeType":"1538","endLine":82,"endColumn":15,"suggestions":"1734"},{"ruleId":"1536","severity":1,"message":"1735","line":77,"column":6,"nodeType":"1538","endLine":77,"endColumn":59,"suggestions":"1736"},{"ruleId":"1536","severity":1,"message":"1737","line":36,"column":6,"nodeType":"1538","endLine":36,"endColumn":8,"suggestions":"1738"},{"ruleId":"1536","severity":1,"message":"1739","line":29,"column":8,"nodeType":"1538","endLine":29,"endColumn":29,"suggestions":"1740"},{"ruleId":"1536","severity":1,"message":"1741","line":73,"column":6,"nodeType":"1538","endLine":73,"endColumn":15,"suggestions":"1742"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addLocation', 'addUser', 'profile?.id', 'profile?.lngLat', 'requestLocation', and 'require'. Either include them or remove the dependency array.","ArrayExpression",["1743"],"React Hook useCallback has missing dependencies: 'clearanceRoutes', 'level', 'router', 'selectedUser', and 'user'. Either include them or remove the dependency array.",["1744"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect has a missing dependency: 'fetchClientSecret'. Either include it or remove the dependency array.",["1745"],"React Hook useEffect has a missing dependency: 'styleMerchant'. Either include it or remove the dependency array.",["1746"],"React Hook useEffect has a missing dependency: 'router.query'. Either include it or remove the dependency array.",["1747"],"React Hook useEffect has missing dependencies: 'initialViews', 'level', and 'views'. Either include them or remove the dependency array.",["1748"],"React Hook useEffect has missing dependencies: 'accounts', 'listAccounts', and 'view'. Either include them or remove the dependency array.",["1749"],"React Hook useEffect has missing dependencies: 'account' and 'getAccount'. Either include them or remove the dependency array.",["1750"],"React Hook useEffect has missing dependencies: 'customer' and 'formDefaultCustomerAdd'. Either include them or remove the dependency array.",["1751"],"The 'hasFormChanged' function makes the dependencies of useEffect Hook (at line 42) change on every render. To fix this, wrap the definition of 'hasFormChanged' in its own useCallback() Hook.","VariableDeclarator",["1752"],"React Hook useCallback has a missing dependency: 'initForms'. Either include it or remove the dependency array.",["1753"],"React Hook useEffect has missing dependencies: 'documents' and 'setLoader'. Either include them or remove the dependency array.",["1754"],"The 'getProducts' function makes the dependencies of useEffect Hook (at line 60) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'getProducts' in its own useCallback() Hook.","FunctionDeclaration","The 'handleFields' function makes the dependencies of useEffect Hook (at line 56) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleFields' in its own useCallback() Hook.","React Hook useEffect has missing dependencies: 'getData' and 'systemData'. Either include them or remove the dependency array.",["1755"],"React Hook useEffect has missing dependencies: 'newCustomerEmail', 'query', and 'view'. Either include them or remove the dependency array.",["1756"],"React Hook useEffect has missing dependencies: 'fields' and 'hasPassword'. Either include them or remove the dependency array. You can also do a functional update 'setFields(f => ...)' if you only need 'fields' in the 'setFields' call.",["1757"],"The 'handleClick' function makes the dependencies of useEffect Hook (at line 21) change on every render. To fix this, wrap the definition of 'handleClick' in its own useCallback() Hook.",["1758"],"The 'handleUser' function makes the dependencies of useEffect Hook (at line 90) change on every render. To fix this, wrap the definition of 'handleUser' in its own useCallback() Hook.",["1759"],"The 'handleCart' function makes the dependencies of useEffect Hook (at line 90) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleCart' in its own useCallback() Hook.","React Hook useEffect has a missing dependency: 'prepareSession'. Either include it or remove the dependency array.",["1760"],"React Hook useEffect has missing dependencies: '_cart' and 'cart'. Either include them or remove the dependency array.",["1761"],["1762"],"React Hook useEffect has a missing dependency: 'image'. Either include it or remove the dependency array.",["1763"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["1764"],"React Hook useEffect has a missing dependency: 'loadProducts'. Either include it or remove the dependency array.",["1765"],["1766"],["1767"],"The 'handleUser' function makes the dependencies of useEffect Hook (at line 56) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleUser' in its own useCallback() Hook.","React Hook useEffect has a missing dependency: 'loadTransaction'. Either include it or remove the dependency array.",["1768"],"React Hook useEffect has missing dependencies: 'getHueList' and 'hueData'. Either include them or remove the dependency array.",["1769"],"React Hook useEffect has missing dependencies: 'mid' and 'view'. Either include them or remove the dependency array.",["1770"],"React Hook useEffect has a missing dependency: 'handleLoad'. Either include it or remove the dependency array.",["1771"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'docs' and 'getDocuments'. Either include them or remove the dependency array.",["1772"],"React Hook useEffect has a missing dependency: 'initUserMethods'. Either include it or remove the dependency array.",["1773"],"React Hook useCallback has missing dependencies: 'onSuccess', 'setLoader', 'setNotification', 'shippable', 'stripe', 'success_url', 'user.address', and 'user?.name'. Either include them or remove the dependency array. If 'onSuccess' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1774"],"React Hook useEffect has missing dependencies: 'hasPayElem' and 'options'. Either include them or remove the dependency array.",["1775"],"React Hook useEffect has missing dependencies: 'handleMethodClasses', 'response', and 'setNotification'. Either include them or remove the dependency array.",["1776"],"React Hook useEffect has a missing dependency: 'findDefaultMethod'. Either include it or remove the dependency array.",["1777"],"React Hook useEffect has missing dependencies: 'fields', 'initialFields', and 'onUser'. Either include them or remove the dependency array.",["1778"],"React Hook useEffect has a missing dependency: 'fields'. Either include it or remove the dependency array.",["1779"],"React Hook useEffect has a missing dependency: 'getWidth'. Either include it or remove the dependency array.",["1780"],"React Hook useEffect has a missing dependency: 'toggled'. Either include it or remove the dependency array.",["1781"],["1782"],"React Hook useEffect has a missing dependency: 'view'. Either include it or remove the dependency array.",["1783"],"React Hook useEffect has missing dependencies: 'credentials?.username', 'setLoader', and 'user?.metadata?.user?.social'. Either include them or remove the dependency array.",["1784"],"React Hook useEffect has a missing dependency: 'initView'. Either include it or remove the dependency array.",["1785"],"React Hook useEffect has a missing dependency: 'handleVerify'. Either include it or remove the dependency array.",["1786"],["1787"],"React Hook useEffect has missing dependencies: 'decryptToken' and 'tokenData'. Either include them or remove the dependency array.",["1788"],"React Hook useEffect has missing dependencies: 'cart', 'getProducts', 'isTokenComplete', and 'tokenData?.items'. Either include them or remove the dependency array.",["1789"],"@next/next/no-css-tags","Do not include stylesheets manually. See: https://nextjs.org/docs/messages/no-css-tags","React Hook useCallback has a missing dependency: 'loading'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'loading', you can also switch to useReducer instead of useState and read 'loading' in the reducer.",["1790"],"React Hook useEffect has missing dependencies: 'adaptStyling', 'loading', and 'variant'. Either include them or remove the dependency array. Mutable values like 'tdsRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1791"],"React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["1792"],"React Hook useEffect has missing dependencies: 'max', 'min', 'offsetY', and 'width'. Either include them or remove the dependency array.",["1793"],"React Hook useEffect has a missing dependency: 'handleVisible'. Either include it or remove the dependency array.",["1794"],"React Hook useEffect has a missing dependency: 'handleFocus'. Either include it or remove the dependency array.",["1795"],"React Hook useEffect has a missing dependency: 'elClassStylesHandler'. Either include it or remove the dependency array. Mutable values like 'elRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1796"],"React Hook useEffect has missing dependencies: 'background.type', 'classHandler', and 'window'. Either include them or remove the dependency array.",["1797"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has a missing dependency: 'generateCalendarDays'. Either include it or remove the dependency array.",["1798"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","React Hook useEffect has a missing dependency: 'color'. Either include it or remove the dependency array.",["1799"],"React Hook useEffect has a missing dependency: 'percentage'. Either include it or remove the dependency array. If 'setLocalPercentage' needs the current value of 'percentage', you can also switch to useReducer instead of useState and read 'percentage' in the reducer.",["1800"],"React Hook useEffect has a missing dependency: 'handleTitleSize'. Either include it or remove the dependency array.",["1801"],"React Hook useEffect has missing dependencies: 'handleHeaderState', 'route', 'router.asPath', and 'setContext'. Either include them or remove the dependency array.",["1802"],"React Hook useEffect has a missing dependency: 'set'. Either include it or remove the dependency array. Mutable values like 'hdRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1803"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array. Mutable values like 'childRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1804"],"React Hook useEffect has a missing dependency: 'handleBodyScroll'. Either include it or remove the dependency array.",["1805"],"React Hook useMemo has a missing dependency: 'amount'. Either include it or remove the dependency array.",["1806"],"React Hook useEffect has missing dependencies: 'camera.position', 'size.x', 'size.y', and 'size.z'. Either include them or remove the dependency array.",["1807"],"React Hook useEffect has missing dependencies: 'icon.bevel?.bevelEnabled', 'icon.bevel?.bevelOffset', 'icon.bevel?.bevelSegments', 'icon.bevel?.bevelSize', 'icon.bevel?.bevelThickness', 'icon.icon', 'icon.opacity', 'icon.roughness', 'icon.size.z', and 'icon.texture'. Either include them or remove the dependency array.",["1808"],"React Hook useEffect has missing dependencies: 'camera.position', 'size?.x', 'size?.y', and 'size?.z'. Either include them or remove the dependency array.",["1809"],"React Hook useEffect has missing dependencies: 'hideHover', 'loader.active', 'mapOptions', 'mapPath', 'setLoader', 'stopLoader', 'userVesselConfig', 'vesselActions', 'vessels', and 'width'. Either include them or remove the dependency array. Mutable values like 'mapContainerRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1810"],"BinaryExpression","The 'handleSearch' function makes the dependencies of useEffect Hook (at line 17) change on every render. To fix this, wrap the definition of 'handleSearch' in its own useCallback() Hook.",["1811"],"Assignments to the 'placeholderInterval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useCallback has a missing dependency: 'vesselDetails'. Either include it or remove the dependency array.",["1812"],["1813"],["1814"],"React Hook useEffect has missing dependencies: 'animation', 'cameraPos', 'disableBelowTerrain', 'flyTo', 'isAnimating', 'lights.ambient', 'lights.directional', 'stopAnimation', 'terrainOverlay.img', 'terrainOverlay.opacity', and 'terrainOverlay.repeat'. Either include them or remove the dependency array.",["1815"],"React Hook useEffect has a missing dependency: 'merchantName'. Either include it or remove the dependency array.",["1816"],"React Hook useEffect has a missing dependency: 'show'. Either include it or remove the dependency array.",["1817"],"React Hook useEffect has missing dependencies: 'id' and 'jsx'. Either include them or remove the dependency array. Mutable values like 'jsxRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1818"],"React Hook useEffect has missing dependencies: 'error', 'overlayState.active', and 'type'. Either include them or remove the dependency array.",["1819"],"The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'initAutocomplete'. Either include it or remove the dependency array.",["1820"],"The ref value 'thumbRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'thumbRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'pos'. Either include it or remove the dependency array.",["1821"],"React Hook useEffect has a missing dependency: 'title_'. Either include it or remove the dependency array.",["1822"],"React Hook useEffect has missing dependencies: 'isMobileNavOpen' and 'onToggle'. Either include them or remove the dependency array. If 'onToggle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1823"],"React Hook useEffect has an unnecessary dependency: 'togRef.current'. Either exclude it or remove the dependency array. Mutable values like 'togRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1824"],"React Hook useEffect has a missing dependency: 'handleComplete'. Either include it or remove the dependency array.",["1825"],"The 'setField' function makes the dependencies of useEffect Hook (at line 37) change on every render. To fix this, wrap the definition of 'setField' in its own useCallback() Hook.",["1826"],"The 'onChange' function makes the dependencies of useEffect Hook (at line 21) change on every render. To fix this, wrap the definition of 'onChange' in its own useCallback() Hook.",["1827"],"React Hook useEffect has a missing dependency: 'rotate'. Either include it or remove the dependency array. Mutable values like 'imgRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1828"],"React Hook useEffect has an unnecessary dependency: 'ModalContext'. Either exclude it or remove the dependency array. Outer scope values like 'ModalContext' aren't valid dependencies because mutating them doesn't re-render the component.",["1829"],"React Hook useEffect has missing dependencies: 'pos.x' and 'pos.y'. Either include them or remove the dependency array.",["1830"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1831"],"React Hook useEffect has missing dependencies: 'cls', 'extras', 'maxWidths', 'minWidths', 'standalones', 'type', 'variant', and 'width'. Either include them or remove the dependency array.",["1832"],"React Hook useCallback has missing dependencies: 'closeModal' and 'openModal'. Either include them or remove the dependency array.",["1833"],"React Hook useEffect has missing dependencies: 'defaultView' and 'views'. Either include them or remove the dependency array.",["1834"],"React Hook useEffect has missing dependencies: 'history' and 'setView'. Either include them or remove the dependency array.",["1835"],"React Hook useEffect has missing dependencies: 'customers' and 'getCustomerList'. Either include them or remove the dependency array.",["1836"],{"desc":"1837","fix":"1838"},{"desc":"1839","fix":"1840"},{"desc":"1841","fix":"1842"},{"desc":"1843","fix":"1844"},{"desc":"1845","fix":"1846"},{"desc":"1847","fix":"1848"},{"desc":"1849","fix":"1850"},{"desc":"1851","fix":"1852"},{"desc":"1853","fix":"1854"},{"desc":"1855","fix":"1856"},{"desc":"1857","fix":"1858"},{"desc":"1859","fix":"1860"},{"desc":"1861","fix":"1862"},{"desc":"1863","fix":"1864"},{"desc":"1865","fix":"1866"},{"desc":"1867","fix":"1868"},{"desc":"1869","fix":"1870"},{"desc":"1871","fix":"1872"},{"desc":"1873","fix":"1874"},{"desc":"1873","fix":"1875"},{"desc":"1876","fix":"1877"},{"desc":"1878","fix":"1879"},{"desc":"1880","fix":"1881"},{"desc":"1882","fix":"1883"},{"desc":"1884","fix":"1885"},{"desc":"1886","fix":"1887"},{"desc":"1888","fix":"1889"},{"desc":"1890","fix":"1891"},{"desc":"1892","fix":"1893"},{"desc":"1894","fix":"1895"},{"desc":"1896","fix":"1897"},{"desc":"1898","fix":"1899"},{"desc":"1900","fix":"1901"},{"desc":"1902","fix":"1903"},{"desc":"1904","fix":"1905"},{"desc":"1906","fix":"1907"},{"desc":"1908","fix":"1909"},{"desc":"1910","fix":"1911"},{"desc":"1912","fix":"1913"},{"desc":"1914","fix":"1915"},{"desc":"1916","fix":"1917"},{"desc":"1918","fix":"1919"},{"desc":"1920","fix":"1921"},{"desc":"1922","fix":"1923"},{"desc":"1924","fix":"1925"},{"desc":"1926","fix":"1927"},{"desc":"1928","fix":"1929"},{"desc":"1930","fix":"1931"},{"desc":"1932","fix":"1933"},{"desc":"1934","fix":"1935"},{"desc":"1936","fix":"1937"},{"desc":"1938","fix":"1939"},{"desc":"1940","fix":"1941"},{"desc":"1942","fix":"1943"},{"desc":"1944","fix":"1945"},{"desc":"1946","fix":"1947"},{"desc":"1948","fix":"1949"},{"desc":"1950","fix":"1951"},{"desc":"1952","fix":"1953"},{"desc":"1954","fix":"1955"},{"desc":"1956","fix":"1957"},{"desc":"1958","fix":"1959"},{"desc":"1960","fix":"1961"},{"desc":"1962","fix":"1963"},{"desc":"1964","fix":"1965"},{"desc":"1966","fix":"1967"},{"desc":"1968","fix":"1969"},{"desc":"1970","fix":"1971"},{"desc":"1972","fix":"1973"},{"desc":"1974","fix":"1975"},{"desc":"1976","fix":"1977"},{"desc":"1978","fix":"1979"},{"desc":"1980","fix":"1981"},{"desc":"1982","fix":"1983"},{"desc":"1984","fix":"1985"},{"desc":"1986","fix":"1987"},{"desc":"1988","fix":"1989"},{"desc":"1990","fix":"1991"},{"desc":"1992","fix":"1993"},{"desc":"1994","fix":"1995"},{"desc":"1996","fix":"1997"},{"desc":"1998","fix":"1999"},{"desc":"2000","fix":"2001"},{"desc":"2002","fix":"2003"},{"desc":"2004","fix":"2005"},{"desc":"2006","fix":"2007"},{"desc":"2008","fix":"2009"},{"desc":"2010","fix":"2011"},{"desc":"2012","fix":"2013"},{"desc":"2014","fix":"2015"},{"desc":"2016","fix":"2017"},{"desc":"2018","fix":"2019"},{"desc":"2020","fix":"2021"},{"desc":"2022","fix":"2023"},"Update the dependencies array to be: [addLocation, addUser, isModalOpen, permissionDenied, profile?.id, profile?.lngLat, requestLocation, require, requirement]",{"range":"2024","text":"2025"},"Update the dependencies array to be: [clearanceRoutes, level, router, selectedUser, user]",{"range":"2026","text":"2027"},"Update the dependencies array to be: [user, setClientSecret, fetchClientSecret]",{"range":"2028","text":"2029"},"Update the dependencies array to be: [styleMerchant]",{"range":"2030","text":"2031"},"Update the dependencies array to be: [router.query]",{"range":"2032","text":"2033"},"Update the dependencies array to be: [initialViews, level, views]",{"range":"2034","text":"2035"},"Update the dependencies array to be: [accounts, listAccounts, view]",{"range":"2036","text":"2037"},"Update the dependencies array to be: [account, accountId, getAccount]",{"range":"2038","text":"2039"},"Update the dependencies array to be: [customer, formDefaultCustomerAdd, handleAddCustomer]",{"range":"2040","text":"2041"},"Wrap the definition of 'hasFormChanged' in its own useCallback() Hook.",{"range":"2042","text":"2043"},"Update the dependencies array to be: [customer_id, customer, initialCustomer, adminService, initForms, setNotification]",{"range":"2044","text":"2045"},"Update the dependencies array to be: [docs, docService, documents, setLoader]",{"range":"2046","text":"2047"},"Update the dependencies array to be: [getData, setSystemData, systemData]",{"range":"2048","text":"2049"},"Update the dependencies array to be: [handleSignup, handleSignIn, query, view, newCustomerEmail]",{"range":"2050","text":"2051"},"Update the dependencies array to be: [fields, hasPassword]",{"range":"2052","text":"2053"},"Wrap the definition of 'handleClick' in its own useCallback() Hook.",{"range":"2054","text":"2055"},"Wrap the definition of 'handleUser' in its own useCallback() Hook.",{"range":"2056","text":"2057"},"Update the dependencies array to be: [prepareSession]",{"range":"2058","text":"2059"},"Update the dependencies array to be: [_cart, cart, setCart]",{"range":"2060","text":"2061"},{"range":"2062","text":"2061"},"Update the dependencies array to be: [image]",{"range":"2063","text":"2064"},"Update the dependencies array to be: [fetchProducts, filters]",{"range":"2065","text":"2066"},"Update the dependencies array to be: [loadProducts, products]",{"range":"2067","text":"2068"},"Update the dependencies array to be: [handleScroll, loadProducts]",{"range":"2069","text":"2070"},"Update the dependencies array to be: [_cart, cart]",{"range":"2071","text":"2072"},"Update the dependencies array to be: [loadTransaction, setTransaction]",{"range":"2073","text":"2074"},"Update the dependencies array to be: [getHueList, hueData]",{"range":"2075","text":"2076"},"Update the dependencies array to be: [mid, view]",{"range":"2077","text":"2078"},"Update the dependencies array to be: [handleLoad]",{"range":"2079","text":"2080"},"Update the dependencies array to be: [docs, getDocuments, setDocs]",{"range":"2081","text":"2082"},"Update the dependencies array to be: [initUserMethods, selectedUser]",{"range":"2083","text":"2084"},"Update the dependencies array to be: [elements, onSuccess, setLoader, setNotification, shippable, stripe, success_url, user.address, user?.name]",{"range":"2085","text":"2086"},"Update the dependencies array to be: [stripe, elements, onSubmit, hasPayElem, options]",{"range":"2087","text":"2088"},"Update the dependencies array to be: [selected, methods, response, handleMethodClasses, setNotification]",{"range":"2089","text":"2090"},"Update the dependencies array to be: [findDefaultMethod, user]",{"range":"2091","text":"2092"},"Update the dependencies array to be: [user, setFields, fields, initialFields, onUser]",{"range":"2093","text":"2094"},"Update the dependencies array to be: [fieldErrors, fields]",{"range":"2095","text":"2096"},"Update the dependencies array to be: [getWidth, windowSize.width]",{"range":"2097","text":"2098"},"Update the dependencies array to be: [setToggled, isModalOpen, toggled]",{"range":"2099","text":"2100"},"Update the dependencies array to be: [routes, setCurrentRoutes, cartTotal, toggled]",{"range":"2101","text":"2102"},"Update the dependencies array to be: [platform, view]",{"range":"2103","text":"2104"},"Update the dependencies array to be: [credentials?.username, setLoader, user?.metadata?.user?.social]",{"range":"2105","text":"2106"},"Update the dependencies array to be: [initView, intLayout]",{"range":"2107","text":"2108"},"Update the dependencies array to be: [state.status, onSuccess, handleVerify]",{"range":"2109","text":"2110"},"Update the dependencies array to be: [handleVerify, token]",{"range":"2111","text":"2112"},"Update the dependencies array to be: [decryptToken, token, tokenData]",{"range":"2113","text":"2114"},"Update the dependencies array to be: [cart, getProducts, isTokenComplete, setTokenData, tokenData?.items]",{"range":"2115","text":"2116"},"Update the dependencies array to be: [status, cellWidth, data, options?.index, options.cellHeight, options?.position, rowClickable, width, variant, loading]",{"range":"2117","text":"2118"},"Update the dependencies array to be: [adaptStyling, data, loading, variant]",{"range":"2119","text":"2120"},"Update the dependencies array to be: [handleResize, isResizing]",{"range":"2121","text":"2122"},"Update the dependencies array to be: [max, min, offsetY, scrollTo, width]",{"range":"2123","text":"2124"},"Update the dependencies array to be: [data, handleVisible, limit, options]",{"range":"2125","text":"2126"},"Update the dependencies array to be: [width, gap, gapX, gapY, margin, padding, xs, sm, md, lg, xl, ref, focus, reverse, backgroundColor, handleFocus]",{"range":"2127","text":"2128"},"Update the dependencies array to be: [width, elClassStylesHandler]",{"range":"2129","text":"2130"},"Update the dependencies array to be: [background.type, classHandler, window]",{"range":"2131","text":"2132"},"Update the dependencies array to be: [generateCalendarDays, mmYY]",{"range":"2133","text":"2134"},"Update the dependencies array to be: [hex, setColor, handleInput, color]",{"range":"2135","text":"2136"},"Update the dependencies array to be: [percentage]",{"range":"2137","text":"2138"},"Update the dependencies array to be: [handleTitleSize, width]",{"range":"2139","text":"2140"},"Update the dependencies array to be: [handleHeaderState, route, router.asPath, setContext]",{"range":"2141","text":"2142"},"Update the dependencies array to be: [set]",{"range":"2143","text":"2144"},"Update the dependencies array to be: [refreshInterval, loading, error]",{"range":"2145","text":"2146"},"Update the dependencies array to be: [handleBodyScroll, handleNotification]",{"range":"2147","text":"2148"},"Update the dependencies array to be: [amount, size, width]",{"range":"2149","text":"2150"},"Update the dependencies array to be: [camera.position, icon, scene, size.x, size.y, size.z]",{"range":"2151","text":"2152"},"Update the dependencies array to be: [icon.metalness, scene, icon.color, icon.roughness, icon.opacity, icon.icon, icon.size.z, icon.bevel?.bevelEnabled, icon.bevel?.bevelThickness, icon.bevel?.bevelSize, icon.bevel?.bevelOffset, icon.bevel?.bevelSegments, icon.texture]",{"range":"2153","text":"2154"},"Update the dependencies array to be: [scene, icon, size?.x, size?.y, size?.z, camera.position]",{"range":"2155","text":"2156"},"Update the dependencies array to be: [setStyleId, require, profile, windowWidth, router.asPath, styleId, mapPath, loader.active, setLoader, width, stopLoader, mapOptions, vessels, userVesselConfig, vesselActions, hideHover]",{"range":"2157","text":"2158"},"Wrap the definition of 'handleSearch' in its own useCallback() Hook.",{"range":"2159","text":"2160"},"Update the dependencies array to be: [vesselDetails, initialDimensions, setVessel]",{"range":"2161","text":"2162"},"Update the dependencies array to be: [isDesktop, dimensions.width, dimensions.height, vesselDetails, onResize, closeVessel]",{"range":"2163","text":"2164"},"Update the dependencies array to be: [vesselDetails, isDragging, isDesktop, width, onResize, closeVessel, height]",{"range":"2165","text":"2166"},"Update the dependencies array to be: [animation, cameraPos, colors.background, currentAnimationIndex, disableBelowTerrain, flyTo, isAnimating, lights.ambient, lights.directional, router.pathname, stopAnimation, terrainOverlay.img, terrainOverlay.opacity, terrainOverlay.repeat]",{"range":"2167","text":"2168"},"Update the dependencies array to be: [merchantName, path]",{"range":"2169","text":"2170"},"Update the dependencies array to be: [minMet, maxMet, show]",{"range":"2171","text":"2172"},"Update the dependencies array to be: [id, jsx]",{"range":"2173","text":"2174"},"Update the dependencies array to be: [overlay, traits, variant, setOverlay, setOverlayState, overlayState.active, error, type]",{"range":"2175","text":"2176"},"Update the dependencies array to be: [initAutocomplete]",{"range":"2177","text":"2178"},"Update the dependencies array to be: [unscrollable, setPos, pos]",{"range":"2179","text":"2180"},"Update the dependencies array to be: [title, onSelect, title_]",{"range":"2181","text":"2182"},"Update the dependencies array to be: [isOpen, isModalOpen, isMobileNavOpen, onToggle]",{"range":"2183","text":"2184"},"Update the dependencies array to be: [value]",{"range":"2185","text":"2186"},"Update the dependencies array to be: [fields, disabled, loading, title, handleComplete]",{"range":"2187","text":"2188"},"Wrap the definition of 'setField' in its own useCallback() Hook.",{"range":"2189","text":"2190"},"Wrap the definition of 'onChange' in its own useCallback() Hook.",{"range":"2191","text":"2192"},"Update the dependencies array to be: [handleError, imageControlProps, handleReload, rotate]",{"range":"2193","text":"2194"},"Update the dependencies array to be: []",{"range":"2195","text":"2196"},"Update the dependencies array to be: [pos.x, pos.y, position]",{"range":"2197","text":"2198"},"Update the dependencies array to be: [id, router, user, user_agent_data]",{"range":"2199","text":"2200"},"Update the dependencies array to be: [cls, extras, maxWidths, minWidths, props, standalones, type, variant, width]",{"range":"2201","text":"2202"},"Update the dependencies array to be: [handlePermissionChange, isModalOpen, success, error, openModal, closeModal]",{"range":"2203","text":"2204"},"Update the dependencies array to be: [defaultView, views]",{"range":"2205","text":"2206"},"Update the dependencies array to be: [views, initialKey, history, setView]",{"range":"2207","text":"2208"},"Update the dependencies array to be: [customers, getCustomerList, refresh]",{"range":"2209","text":"2210"},[5714,5758],"[addLocation, addUser, isModalOpen, permissionDenied, profile?.id, profile?.lngLat, requestLocation, require, requirement]",[2744,2763],"[clearanceRoutes, level, router, selectedUser, user]",[945,968],"[user, setClientSecret, fetchClientSecret]",[1270,1272],"[styleMerchant]",[627,629],"[router.query]",[2159,2161],"[initialViews, level, views]",[2906,2908],"[accounts, listAccounts, view]",[953,964],"[account, accountId, getAccount]",[4662,4681],"[customer, formDefaultCustomerAdd, handleAddCustomer]",[1352,1969],"useCallback((formId:string)=>{\n    let initialForm:any = false;\n    if(initialCustomer[formId])initialForm = initialCustomer[formId];\n    if(!initialForm){alert('error');return;}\n    const changedFields = Object.values(customer[formId]).filter((f:any,key:number)=>{\n      const initialValue:any = findField(initialCustomer[formId], f.name)?.value;\n        if(formId !== 'contact' || initialValue == undefined )return;\n       if(f.value !== initialValue)return f\n       else if(f.name == 'address' && initialValue?.line1 !== f.value?.line1)return f\n    }\n    )\n    changedFields?.length && console.log({filt: changedFields})\n    })",[1764,1835],"[customer_id, customer, initialCustomer, adminService, initForms, setNotification]",[3681,3701],"[docs, docService, documents, setLoader]",[2742,2757],"[getData, setSystemData, systemData]",[3350,3379],"[handleSignup, handleSignIn, query, view, newCustomerEmail]",[5899,5901],"[fields, hasPassword]",[698,809],"useCallback((link: any) => {\n    // console.log('link: ', link)\n    if (!link.href) return;\n    router.push(link.href);\n  })",[3002,3257],"useCallback(() => {\n        if (selectedUser) return;\n        // console.log('[ USER ]', { user, guest })\n        if (user || guest) {\n            setView('collect');\n            setUser(user || guest);\n        } else {\n            setView('sign-up');\n        }\n    })",[2903,2905],"[prepareSession]",[1699,1708],"[_cart, cart, setCart]",[1699,1708],[446,448],"[image]",[3058,3067],"[fetchProducts, filters]",[1983,1993],"[loadProducts, products]",[2270,2284],"[handleScroll, loadProducts]",[1281,1283],"[_cart, cart]",[2208,2224],"[loadTransaction, setTransaction]",[5967,5969],"[getHueList, hueData]",[723,725],"[mid, view]",[2560,2562],"[handleLoad]",[5992,6001],"[docs, getDocuments, setDocs]",[2940,2954],"[initUserMethods, selectedUser]",[2799,2810],"[elements, onSuccess, setLoader, setNotification, shippable, stripe, success_url, user.address, user?.name]",[3136,3164],"[stripe, elements, onSubmit, hasPayElem, options]",[2935,2954],"[selected, methods, response, handleMethodClasses, setNotification]",[1076,1082],"[findDefaultMethod, user]",[3836,3853],"[user, setFields, fields, initialFields, onUser]",[4419,4432],"[fieldErrors, fields]",[4744,4762],"[getWidth, windowSize.width]",[4111,4136],"[setToggled, isModalOpen, toggled]",[4411,4448],"[routes, setCurrentRoutes, cartTotal, toggled]",[1190,1200],"[platform, view]",[1604,1606],"[credentials?.username, setLoader, user?.metadata?.user?.social]",[4148,4159],"[initView, intLayout]",[4702,4728],"[state.status, onSuccess, handleVerify]",[4106,4113],"[handleVerify, token]",[3815,3822],"[decryptToken, token, tokenData]",[3976,3990],"[cart, getProducts, isTokenComplete, setTokenData, tokenData?.items]",[2680,2744],"[status, cellWidth, data, options?.index, options.cellHeight, options?.position, rowClickable, width, variant, loading]",[3088,3110],"[adaptStyling, data, loading, variant]",[4181,4193],"[handleResize, isResizing]",[974,984],"[max, min, offsetY, scrollTo, width]",[3978,4000],"[data, handleVisible, limit, options]",[2309,2473],"[width, gap, gapX, gapY, margin, padding, xs, sm, md, lg, xl, ref, focus, reverse, backgroundColor, handleFocus]",[2721,2744],"[width, elClassStylesHandler]",[1491,1513],"[background.type, classHandler, window]",[3139,3145],"[generateCalendarDays, mmYY]",[2638,2666],"[hex, setColor, handleInput, color]",[2651,2653],"[percentage]",[3594,3601],"[handleTitleSize, width]",[3751,3753],"[handleHeaderState, route, router.asPath, setContext]",[1770,1786],"[set]",[2092,2136],"[refreshInterval, loading, error]",[2953,2973],"[handleBodyScroll, handleNotification]",[1808,1821],"[amount, size, width]",[4364,4377],"[camera.position, icon, scene, size.x, size.y, size.z]",[3081,3116],"[icon.metalness, scene, icon.color, icon.roughness, icon.opacity, icon.icon, icon.size.z, icon.bevel?.bevelEnabled, icon.bevel?.bevelThickness, icon.bevel?.bevelSize, icon.bevel?.bevelOffset, icon.bevel?.bevelSegments, icon.texture]",[3705,3718],"[scene, icon, size?.x, size?.y, size?.z, camera.position]",[5874,5966],"[setStyleId, require, profile, windowWidth, router.asPath, styleId, mapPath, loader.active, setLoader, width, stopLoader, mapOptions, vessels, userVesselConfig, vesselActions, hideHover]",[250,551],"useCallback((e: any) => {\n        const value = e.target.value;\n        const searchedLngLat: number[] = [value?.lng, value?.lat];\n        if (searchedLngLat) {\n            setSearched(value);\n            setLngLat(searchedLngLat);\n            flyToView(map, { lngLat: searchedLngLat, zoom: 14 });\n        }\n    })",[1428,1458],"[vesselDetails, initialDimensions, setVessel]",[3046,3092],"[isDesktop, dimensions.width, dimensions.height, vesselDetails, onResize, closeVessel]",[3922,3983],"[vesselDetails, isDragging, isDesktop, width, onResize, closeVessel, height]",[6320,6657],"[animation, cameraPos, colors.background, currentAnimationIndex, disableBelowTerrain, flyTo, isAnimating, lights.ambient, lights.directional, router.pathname, stopAnimation, terrainOverlay.img, terrainOverlay.opacity, terrainOverlay.repeat]",[687,693],"[merchantName, path]",[1218,1234],"[minMet, maxMet, show]",[1622,1638],"[id, jsx]",[3490,3545],"[overlay, traits, variant, setOverlay, setOverlayState, overlayState.active, error, type]",[3765,3767],"[initAutocomplete]",[4226,4248],"[unscrollable, setPos, pos]",[2922,2939],"[title, onSelect, title_]",[3032,3053],"[isOpen, isModalOpen, isMobileNavOpen, onToggle]",[887,911],"[value]",[3833,3867],"[fields, disabled, loading, title, handleComplete]",[623,1211],"useCallback((e: any) => {\n        const { name, value } = e.target;\n        const updateFields = fields.map((field: IFormField) => {\n            let f = field;\n            if (field.name == name) {\n                if (field.name == 'value' && String(field.value).length >= 3) f.error = 'too long';\n                else if (field.error) delete f.error;\n                f.value = value;\n            }\n            return f;\n        });\n        setDisabled(Boolean(updateFields.find((field: IFormField) => { return field.value == undefined || field.value == 0 })));\n        setFields(updateFields);\n    })",[508,855],"useCallback((e: any) => {\n        // Update the name and value properties in parallel within the target object\n        const updatedField = {\n            target: {\n                name: e.target.value ? e.target.value.replaceAll(' ', '_') : 'add-field',\n                value: e.target.value,\n            },\n        };\n        setNewField(updatedField);\n    })",[1847,1910],"[handleError, imageControlProps, handleReload, rotate]",[1903,1917],"[]",[745,755],"[pos.x, pos.y, position]",[522,553],"[id, router, user, user_agent_data]",[2530,2537],"[cls, extras, maxWidths, minWidths, props, standalones, type, variant, width]",[2879,2932],"[handlePermissionChange, isModalOpen, success, error, openModal, closeModal]",[1035,1037],"[defaultView, views]",[1079,1100],"[views, initialKey, history, setView]",[3335,3344],"[customers, getCustomerList, refresh]"]